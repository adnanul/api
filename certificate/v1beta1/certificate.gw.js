// Code generated by protoc-gen-grpc-js-client
// source: certificate.proto
// DO NOT EDIT!

/*
This is a RSVP based Ajax client for gRPC gateway JSON APIs.
*/

var xhr = require('grpc-xhr');

function certificatesList(p, conf) {
    path = '/certificate/v1beta1/certificates'
    return xhr(path, 'GET', conf, p);
}

function certificatesDescribe(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['uid']
    delete p['uid']
    return xhr(path, 'GET', conf, p);
}

function certificatesCreate(p, conf) {
    path = '/certificate/v1beta1/certificates'
    return xhr(path, 'POST', conf, null, p);
}

function certificatesImport(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['name'] + '/actions/import'
    delete p['name']
    return xhr(path, 'PUT', conf, null, p);
}

function certificatesDelete(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['uid']
    delete p['uid']
    return xhr(path, 'DELETE', conf, p);
}

function certificatesRenew(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['uid'] + '/actions/renew'
    delete p['uid']
    return xhr(path, 'POST', conf, p);
}

function certificatesRevoke(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['uid'] + '/actions/revoke'
    delete p['uid']
    return xhr(path, 'PUT', conf, p);
}

function certificatesDeploy(p, conf) {
    path = '/certificate/v1beta1/certificates/' + p['uid'] + '/actions/deploy'
    delete p['uid']
    return xhr(path, 'PUT', conf, null, p);
}

var services = {
    certificates: {
        list: certificatesList,
        describe: certificatesDescribe,
        create: certificatesCreate,
        import: certificatesImport,
        delete: certificatesDelete,
        renew: certificatesRenew,
        revoke: certificatesRevoke,
        deploy: certificatesDeploy
    }
};

module.exports = {certificate: {v1beta1: services}};
