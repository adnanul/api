// Code generated by protoc-gen-go.
// source: alert.proto
// DO NOT EDIT!

/*
Package alert is a generated protocol buffer package.

It is generated from these files:
	alert.proto
	notification.proto

It has these top-level messages:
	IcingaParam
	CheckInfluxData
	CheckKubernetes
	CommandParam
	IcingaState
	NotifierParam
	Alert
	ListRequest
	ListResponse
	CreateRequest
	UpdateRequest
	DeleteRequest
	NotifyRequest
	AcknowledgeRequest
*/
package alert

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IcingaParam struct {
	CheckIntervalSec int64 `protobuf:"varint,1,opt,name=check_interval_sec,json=checkIntervalSec" json:"check_interval_sec,omitempty"`
	AlertIntervalSec int64 `protobuf:"varint,2,opt,name=alert_interval_sec,json=alertIntervalSec" json:"alert_interval_sec,omitempty"`
}

func (m *IcingaParam) Reset()                    { *m = IcingaParam{} }
func (m *IcingaParam) String() string            { return proto.CompactTextString(m) }
func (*IcingaParam) ProtoMessage()               {}
func (*IcingaParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CheckInfluxData struct {
	KubernetesNamespace string            `protobuf:"bytes,1,opt,name=kubernetes_namespace,json=kubernetesNamespace" json:"kubernetes_namespace,omitempty"`
	ObjectName          string            `protobuf:"bytes,2,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
	Query               map[string]string `protobuf:"bytes,3,rep,name=query" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	R                   string            `protobuf:"bytes,4,opt,name=r" json:"r,omitempty"`
	WarningCondition    string            `protobuf:"bytes,5,opt,name=warning_condition,json=warningCondition" json:"warning_condition,omitempty"`
	CriticalCondition   string            `protobuf:"bytes,6,opt,name=critical_condition,json=criticalCondition" json:"critical_condition,omitempty"`
}

func (m *CheckInfluxData) Reset()                    { *m = CheckInfluxData{} }
func (m *CheckInfluxData) String() string            { return proto.CompactTextString(m) }
func (*CheckInfluxData) ProtoMessage()               {}
func (*CheckInfluxData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckInfluxData) GetQuery() map[string]string {
	if m != nil {
		return m.Query
	}
	return nil
}

type CheckKubernetes struct {
	Type     string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Count    int64  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Selector string `protobuf:"bytes,3,opt,name=selector" json:"selector,omitempty"`
}

func (m *CheckKubernetes) Reset()                    { *m = CheckKubernetes{} }
func (m *CheckKubernetes) String() string            { return proto.CompactTextString(m) }
func (*CheckKubernetes) ProtoMessage()               {}
func (*CheckKubernetes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CommandParam struct {
	CheckInfluxData *CheckInfluxData `protobuf:"bytes,1,opt,name=check_influx_data,json=checkInfluxData" json:"check_influx_data,omitempty"`
	CheckKubernetes *CheckKubernetes `protobuf:"bytes,2,opt,name=check_kubernetes,json=checkKubernetes" json:"check_kubernetes,omitempty"`
}

func (m *CommandParam) Reset()                    { *m = CommandParam{} }
func (m *CommandParam) String() string            { return proto.CompactTextString(m) }
func (*CommandParam) ProtoMessage()               {}
func (*CommandParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CommandParam) GetCheckInfluxData() *CheckInfluxData {
	if m != nil {
		return m.CheckInfluxData
	}
	return nil
}

func (m *CommandParam) GetCheckKubernetes() *CheckKubernetes {
	if m != nil {
		return m.CheckKubernetes
	}
	return nil
}

// This one is used in kubernetes/v0.1/client.proto
// To send information if alert is set for app/pod
type IcingaState struct {
	OK       int32 `protobuf:"varint,1,opt,name=OK,json=oK" json:"OK,omitempty"`
	Warning  int32 `protobuf:"varint,2,opt,name=Warning,json=warning" json:"Warning,omitempty"`
	Critical int32 `protobuf:"varint,3,opt,name=Critical,json=critical" json:"Critical,omitempty"`
	Unknown  int32 `protobuf:"varint,4,opt,name=Unknown,json=unknown" json:"Unknown,omitempty"`
}

func (m *IcingaState) Reset()                    { *m = IcingaState{} }
func (m *IcingaState) String() string            { return proto.CompactTextString(m) }
func (*IcingaState) ProtoMessage()               {}
func (*IcingaState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type NotifierParam struct {
	State   string `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	UserUid string `protobuf:"bytes,2,opt,name=user_uid,json=userUid" json:"user_uid,omitempty"`
	Method  string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *NotifierParam) Reset()                    { *m = NotifierParam{} }
func (m *NotifierParam) String() string            { return proto.CompactTextString(m) }
func (*NotifierParam) ProtoMessage()               {}
func (*NotifierParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Alert struct {
	Phid          string           `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	Cluster       string           `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Plugin        string           `protobuf:"bytes,3,opt,name=plugin" json:"plugin,omitempty"`
	IcingaService string           `protobuf:"bytes,4,opt,name=icinga_service,json=icingaService" json:"icinga_service,omitempty"`
	IcingaParam   *IcingaParam     `protobuf:"bytes,5,opt,name=icinga_param,json=icingaParam" json:"icinga_param,omitempty"`
	CheckCommand  string           `protobuf:"bytes,6,opt,name=check_command,json=checkCommand" json:"check_command,omitempty"`
	CommandParam  *CommandParam    `protobuf:"bytes,7,opt,name=command_param,json=commandParam" json:"command_param,omitempty"`
	NotifierParam []*NotifierParam `protobuf:"bytes,8,rep,name=notifier_param,json=notifierParam" json:"notifier_param,omitempty"`
	IcingawebUrl  string           `protobuf:"bytes,9,opt,name=icingaweb_url,json=icingawebUrl" json:"icingaweb_url,omitempty"`
}

func (m *Alert) Reset()                    { *m = Alert{} }
func (m *Alert) String() string            { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()               {}
func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Alert) GetIcingaParam() *IcingaParam {
	if m != nil {
		return m.IcingaParam
	}
	return nil
}

func (m *Alert) GetCommandParam() *CommandParam {
	if m != nil {
		return m.CommandParam
	}
	return nil
}

func (m *Alert) GetNotifierParam() []*NotifierParam {
	if m != nil {
		return m.NotifierParam
	}
	return nil
}

type ListRequest struct {
	Cluster             string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Plugin              string `protobuf:"bytes,2,opt,name=plugin" json:"plugin,omitempty"`
	KubernetesNamespace string `protobuf:"bytes,3,opt,name=kubernetes_namespace,json=kubernetesNamespace" json:"kubernetes_namespace,omitempty"`
	ObjectName          string `protobuf:"bytes,4,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ListResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Alerts []*Alert       `protobuf:"bytes,2,rep,name=alerts" json:"alerts,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

type CreateRequest struct {
	Cluster       string           `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Plugin        string           `protobuf:"bytes,2,opt,name=plugin" json:"plugin,omitempty"`
	IcingaService string           `protobuf:"bytes,3,opt,name=icinga_service,json=icingaService" json:"icinga_service,omitempty"`
	IcingaParam   *IcingaParam     `protobuf:"bytes,4,opt,name=icinga_param,json=icingaParam" json:"icinga_param,omitempty"`
	CheckCommand  string           `protobuf:"bytes,5,opt,name=check_command,json=checkCommand" json:"check_command,omitempty"`
	CommandParam  *CommandParam    `protobuf:"bytes,6,opt,name=command_param,json=commandParam" json:"command_param,omitempty"`
	NotifierParam []*NotifierParam `protobuf:"bytes,7,rep,name=notifier_param,json=notifierParam" json:"notifier_param,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateRequest) GetIcingaParam() *IcingaParam {
	if m != nil {
		return m.IcingaParam
	}
	return nil
}

func (m *CreateRequest) GetCommandParam() *CommandParam {
	if m != nil {
		return m.CommandParam
	}
	return nil
}

func (m *CreateRequest) GetNotifierParam() []*NotifierParam {
	if m != nil {
		return m.NotifierParam
	}
	return nil
}

type UpdateRequest struct {
	Phid          string           `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	IcingaParam   *IcingaParam     `protobuf:"bytes,2,opt,name=icinga_param,json=icingaParam" json:"icinga_param,omitempty"`
	CommandParam  *CommandParam    `protobuf:"bytes,3,opt,name=command_param,json=commandParam" json:"command_param,omitempty"`
	NotifierParam []*NotifierParam `protobuf:"bytes,4,rep,name=notifier_param,json=notifierParam" json:"notifier_param,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateRequest) GetIcingaParam() *IcingaParam {
	if m != nil {
		return m.IcingaParam
	}
	return nil
}

func (m *UpdateRequest) GetCommandParam() *CommandParam {
	if m != nil {
		return m.CommandParam
	}
	return nil
}

func (m *UpdateRequest) GetNotifierParam() []*NotifierParam {
	if m != nil {
		return m.NotifierParam
	}
	return nil
}

type DeleteRequest struct {
	Phid string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func init() {
	proto.RegisterType((*IcingaParam)(nil), "alert.IcingaParam")
	proto.RegisterType((*CheckInfluxData)(nil), "alert.CheckInfluxData")
	proto.RegisterType((*CheckKubernetes)(nil), "alert.CheckKubernetes")
	proto.RegisterType((*CommandParam)(nil), "alert.CommandParam")
	proto.RegisterType((*IcingaState)(nil), "alert.IcingaState")
	proto.RegisterType((*NotifierParam)(nil), "alert.NotifierParam")
	proto.RegisterType((*Alert)(nil), "alert.Alert")
	proto.RegisterType((*ListRequest)(nil), "alert.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "alert.ListResponse")
	proto.RegisterType((*CreateRequest)(nil), "alert.CreateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "alert.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "alert.DeleteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for Alerts service

type AlertsClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error)
}

type alertsClient struct {
	cc *grpc.ClientConn
}

func NewAlertsClient(cc *grpc.ClientConn) AlertsClient {
	return &alertsClient{cc}
}

func (c *alertsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/alert.Alerts/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertsClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/alert.Alerts/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertsClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/alert.Alerts/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertsClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*dtypes.VoidResponse, error) {
	out := new(dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/alert.Alerts/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Alerts service

type AlertsServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Create(context.Context, *CreateRequest) (*dtypes.VoidResponse, error)
	Update(context.Context, *UpdateRequest) (*dtypes.VoidResponse, error)
	Delete(context.Context, *DeleteRequest) (*dtypes.VoidResponse, error)
}

func RegisterAlertsServer(s *grpc.Server, srv AlertsServer) {
	s.RegisterService(&_Alerts_serviceDesc, srv)
}

func _Alerts_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alert.Alerts/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alerts_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alert.Alerts/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alerts_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alert.Alerts/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alerts_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alert.Alerts/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Alerts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alert.Alerts",
	HandlerType: (*AlertsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Alerts_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Alerts_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Alerts_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Alerts_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

func init() { proto.RegisterFile("alert.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 967 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xd6, 0xae, 0xbd, 0xeb, 0xe4, 0xd8, 0x4e, 0x93, 0x49, 0x14, 0x19, 0x0b, 0xa9, 0xed, 0x52,
	0x4a, 0x94, 0x82, 0x4d, 0x82, 0x10, 0x51, 0xb9, 0x2a, 0x2e, 0x17, 0x55, 0x50, 0x81, 0x8d, 0x42,
	0x7b, 0x81, 0x64, 0x36, 0xbb, 0x53, 0x67, 0xc8, 0x7a, 0x66, 0x99, 0xd9, 0x4d, 0x88, 0x10, 0x37,
	0xbc, 0x42, 0xc4, 0xd3, 0x70, 0xc7, 0x1b, 0x20, 0x5e, 0x81, 0x4b, 0x1e, 0x82, 0xf9, 0x5b, 0x7b,
	0xd7, 0x6d, 0xa8, 0xe5, 0x9b, 0xd5, 0x9c, 0x9f, 0x39, 0x3f, 0xdf, 0xf9, 0xce, 0x68, 0xa1, 0x1d,
	0xa5, 0x98, 0xe7, 0x83, 0x8c, 0xb3, 0x9c, 0x21, 0x4f, 0x0b, 0xfd, 0x77, 0x27, 0x8c, 0x4d, 0x52,
	0x3c, 0x8c, 0x32, 0x32, 0x8c, 0x28, 0x65, 0x79, 0x94, 0x13, 0x46, 0x85, 0x71, 0xea, 0xef, 0x2a,
	0x75, 0x92, 0x5f, 0x67, 0x58, 0x0c, 0xf5, 0xd7, 0xe8, 0x03, 0x02, 0xed, 0x67, 0x31, 0xa1, 0x93,
	0xe8, 0x9b, 0x88, 0x47, 0x53, 0xf4, 0x21, 0xa0, 0xf8, 0x1c, 0xc7, 0x17, 0x63, 0x42, 0x73, 0xcc,
	0x2f, 0xa3, 0x74, 0x2c, 0x70, 0xdc, 0x73, 0xee, 0x39, 0x7b, 0x8d, 0x70, 0x53, 0x5b, 0x9e, 0x59,
	0xc3, 0x09, 0x8e, 0x95, 0xb7, 0xce, 0x5d, 0xf7, 0x76, 0x8d, 0xb7, 0xb6, 0x54, 0xbc, 0x83, 0x3f,
	0x5d, 0xb8, 0x33, 0x32, 0x21, 0x5e, 0xa5, 0xc5, 0xcf, 0x4f, 0xa3, 0x3c, 0x42, 0x07, 0xb0, 0x73,
	0x51, 0x9c, 0x61, 0x4e, 0x71, 0x8e, 0xc5, 0x98, 0x46, 0x53, 0x2c, 0xb2, 0x28, 0xc6, 0x3a, 0xe3,
	0x7a, 0xb8, 0x3d, 0xb7, 0x3d, 0x2f, 0x4d, 0xe8, 0x2e, 0xb4, 0xd9, 0xd9, 0x8f, 0x38, 0xce, 0xb5,
	0xbb, 0xce, 0xb6, 0x1e, 0x82, 0x51, 0x29, 0x2f, 0xf4, 0x19, 0x78, 0x3f, 0x15, 0x98, 0x5f, 0xf7,
	0x1a, 0xf7, 0x1a, 0x7b, 0xed, 0xc3, 0xfb, 0x03, 0x03, 0xd6, 0x42, 0xea, 0xc1, 0xb7, 0xca, 0xe7,
	0x4b, 0x9a, 0xf3, 0xeb, 0xd0, 0xf8, 0xa3, 0x0e, 0x38, 0xbc, 0xd7, 0xd4, 0xf1, 0x1c, 0x8e, 0x1e,
	0xc1, 0xd6, 0x55, 0xc4, 0xa9, 0xc4, 0x66, 0x1c, 0x33, 0x9a, 0x10, 0x85, 0x66, 0xcf, 0xd3, 0xd6,
	0x4d, 0x6b, 0x18, 0x95, 0x7a, 0xf4, 0x91, 0xc4, 0x8d, 0xcb, 0x63, 0x2c, 0x31, 0x98, 0x7b, 0xfb,
	0xda, 0x7b, 0xab, 0xb4, 0xcc, 0xdc, 0xfb, 0x47, 0x00, 0xf3, 0xf4, 0x68, 0x13, 0x1a, 0x17, 0xf8,
	0xda, 0xf6, 0xac, 0x8e, 0x68, 0x07, 0x3c, 0x09, 0x5a, 0x51, 0x76, 0x67, 0x84, 0xc7, 0xee, 0x91,
	0x13, 0xbc, 0xb0, 0x18, 0x1e, 0xcf, 0x90, 0x41, 0x08, 0x9a, 0x6a, 0xa2, 0xf6, 0xbe, 0x3e, 0xab,
	0x00, 0x31, 0x2b, 0x68, 0x6e, 0x87, 0x61, 0x04, 0xd4, 0x87, 0x35, 0x81, 0x53, 0x89, 0x13, 0xe3,
	0x12, 0x1c, 0xe5, 0x3d, 0x93, 0x83, 0xdf, 0x1d, 0xe8, 0x8c, 0xd8, 0x74, 0x1a, 0xd1, 0xc4, 0x50,
	0xe1, 0x0b, 0xd8, 0x2a, 0xa9, 0xa0, 0x30, 0x1b, 0x27, 0x12, 0x34, 0x9d, 0xa3, 0x7d, 0xb8, 0xfb,
	0x66, 0x48, 0xc3, 0x3b, 0xf1, 0xc2, 0x78, 0x9f, 0x80, 0x21, 0xcd, 0x78, 0x3e, 0x48, 0x5d, 0xd1,
	0x42, 0x88, 0x79, 0x33, 0x36, 0xc4, 0x5c, 0x11, 0x4c, 0x4b, 0x82, 0x9e, 0x48, 0x42, 0x63, 0xb4,
	0x01, 0xee, 0xd7, 0xc7, 0xba, 0x0c, 0x2f, 0x74, 0xd9, 0x31, 0xea, 0x41, 0xeb, 0x85, 0x19, 0x86,
	0x0e, 0xec, 0x85, 0x2d, 0x3b, 0x1b, 0xd5, 0xec, 0xc8, 0x02, 0xaf, 0x9b, 0xf5, 0xc2, 0xb5, 0x72,
	0x10, 0xea, 0xd6, 0x29, 0xbd, 0xa0, 0xec, 0x8a, 0xea, 0x79, 0xcb, 0x5b, 0x85, 0x11, 0x83, 0x97,
	0xd0, 0x7d, 0xce, 0x72, 0xf2, 0x8a, 0x60, 0x6e, 0x60, 0x90, 0x48, 0x0a, 0x95, 0xd9, 0xc2, 0x6b,
	0x04, 0xf4, 0x0e, 0xac, 0x15, 0x02, 0xf3, 0x71, 0x41, 0x12, 0x3b, 0xa3, 0x96, 0x92, 0x4f, 0x49,
	0x82, 0x76, 0xc1, 0x9f, 0xe2, 0xfc, 0x9c, 0x25, 0x16, 0x62, 0x2b, 0x05, 0xff, 0xba, 0xe0, 0x3d,
	0x51, 0x3d, 0xab, 0x81, 0x65, 0xe7, 0xf2, 0xa2, 0x1d, 0x98, 0x3a, 0xab, 0x8a, 0xe2, 0xb4, 0x10,
	0x72, 0x5b, 0xca, 0x78, 0x56, 0x54, 0xf1, 0xb2, 0xb4, 0x98, 0x10, 0x5a, 0xc6, 0x33, 0x12, 0x7a,
	0x1f, 0x36, 0x88, 0x06, 0x46, 0x2e, 0x1d, 0xbf, 0x24, 0x72, 0x69, 0x0c, 0x75, 0xbb, 0x46, 0x7b,
	0x62, 0x94, 0xe8, 0x53, 0xe8, 0x58, 0xb7, 0x4c, 0xf5, 0xa3, 0x19, 0xdc, 0x3e, 0x44, 0x16, 0xfe,
	0xca, 0xee, 0x87, 0x6d, 0x52, 0x79, 0x08, 0xde, 0x83, 0xae, 0x99, 0x5c, 0x6c, 0x38, 0x61, 0xb9,
	0xdc, 0xd1, 0x4a, 0xcb, 0x13, 0x74, 0x24, 0x9d, 0xcc, 0xd1, 0x06, 0x6f, 0xe9, 0xe0, 0xdb, 0xe5,
	0x6c, 0x2b, 0x74, 0x92, 0x37, 0xab, 0xe4, 0xfa, 0x1c, 0x36, 0xa8, 0x85, 0xd9, 0x5e, 0x5d, 0xd3,
	0xcb, 0xba, 0x63, 0xaf, 0xd6, 0x66, 0x10, 0x76, 0x69, 0x6d, 0x24, 0xb2, 0x36, 0x53, 0xea, 0x15,
	0x3e, 0x1b, 0x17, 0x3c, 0xed, 0xad, 0x9b, 0xda, 0x66, 0xca, 0x53, 0x9e, 0x06, 0x37, 0x0e, 0xb4,
	0xbf, 0x22, 0x22, 0x0f, 0xb1, 0x5c, 0x6e, 0x91, 0x57, 0x01, 0x76, 0x6e, 0x03, 0xd8, 0xad, 0x01,
	0x7c, 0xdb, 0xdb, 0xd4, 0x58, 0xfa, 0x6d, 0x6a, 0x2e, 0xbe, 0x4d, 0xc1, 0xf7, 0xd0, 0x31, 0x45,
	0x89, 0x4c, 0xbe, 0xcd, 0x18, 0x3d, 0x04, 0x5f, 0x11, 0xaa, 0x10, 0x76, 0xb3, 0x36, 0x06, 0xe6,
	0x8d, 0x1e, 0x9c, 0x68, 0x6d, 0x68, 0xad, 0xe8, 0x01, 0xf8, 0x1a, 0x18, 0xb5, 0x3e, 0x0a, 0xa7,
	0x8e, 0xc5, 0x49, 0x13, 0x2a, 0xb4, 0xb6, 0xe0, 0x0f, 0x17, 0xba, 0x23, 0x8e, 0x25, 0x41, 0x57,
	0xef, 0xfa, 0x75, 0x5a, 0x35, 0x96, 0xa1, 0x55, 0x73, 0x45, 0x5a, 0x79, 0xcb, 0xd0, 0xca, 0x5f,
	0x9d, 0x56, 0xad, 0xa5, 0x69, 0x15, 0xfc, 0xe5, 0x40, 0xf7, 0x34, 0x4b, 0x2a, 0xe8, 0xbd, 0x69,
	0x51, 0x17, 0x1b, 0x77, 0x97, 0x6b, 0xfc, 0xb5, 0x9e, 0x1a, 0xab, 0xf7, 0xd4, 0x5c, 0xbe, 0x27,
	0x89, 0xf7, 0x53, 0xf9, 0xc2, 0xff, 0x6f, 0x4b, 0x87, 0x37, 0x0d, 0xf0, 0x35, 0x91, 0x04, 0x7a,
	0x09, 0x4d, 0xc5, 0x4f, 0x54, 0xf6, 0x53, 0xd9, 0xa0, 0xfe, 0x76, 0x4d, 0x67, 0x08, 0x1c, 0x7c,
	0xf0, 0xdb, 0xdf, 0xff, 0xdc, 0xb8, 0xf7, 0xd1, 0x5d, 0xf9, 0xdf, 0x91, 0x89, 0x98, 0x25, 0xf6,
	0x07, 0x44, 0x79, 0x0e, 0x2f, 0x3f, 0x1e, 0x1c, 0x98, 0xa3, 0x40, 0x3f, 0x80, 0x6f, 0xa8, 0x89,
	0xca, 0xc2, 0x6b, 0x4c, 0xed, 0xef, 0x94, 0xcc, 0xff, 0x8e, 0x91, 0x64, 0x16, 0x7e, 0x5f, 0x87,
	0x7f, 0xd0, 0x7f, 0x5b, 0xf8, 0xc7, 0xce, 0x3e, 0x9a, 0x80, 0x6f, 0xc6, 0x37, 0xcb, 0x50, 0x9b,
	0xe6, 0x2d, 0x19, 0x0e, 0x74, 0x86, 0x47, 0xc1, 0xc3, 0xb7, 0x64, 0x18, 0xfe, 0xa2, 0xb0, 0xfa,
	0x55, 0x25, 0x4a, 0xc0, 0x37, 0xa0, 0xce, 0x12, 0xd5, 0x30, 0xbe, 0x25, 0xd1, 0x40, 0x27, 0xda,
	0xdb, 0x5f, 0x32, 0xd1, 0x99, 0xaf, 0x7f, 0xd0, 0x3e, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x55,
	0x80, 0xf5, 0x73, 0xec, 0x09, 0x00, 0x00,
}
