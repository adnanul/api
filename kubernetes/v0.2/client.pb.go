// Code generated by protoc-gen-go.
// source: client.proto
// DO NOT EDIT!

/*
Package kubernetes is a generated protocol buffer package.

It is generated from these files:
	client.proto

It has these top-level messages:
	ListResourceRequest
	ListResourceResponse
	DescribeResourceRequest
	DescribeResourceResponse
	UpdateResourceRequest
	ConfigMapUpdateRequest
	SecretUpdateRequest
	ClientActionResponse
	CopyResourceRequest
	DeleteResourceRequest
	KubeResourceList
	KubeResource
	Meta
	KubeObject
	App
	PodSpec
	Raw
	ConfigMap
	Job
	Namespace
	Node
	Pod
	Service
	Secret
	ReplicationController
	ReplicaSet
	DaemonSet
	Deployment
	PetSet
	LabelSelector
*/
package kubernetes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import dtypes "github.com/appscode/api/dtypes"
import alert "github.com/appscode/api/alert/v0.1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListResourceRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
}

func (m *ListResourceRequest) Reset()                    { *m = ListResourceRequest{} }
func (m *ListResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*ListResourceRequest) ProtoMessage()               {}
func (*ListResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListResourceResponse struct {
	Status    *dtypes.Status    `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Resources *KubeResourceList `protobuf:"bytes,2,opt,name=resources" json:"resources,omitempty"`
}

func (m *ListResourceResponse) Reset()                    { *m = ListResourceResponse{} }
func (m *ListResourceResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResourceResponse) ProtoMessage()               {}
func (*ListResourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListResourceResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResourceResponse) GetResources() *KubeResourceList {
	if m != nil {
		return m.Resources
	}
	return nil
}

type DescribeResourceRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Raw       string `protobuf:"bytes,5,opt,name=raw" json:"raw,omitempty"`
}

func (m *DescribeResourceRequest) Reset()                    { *m = DescribeResourceRequest{} }
func (m *DescribeResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeResourceRequest) ProtoMessage()               {}
func (*DescribeResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type DescribeResourceResponse struct {
	Status   *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Resource *KubeResource  `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
}

func (m *DescribeResourceResponse) Reset()                    { *m = DescribeResourceResponse{} }
func (m *DescribeResourceResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeResourceResponse) ProtoMessage()               {}
func (*DescribeResourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DescribeResourceResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeResourceResponse) GetResource() *KubeResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type UpdateResourceRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Raw       *Raw   `protobuf:"bytes,5,opt,name=raw" json:"raw,omitempty"`
}

func (m *UpdateResourceRequest) Reset()                    { *m = UpdateResourceRequest{} }
func (m *UpdateResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateResourceRequest) ProtoMessage()               {}
func (*UpdateResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateResourceRequest) GetRaw() *Raw {
	if m != nil {
		return m.Raw
	}
	return nil
}

type ConfigMapUpdateRequest struct {
	Cluster   string            `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Namespace string            `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Add       map[string]string `protobuf:"bytes,4,rep,name=add" json:"add,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Update    map[string]string `protobuf:"bytes,5,rep,name=update" json:"update,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Deleted   []string          `protobuf:"bytes,6,rep,name=deleted" json:"deleted,omitempty"`
}

func (m *ConfigMapUpdateRequest) Reset()                    { *m = ConfigMapUpdateRequest{} }
func (m *ConfigMapUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfigMapUpdateRequest) ProtoMessage()               {}
func (*ConfigMapUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ConfigMapUpdateRequest) GetAdd() map[string]string {
	if m != nil {
		return m.Add
	}
	return nil
}

func (m *ConfigMapUpdateRequest) GetUpdate() map[string]string {
	if m != nil {
		return m.Update
	}
	return nil
}

type SecretUpdateRequest struct {
	Cluster   string            `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Namespace string            `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Add       map[string]string `protobuf:"bytes,4,rep,name=add" json:"add,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Update    map[string]string `protobuf:"bytes,5,rep,name=update" json:"update,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Deleted   []string          `protobuf:"bytes,6,rep,name=deleted" json:"deleted,omitempty"`
}

func (m *SecretUpdateRequest) Reset()                    { *m = SecretUpdateRequest{} }
func (m *SecretUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*SecretUpdateRequest) ProtoMessage()               {}
func (*SecretUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SecretUpdateRequest) GetAdd() map[string]string {
	if m != nil {
		return m.Add
	}
	return nil
}

func (m *SecretUpdateRequest) GetUpdate() map[string]string {
	if m != nil {
		return m.Update
	}
	return nil
}

type ClientActionResponse struct {
	Status *dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *ClientActionResponse) Reset()                    { *m = ClientActionResponse{} }
func (m *ClientActionResponse) String() string            { return proto.CompactTextString(m) }
func (*ClientActionResponse) ProtoMessage()               {}
func (*ClientActionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ClientActionResponse) GetStatus() *dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type CopyResourceRequest struct {
	Source      *KubeObject `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Destination *KubeObject `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
}

func (m *CopyResourceRequest) Reset()                    { *m = CopyResourceRequest{} }
func (m *CopyResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CopyResourceRequest) ProtoMessage()               {}
func (*CopyResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CopyResourceRequest) GetSource() *KubeObject {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CopyResourceRequest) GetDestination() *KubeObject {
	if m != nil {
		return m.Destination
	}
	return nil
}

type DeleteResourceRequest struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteResourceRequest) Reset()                    { *m = DeleteResourceRequest{} }
func (m *DeleteResourceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteResourceRequest) ProtoMessage()               {}
func (*DeleteResourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type KubeResourceList struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Types that are valid to be assigned to Resource:
	//	*KubeResourceList_Apps_
	//	*KubeResourceList_ConfigMaps_
	//	*KubeResourceList_DaemonSets_
	//	*KubeResourceList_Deployments_
	//	*KubeResourceList_Jobs_
	//	*KubeResourceList_Namespaces_
	//	*KubeResourceList_Nodes_
	//	*KubeResourceList_PetSets_
	//	*KubeResourceList_Pods_
	//	*KubeResourceList_ReplicaSets_
	//	*KubeResourceList_Services_
	//	*KubeResourceList_Secrets_
	//	*KubeResourceList_ReplicationControllers_
	Resource isKubeResourceList_Resource `protobuf_oneof:"resource"`
}

func (m *KubeResourceList) Reset()                    { *m = KubeResourceList{} }
func (m *KubeResourceList) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList) ProtoMessage()               {}
func (*KubeResourceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type isKubeResourceList_Resource interface {
	isKubeResourceList_Resource()
}

type KubeResourceList_Apps_ struct {
	Apps *KubeResourceList_Apps `protobuf:"bytes,2,opt,name=apps,oneof"`
}
type KubeResourceList_ConfigMaps_ struct {
	ConfigMaps *KubeResourceList_ConfigMaps `protobuf:"bytes,3,opt,name=config_maps,json=configMaps,oneof"`
}
type KubeResourceList_DaemonSets_ struct {
	DaemonSets *KubeResourceList_DaemonSets `protobuf:"bytes,4,opt,name=daemon_sets,json=daemonSets,oneof"`
}
type KubeResourceList_Deployments_ struct {
	Deployments *KubeResourceList_Deployments `protobuf:"bytes,5,opt,name=deployments,oneof"`
}
type KubeResourceList_Jobs_ struct {
	Jobs *KubeResourceList_Jobs `protobuf:"bytes,6,opt,name=jobs,oneof"`
}
type KubeResourceList_Namespaces_ struct {
	Namespaces *KubeResourceList_Namespaces `protobuf:"bytes,7,opt,name=namespaces,oneof"`
}
type KubeResourceList_Nodes_ struct {
	Nodes *KubeResourceList_Nodes `protobuf:"bytes,8,opt,name=nodes,oneof"`
}
type KubeResourceList_PetSets_ struct {
	PetSets *KubeResourceList_PetSets `protobuf:"bytes,9,opt,name=pet_sets,json=petSets,oneof"`
}
type KubeResourceList_Pods_ struct {
	Pods *KubeResourceList_Pods `protobuf:"bytes,10,opt,name=pods,oneof"`
}
type KubeResourceList_ReplicaSets_ struct {
	ReplicaSets *KubeResourceList_ReplicaSets `protobuf:"bytes,11,opt,name=replica_sets,json=replicaSets,oneof"`
}
type KubeResourceList_Services_ struct {
	Services *KubeResourceList_Services `protobuf:"bytes,12,opt,name=services,oneof"`
}
type KubeResourceList_Secrets_ struct {
	Secrets *KubeResourceList_Secrets `protobuf:"bytes,13,opt,name=secrets,oneof"`
}
type KubeResourceList_ReplicationControllers_ struct {
	ReplicationControllers *KubeResourceList_ReplicationControllers `protobuf:"bytes,14,opt,name=replication_controllers,json=replicationControllers,oneof"`
}

func (*KubeResourceList_Apps_) isKubeResourceList_Resource()                   {}
func (*KubeResourceList_ConfigMaps_) isKubeResourceList_Resource()             {}
func (*KubeResourceList_DaemonSets_) isKubeResourceList_Resource()             {}
func (*KubeResourceList_Deployments_) isKubeResourceList_Resource()            {}
func (*KubeResourceList_Jobs_) isKubeResourceList_Resource()                   {}
func (*KubeResourceList_Namespaces_) isKubeResourceList_Resource()             {}
func (*KubeResourceList_Nodes_) isKubeResourceList_Resource()                  {}
func (*KubeResourceList_PetSets_) isKubeResourceList_Resource()                {}
func (*KubeResourceList_Pods_) isKubeResourceList_Resource()                   {}
func (*KubeResourceList_ReplicaSets_) isKubeResourceList_Resource()            {}
func (*KubeResourceList_Services_) isKubeResourceList_Resource()               {}
func (*KubeResourceList_Secrets_) isKubeResourceList_Resource()                {}
func (*KubeResourceList_ReplicationControllers_) isKubeResourceList_Resource() {}

func (m *KubeResourceList) GetResource() isKubeResourceList_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *KubeResourceList) GetApps() *KubeResourceList_Apps {
	if x, ok := m.GetResource().(*KubeResourceList_Apps_); ok {
		return x.Apps
	}
	return nil
}

func (m *KubeResourceList) GetConfigMaps() *KubeResourceList_ConfigMaps {
	if x, ok := m.GetResource().(*KubeResourceList_ConfigMaps_); ok {
		return x.ConfigMaps
	}
	return nil
}

func (m *KubeResourceList) GetDaemonSets() *KubeResourceList_DaemonSets {
	if x, ok := m.GetResource().(*KubeResourceList_DaemonSets_); ok {
		return x.DaemonSets
	}
	return nil
}

func (m *KubeResourceList) GetDeployments() *KubeResourceList_Deployments {
	if x, ok := m.GetResource().(*KubeResourceList_Deployments_); ok {
		return x.Deployments
	}
	return nil
}

func (m *KubeResourceList) GetJobs() *KubeResourceList_Jobs {
	if x, ok := m.GetResource().(*KubeResourceList_Jobs_); ok {
		return x.Jobs
	}
	return nil
}

func (m *KubeResourceList) GetNamespaces() *KubeResourceList_Namespaces {
	if x, ok := m.GetResource().(*KubeResourceList_Namespaces_); ok {
		return x.Namespaces
	}
	return nil
}

func (m *KubeResourceList) GetNodes() *KubeResourceList_Nodes {
	if x, ok := m.GetResource().(*KubeResourceList_Nodes_); ok {
		return x.Nodes
	}
	return nil
}

func (m *KubeResourceList) GetPetSets() *KubeResourceList_PetSets {
	if x, ok := m.GetResource().(*KubeResourceList_PetSets_); ok {
		return x.PetSets
	}
	return nil
}

func (m *KubeResourceList) GetPods() *KubeResourceList_Pods {
	if x, ok := m.GetResource().(*KubeResourceList_Pods_); ok {
		return x.Pods
	}
	return nil
}

func (m *KubeResourceList) GetReplicaSets() *KubeResourceList_ReplicaSets {
	if x, ok := m.GetResource().(*KubeResourceList_ReplicaSets_); ok {
		return x.ReplicaSets
	}
	return nil
}

func (m *KubeResourceList) GetServices() *KubeResourceList_Services {
	if x, ok := m.GetResource().(*KubeResourceList_Services_); ok {
		return x.Services
	}
	return nil
}

func (m *KubeResourceList) GetSecrets() *KubeResourceList_Secrets {
	if x, ok := m.GetResource().(*KubeResourceList_Secrets_); ok {
		return x.Secrets
	}
	return nil
}

func (m *KubeResourceList) GetReplicationControllers() *KubeResourceList_ReplicationControllers {
	if x, ok := m.GetResource().(*KubeResourceList_ReplicationControllers_); ok {
		return x.ReplicationControllers
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*KubeResourceList) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _KubeResourceList_OneofMarshaler, _KubeResourceList_OneofUnmarshaler, _KubeResourceList_OneofSizer, []interface{}{
		(*KubeResourceList_Apps_)(nil),
		(*KubeResourceList_ConfigMaps_)(nil),
		(*KubeResourceList_DaemonSets_)(nil),
		(*KubeResourceList_Deployments_)(nil),
		(*KubeResourceList_Jobs_)(nil),
		(*KubeResourceList_Namespaces_)(nil),
		(*KubeResourceList_Nodes_)(nil),
		(*KubeResourceList_PetSets_)(nil),
		(*KubeResourceList_Pods_)(nil),
		(*KubeResourceList_ReplicaSets_)(nil),
		(*KubeResourceList_Services_)(nil),
		(*KubeResourceList_Secrets_)(nil),
		(*KubeResourceList_ReplicationControllers_)(nil),
	}
}

func _KubeResourceList_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*KubeResourceList)
	// resource
	switch x := m.Resource.(type) {
	case *KubeResourceList_Apps_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Apps); err != nil {
			return err
		}
	case *KubeResourceList_ConfigMaps_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfigMaps); err != nil {
			return err
		}
	case *KubeResourceList_DaemonSets_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DaemonSets); err != nil {
			return err
		}
	case *KubeResourceList_Deployments_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deployments); err != nil {
			return err
		}
	case *KubeResourceList_Jobs_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Jobs); err != nil {
			return err
		}
	case *KubeResourceList_Namespaces_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Namespaces); err != nil {
			return err
		}
	case *KubeResourceList_Nodes_:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nodes); err != nil {
			return err
		}
	case *KubeResourceList_PetSets_:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PetSets); err != nil {
			return err
		}
	case *KubeResourceList_Pods_:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pods); err != nil {
			return err
		}
	case *KubeResourceList_ReplicaSets_:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplicaSets); err != nil {
			return err
		}
	case *KubeResourceList_Services_:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Services); err != nil {
			return err
		}
	case *KubeResourceList_Secrets_:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Secrets); err != nil {
			return err
		}
	case *KubeResourceList_ReplicationControllers_:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplicationControllers); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("KubeResourceList.Resource has unexpected type %T", x)
	}
	return nil
}

func _KubeResourceList_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*KubeResourceList)
	switch tag {
	case 2: // resource.apps
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Apps)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Apps_{msg}
		return true, err
	case 3: // resource.config_maps
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_ConfigMaps)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_ConfigMaps_{msg}
		return true, err
	case 4: // resource.daemon_sets
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_DaemonSets)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_DaemonSets_{msg}
		return true, err
	case 5: // resource.deployments
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Deployments)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Deployments_{msg}
		return true, err
	case 6: // resource.jobs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Jobs)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Jobs_{msg}
		return true, err
	case 7: // resource.namespaces
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Namespaces)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Namespaces_{msg}
		return true, err
	case 8: // resource.nodes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Nodes)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Nodes_{msg}
		return true, err
	case 9: // resource.pet_sets
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_PetSets)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_PetSets_{msg}
		return true, err
	case 10: // resource.pods
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Pods)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Pods_{msg}
		return true, err
	case 11: // resource.replica_sets
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_ReplicaSets)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_ReplicaSets_{msg}
		return true, err
	case 12: // resource.services
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Services)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Services_{msg}
		return true, err
	case 13: // resource.secrets
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_Secrets)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_Secrets_{msg}
		return true, err
	case 14: // resource.replication_controllers
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KubeResourceList_ReplicationControllers)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResourceList_ReplicationControllers_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _KubeResourceList_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*KubeResourceList)
	// resource
	switch x := m.Resource.(type) {
	case *KubeResourceList_Apps_:
		s := proto.Size(x.Apps)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_ConfigMaps_:
		s := proto.Size(x.ConfigMaps)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_DaemonSets_:
		s := proto.Size(x.DaemonSets)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Deployments_:
		s := proto.Size(x.Deployments)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Jobs_:
		s := proto.Size(x.Jobs)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Namespaces_:
		s := proto.Size(x.Namespaces)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Nodes_:
		s := proto.Size(x.Nodes)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_PetSets_:
		s := proto.Size(x.PetSets)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Pods_:
		s := proto.Size(x.Pods)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_ReplicaSets_:
		s := proto.Size(x.ReplicaSets)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Services_:
		s := proto.Size(x.Services)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_Secrets_:
		s := proto.Size(x.Secrets)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResourceList_ReplicationControllers_:
		s := proto.Size(x.ReplicationControllers)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type KubeResourceList_Apps struct {
	Items []*App `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Apps) Reset()                    { *m = KubeResourceList_Apps{} }
func (m *KubeResourceList_Apps) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Apps) ProtoMessage()               {}
func (*KubeResourceList_Apps) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *KubeResourceList_Apps) GetItems() []*App {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_ConfigMaps struct {
	Items []*ConfigMap `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_ConfigMaps) Reset()                    { *m = KubeResourceList_ConfigMaps{} }
func (m *KubeResourceList_ConfigMaps) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_ConfigMaps) ProtoMessage()               {}
func (*KubeResourceList_ConfigMaps) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 1} }

func (m *KubeResourceList_ConfigMaps) GetItems() []*ConfigMap {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_DaemonSets struct {
	Items []*DaemonSet `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_DaemonSets) Reset()                    { *m = KubeResourceList_DaemonSets{} }
func (m *KubeResourceList_DaemonSets) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_DaemonSets) ProtoMessage()               {}
func (*KubeResourceList_DaemonSets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 2} }

func (m *KubeResourceList_DaemonSets) GetItems() []*DaemonSet {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Deployments struct {
	Items []*Deployment `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Deployments) Reset()         { *m = KubeResourceList_Deployments{} }
func (m *KubeResourceList_Deployments) String() string { return proto.CompactTextString(m) }
func (*KubeResourceList_Deployments) ProtoMessage()    {}
func (*KubeResourceList_Deployments) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 3}
}

func (m *KubeResourceList_Deployments) GetItems() []*Deployment {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Jobs struct {
	Items []*Job `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Jobs) Reset()                    { *m = KubeResourceList_Jobs{} }
func (m *KubeResourceList_Jobs) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Jobs) ProtoMessage()               {}
func (*KubeResourceList_Jobs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 4} }

func (m *KubeResourceList_Jobs) GetItems() []*Job {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Namespaces struct {
	Items []*Namespace `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Namespaces) Reset()                    { *m = KubeResourceList_Namespaces{} }
func (m *KubeResourceList_Namespaces) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Namespaces) ProtoMessage()               {}
func (*KubeResourceList_Namespaces) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 5} }

func (m *KubeResourceList_Namespaces) GetItems() []*Namespace {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Nodes struct {
	Items []*Node `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Nodes) Reset()                    { *m = KubeResourceList_Nodes{} }
func (m *KubeResourceList_Nodes) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Nodes) ProtoMessage()               {}
func (*KubeResourceList_Nodes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 6} }

func (m *KubeResourceList_Nodes) GetItems() []*Node {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_PetSets struct {
	Items []*PetSet `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_PetSets) Reset()                    { *m = KubeResourceList_PetSets{} }
func (m *KubeResourceList_PetSets) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_PetSets) ProtoMessage()               {}
func (*KubeResourceList_PetSets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 7} }

func (m *KubeResourceList_PetSets) GetItems() []*PetSet {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Pods struct {
	Items []*Pod `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Pods) Reset()                    { *m = KubeResourceList_Pods{} }
func (m *KubeResourceList_Pods) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Pods) ProtoMessage()               {}
func (*KubeResourceList_Pods) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 8} }

func (m *KubeResourceList_Pods) GetItems() []*Pod {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_ReplicaSets struct {
	Items []*ReplicaSet `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_ReplicaSets) Reset()         { *m = KubeResourceList_ReplicaSets{} }
func (m *KubeResourceList_ReplicaSets) String() string { return proto.CompactTextString(m) }
func (*KubeResourceList_ReplicaSets) ProtoMessage()    {}
func (*KubeResourceList_ReplicaSets) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 9}
}

func (m *KubeResourceList_ReplicaSets) GetItems() []*ReplicaSet {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Services struct {
	Items []*Service `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Services) Reset()                    { *m = KubeResourceList_Services{} }
func (m *KubeResourceList_Services) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Services) ProtoMessage()               {}
func (*KubeResourceList_Services) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 10} }

func (m *KubeResourceList_Services) GetItems() []*Service {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_Secrets struct {
	Items []*Secret `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_Secrets) Reset()                    { *m = KubeResourceList_Secrets{} }
func (m *KubeResourceList_Secrets) String() string            { return proto.CompactTextString(m) }
func (*KubeResourceList_Secrets) ProtoMessage()               {}
func (*KubeResourceList_Secrets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 11} }

func (m *KubeResourceList_Secrets) GetItems() []*Secret {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResourceList_ReplicationControllers struct {
	Items []*ReplicationController `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *KubeResourceList_ReplicationControllers) Reset() {
	*m = KubeResourceList_ReplicationControllers{}
}
func (m *KubeResourceList_ReplicationControllers) String() string { return proto.CompactTextString(m) }
func (*KubeResourceList_ReplicationControllers) ProtoMessage()    {}
func (*KubeResourceList_ReplicationControllers) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 12}
}

func (m *KubeResourceList_ReplicationControllers) GetItems() []*ReplicationController {
	if m != nil {
		return m.Items
	}
	return nil
}

type KubeResource struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Types that are valid to be assigned to Resource:
	//	*KubeResource_App
	//	*KubeResource_ConfigMap
	//	*KubeResource_DaemonSet
	//	*KubeResource_Deployment
	//	*KubeResource_Job
	//	*KubeResource_Namespace
	//	*KubeResource_Node
	//	*KubeResource_PetSet
	//	*KubeResource_Pod
	//	*KubeResource_ReplicaSet
	//	*KubeResource_Service
	//	*KubeResource_Secret
	//	*KubeResource_ReplicationController
	Resource isKubeResource_Resource `protobuf_oneof:"resource"`
	Raw      *Raw                    `protobuf:"bytes,15,opt,name=raw" json:"raw,omitempty"`
}

func (m *KubeResource) Reset()                    { *m = KubeResource{} }
func (m *KubeResource) String() string            { return proto.CompactTextString(m) }
func (*KubeResource) ProtoMessage()               {}
func (*KubeResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type isKubeResource_Resource interface {
	isKubeResource_Resource()
}

type KubeResource_App struct {
	App *App `protobuf:"bytes,2,opt,name=app,oneof"`
}
type KubeResource_ConfigMap struct {
	ConfigMap *ConfigMap `protobuf:"bytes,3,opt,name=config_map,json=configMap,oneof"`
}
type KubeResource_DaemonSet struct {
	DaemonSet *DaemonSet `protobuf:"bytes,4,opt,name=daemon_set,json=daemonSet,oneof"`
}
type KubeResource_Deployment struct {
	Deployment *Deployment `protobuf:"bytes,5,opt,name=deployment,oneof"`
}
type KubeResource_Job struct {
	Job *Job `protobuf:"bytes,6,opt,name=job,oneof"`
}
type KubeResource_Namespace struct {
	Namespace *Namespace `protobuf:"bytes,7,opt,name=namespace,oneof"`
}
type KubeResource_Node struct {
	Node *Node `protobuf:"bytes,8,opt,name=node,oneof"`
}
type KubeResource_PetSet struct {
	PetSet *PetSet `protobuf:"bytes,9,opt,name=pet_set,json=petSet,oneof"`
}
type KubeResource_Pod struct {
	Pod *Pod `protobuf:"bytes,10,opt,name=pod,oneof"`
}
type KubeResource_ReplicaSet struct {
	ReplicaSet *ReplicaSet `protobuf:"bytes,11,opt,name=replica_set,json=replicaSet,oneof"`
}
type KubeResource_Service struct {
	Service *Service `protobuf:"bytes,12,opt,name=service,oneof"`
}
type KubeResource_Secret struct {
	Secret *Secret `protobuf:"bytes,13,opt,name=secret,oneof"`
}
type KubeResource_ReplicationController struct {
	ReplicationController *ReplicationController `protobuf:"bytes,14,opt,name=replication_controller,json=replicationController,oneof"`
}

func (*KubeResource_App) isKubeResource_Resource()                   {}
func (*KubeResource_ConfigMap) isKubeResource_Resource()             {}
func (*KubeResource_DaemonSet) isKubeResource_Resource()             {}
func (*KubeResource_Deployment) isKubeResource_Resource()            {}
func (*KubeResource_Job) isKubeResource_Resource()                   {}
func (*KubeResource_Namespace) isKubeResource_Resource()             {}
func (*KubeResource_Node) isKubeResource_Resource()                  {}
func (*KubeResource_PetSet) isKubeResource_Resource()                {}
func (*KubeResource_Pod) isKubeResource_Resource()                   {}
func (*KubeResource_ReplicaSet) isKubeResource_Resource()            {}
func (*KubeResource_Service) isKubeResource_Resource()               {}
func (*KubeResource_Secret) isKubeResource_Resource()                {}
func (*KubeResource_ReplicationController) isKubeResource_Resource() {}

func (m *KubeResource) GetResource() isKubeResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *KubeResource) GetApp() *App {
	if x, ok := m.GetResource().(*KubeResource_App); ok {
		return x.App
	}
	return nil
}

func (m *KubeResource) GetConfigMap() *ConfigMap {
	if x, ok := m.GetResource().(*KubeResource_ConfigMap); ok {
		return x.ConfigMap
	}
	return nil
}

func (m *KubeResource) GetDaemonSet() *DaemonSet {
	if x, ok := m.GetResource().(*KubeResource_DaemonSet); ok {
		return x.DaemonSet
	}
	return nil
}

func (m *KubeResource) GetDeployment() *Deployment {
	if x, ok := m.GetResource().(*KubeResource_Deployment); ok {
		return x.Deployment
	}
	return nil
}

func (m *KubeResource) GetJob() *Job {
	if x, ok := m.GetResource().(*KubeResource_Job); ok {
		return x.Job
	}
	return nil
}

func (m *KubeResource) GetNamespace() *Namespace {
	if x, ok := m.GetResource().(*KubeResource_Namespace); ok {
		return x.Namespace
	}
	return nil
}

func (m *KubeResource) GetNode() *Node {
	if x, ok := m.GetResource().(*KubeResource_Node); ok {
		return x.Node
	}
	return nil
}

func (m *KubeResource) GetPetSet() *PetSet {
	if x, ok := m.GetResource().(*KubeResource_PetSet); ok {
		return x.PetSet
	}
	return nil
}

func (m *KubeResource) GetPod() *Pod {
	if x, ok := m.GetResource().(*KubeResource_Pod); ok {
		return x.Pod
	}
	return nil
}

func (m *KubeResource) GetReplicaSet() *ReplicaSet {
	if x, ok := m.GetResource().(*KubeResource_ReplicaSet); ok {
		return x.ReplicaSet
	}
	return nil
}

func (m *KubeResource) GetService() *Service {
	if x, ok := m.GetResource().(*KubeResource_Service); ok {
		return x.Service
	}
	return nil
}

func (m *KubeResource) GetSecret() *Secret {
	if x, ok := m.GetResource().(*KubeResource_Secret); ok {
		return x.Secret
	}
	return nil
}

func (m *KubeResource) GetReplicationController() *ReplicationController {
	if x, ok := m.GetResource().(*KubeResource_ReplicationController); ok {
		return x.ReplicationController
	}
	return nil
}

func (m *KubeResource) GetRaw() *Raw {
	if m != nil {
		return m.Raw
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*KubeResource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _KubeResource_OneofMarshaler, _KubeResource_OneofUnmarshaler, _KubeResource_OneofSizer, []interface{}{
		(*KubeResource_App)(nil),
		(*KubeResource_ConfigMap)(nil),
		(*KubeResource_DaemonSet)(nil),
		(*KubeResource_Deployment)(nil),
		(*KubeResource_Job)(nil),
		(*KubeResource_Namespace)(nil),
		(*KubeResource_Node)(nil),
		(*KubeResource_PetSet)(nil),
		(*KubeResource_Pod)(nil),
		(*KubeResource_ReplicaSet)(nil),
		(*KubeResource_Service)(nil),
		(*KubeResource_Secret)(nil),
		(*KubeResource_ReplicationController)(nil),
	}
}

func _KubeResource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*KubeResource)
	// resource
	switch x := m.Resource.(type) {
	case *KubeResource_App:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.App); err != nil {
			return err
		}
	case *KubeResource_ConfigMap:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfigMap); err != nil {
			return err
		}
	case *KubeResource_DaemonSet:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DaemonSet); err != nil {
			return err
		}
	case *KubeResource_Deployment:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Deployment); err != nil {
			return err
		}
	case *KubeResource_Job:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Job); err != nil {
			return err
		}
	case *KubeResource_Namespace:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Namespace); err != nil {
			return err
		}
	case *KubeResource_Node:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Node); err != nil {
			return err
		}
	case *KubeResource_PetSet:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PetSet); err != nil {
			return err
		}
	case *KubeResource_Pod:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pod); err != nil {
			return err
		}
	case *KubeResource_ReplicaSet:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplicaSet); err != nil {
			return err
		}
	case *KubeResource_Service:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Service); err != nil {
			return err
		}
	case *KubeResource_Secret:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Secret); err != nil {
			return err
		}
	case *KubeResource_ReplicationController:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplicationController); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("KubeResource.Resource has unexpected type %T", x)
	}
	return nil
}

func _KubeResource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*KubeResource)
	switch tag {
	case 2: // resource.app
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(App)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_App{msg}
		return true, err
	case 3: // resource.config_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfigMap)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_ConfigMap{msg}
		return true, err
	case 4: // resource.daemon_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DaemonSet)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_DaemonSet{msg}
		return true, err
	case 5: // resource.deployment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Deployment)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Deployment{msg}
		return true, err
	case 6: // resource.job
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Job)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Job{msg}
		return true, err
	case 7: // resource.namespace
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Namespace)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Namespace{msg}
		return true, err
	case 8: // resource.node
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Node)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Node{msg}
		return true, err
	case 9: // resource.pet_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PetSet)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_PetSet{msg}
		return true, err
	case 10: // resource.pod
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Pod)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Pod{msg}
		return true, err
	case 11: // resource.replica_set
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplicaSet)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_ReplicaSet{msg}
		return true, err
	case 12: // resource.service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Service)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Service{msg}
		return true, err
	case 13: // resource.secret
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Secret)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_Secret{msg}
		return true, err
	case 14: // resource.replication_controller
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplicationController)
		err := b.DecodeMessage(msg)
		m.Resource = &KubeResource_ReplicationController{msg}
		return true, err
	default:
		return false, nil
	}
}

func _KubeResource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*KubeResource)
	// resource
	switch x := m.Resource.(type) {
	case *KubeResource_App:
		s := proto.Size(x.App)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_ConfigMap:
		s := proto.Size(x.ConfigMap)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_DaemonSet:
		s := proto.Size(x.DaemonSet)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Deployment:
		s := proto.Size(x.Deployment)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Job:
		s := proto.Size(x.Job)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Namespace:
		s := proto.Size(x.Namespace)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Node:
		s := proto.Size(x.Node)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_PetSet:
		s := proto.Size(x.PetSet)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Pod:
		s := proto.Size(x.Pod)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_ReplicaSet:
		s := proto.Size(x.ReplicaSet)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Service:
		s := proto.Size(x.Service)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_Secret:
		s := proto.Size(x.Secret)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *KubeResource_ReplicationController:
		s := proto.Size(x.ReplicationController)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Meta struct {
	Name            string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Namespace       string            `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	SelfLinks       string            `protobuf:"bytes,3,opt,name=self_links,json=selfLinks" json:"self_links,omitempty"`
	ResourceVersion string            `protobuf:"bytes,4,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
	CreatedAt       string            `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Generation      int64             `protobuf:"varint,6,opt,name=generation" json:"generation,omitempty"`
	Labels          map[string]string `protobuf:"bytes,7,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations     map[string]string `protobuf:"bytes,8,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Meta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Meta) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type KubeObject struct {
	Cluster   string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
}

func (m *KubeObject) Reset()                    { *m = KubeObject{} }
func (m *KubeObject) String() string            { return proto.CompactTextString(m) }
func (*KubeObject) ProtoMessage()               {}
func (*KubeObject) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type App struct {
	Cluster     string             `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type        string             `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Namespace   string             `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name        string             `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	App         *Service           `protobuf:"bytes,5,opt,name=app" json:"app,omitempty"`
	Links       map[string]string  `protobuf:"bytes,6,rep,name=links" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt   string             `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	ClusterIp   string             `protobuf:"bytes,8,opt,name=cluster_ip,json=clusterIp" json:"cluster_ip,omitempty"`
	IcingaState *alert.IcingaState `protobuf:"bytes,9,opt,name=icinga_state,json=icingaState" json:"icinga_state,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *App) GetApp() *Service {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *App) GetLinks() map[string]string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *App) GetIcingaState() *alert.IcingaState {
	if m != nil {
		return m.IcingaState
	}
	return nil
}

type PodSpec struct {
	Volumes            []*PodSpec_Volume    `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
	Containers         []*PodSpec_Container `protobuf:"bytes,2,rep,name=containers" json:"containers,omitempty"`
	NodeSelectors      map[string]string    `protobuf:"bytes,3,rep,name=node_selectors,json=nodeSelectors" json:"node_selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ServiceAccountName string               `protobuf:"bytes,4,opt,name=service_account_name,json=serviceAccountName" json:"service_account_name,omitempty"`
	NodeName           string               `protobuf:"bytes,5,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	ImagePullSecrets   []string             `protobuf:"bytes,6,rep,name=image_pull_secrets,json=imagePullSecrets" json:"image_pull_secrets,omitempty"`
}

func (m *PodSpec) Reset()                    { *m = PodSpec{} }
func (m *PodSpec) String() string            { return proto.CompactTextString(m) }
func (*PodSpec) ProtoMessage()               {}
func (*PodSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PodSpec) GetVolumes() []*PodSpec_Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *PodSpec) GetContainers() []*PodSpec_Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

func (m *PodSpec) GetNodeSelectors() map[string]string {
	if m != nil {
		return m.NodeSelectors
	}
	return nil
}

type PodSpec_Container struct {
	Name        string                           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image       string                           `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Commands    []string                         `protobuf:"bytes,3,rep,name=commands" json:"commands,omitempty"`
	VolumeMount []*PodSpec_Container_VolumeMount `protobuf:"bytes,4,rep,name=volume_mount,json=volumeMount" json:"volume_mount,omitempty"`
}

func (m *PodSpec_Container) Reset()                    { *m = PodSpec_Container{} }
func (m *PodSpec_Container) String() string            { return proto.CompactTextString(m) }
func (*PodSpec_Container) ProtoMessage()               {}
func (*PodSpec_Container) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 1} }

func (m *PodSpec_Container) GetVolumeMount() []*PodSpec_Container_VolumeMount {
	if m != nil {
		return m.VolumeMount
	}
	return nil
}

type PodSpec_Container_VolumeMount struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ReadOnly  bool   `protobuf:"varint,2,opt,name=read_only,json=readOnly" json:"read_only,omitempty"`
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
}

func (m *PodSpec_Container_VolumeMount) Reset()         { *m = PodSpec_Container_VolumeMount{} }
func (m *PodSpec_Container_VolumeMount) String() string { return proto.CompactTextString(m) }
func (*PodSpec_Container_VolumeMount) ProtoMessage()    {}
func (*PodSpec_Container_VolumeMount) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 1, 0}
}

type PodSpec_Volume struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	HostPath string `protobuf:"bytes,2,opt,name=host_path,json=hostPath" json:"host_path,omitempty"`
}

func (m *PodSpec_Volume) Reset()                    { *m = PodSpec_Volume{} }
func (m *PodSpec_Volume) String() string            { return proto.CompactTextString(m) }
func (*PodSpec_Volume) ProtoMessage()               {}
func (*PodSpec_Volume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 2} }

type Raw struct {
	Format string `protobuf:"bytes,1,opt,name=format" json:"format,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *Raw) Reset()                    { *m = Raw{} }
func (m *Raw) String() string            { return proto.CompactTextString(m) }
func (*Raw) ProtoMessage()               {}
func (*Raw) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type ConfigMap struct {
	Meta *Meta             `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Data map[string]string `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConfigMap) Reset()                    { *m = ConfigMap{} }
func (m *ConfigMap) String() string            { return proto.CompactTextString(m) }
func (*ConfigMap) ProtoMessage()               {}
func (*ConfigMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ConfigMap) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ConfigMap) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type Job struct {
	Meta   *Meta       `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string      `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Space  *Job_Spec   `protobuf:"bytes,3,opt,name=space" json:"space,omitempty"`
	Status *Job_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Job) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Job) GetSpace() *Job_Spec {
	if m != nil {
		return m.Space
	}
	return nil
}

func (m *Job) GetStatus() *Job_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Job_Spec struct {
	Parallelism int32    `protobuf:"varint,1,opt,name=parallelism" json:"parallelism,omitempty"`
	Completions int32    `protobuf:"varint,2,opt,name=completions" json:"completions,omitempty"`
	Template    *PodSpec `protobuf:"bytes,3,opt,name=template" json:"template,omitempty"`
}

func (m *Job_Spec) Reset()                    { *m = Job_Spec{} }
func (m *Job_Spec) String() string            { return proto.CompactTextString(m) }
func (*Job_Spec) ProtoMessage()               {}
func (*Job_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18, 0} }

func (m *Job_Spec) GetTemplate() *PodSpec {
	if m != nil {
		return m.Template
	}
	return nil
}

type Job_Status struct {
	StartTime      string `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	CompletionTime string `protobuf:"bytes,2,opt,name=completion_time,json=completionTime" json:"completion_time,omitempty"`
	Active         int32  `protobuf:"varint,3,opt,name=active" json:"active,omitempty"`
	Succeeded      int32  `protobuf:"varint,4,opt,name=succeeded" json:"succeeded,omitempty"`
	Failed         int32  `protobuf:"varint,5,opt,name=failed" json:"failed,omitempty"`
}

func (m *Job_Status) Reset()                    { *m = Job_Status{} }
func (m *Job_Status) String() string            { return proto.CompactTextString(m) }
func (*Job_Status) ProtoMessage()               {}
func (*Job_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18, 1} }

type Namespace struct {
	Meta   *Meta             `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Status *Namespace_Status `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *Namespace) Reset()                    { *m = Namespace{} }
func (m *Namespace) String() string            { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()               {}
func (*Namespace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Namespace) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Namespace) GetStatus() *Namespace_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Namespace_Status struct {
	Phase string `protobuf:"bytes,1,opt,name=phase" json:"phase,omitempty"`
}

func (m *Namespace_Status) Reset()                    { *m = Namespace_Status{} }
func (m *Namespace_Status) String() string            { return proto.CompactTextString(m) }
func (*Namespace_Status) ProtoMessage()               {}
func (*Namespace_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19, 0} }

type Node struct {
	Meta     *Meta        `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Spec     *Node_Spec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	IsMaster bool         `protobuf:"varint,3,opt,name=is_master,json=isMaster" json:"is_master,omitempty"`
	Status   *Node_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Node) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Node) GetSpec() *Node_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Node) GetStatus() *Node_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Node_Spec struct {
	ExternalId    string `protobuf:"bytes,1,opt,name=external_id,json=externalId" json:"external_id,omitempty"`
	ProviderId    string `protobuf:"bytes,2,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	Unschedulable bool   `protobuf:"varint,3,opt,name=unschedulable" json:"unschedulable,omitempty"`
}

func (m *Node_Spec) Reset()                    { *m = Node_Spec{} }
func (m *Node_Spec) String() string            { return proto.CompactTextString(m) }
func (*Node_Spec) ProtoMessage()               {}
func (*Node_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 0} }

type Node_Status struct {
	Capacity *Node_Status_Capacity `protobuf:"bytes,1,opt,name=capacity" json:"capacity,omitempty"`
	Phase    string                `protobuf:"bytes,2,opt,name=phase" json:"phase,omitempty"`
	NodeInfo *Node_Status_NodeInfo `protobuf:"bytes,3,opt,name=node_info,json=nodeInfo" json:"node_info,omitempty"`
}

func (m *Node_Status) Reset()                    { *m = Node_Status{} }
func (m *Node_Status) String() string            { return proto.CompactTextString(m) }
func (*Node_Status) ProtoMessage()               {}
func (*Node_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 1} }

func (m *Node_Status) GetCapacity() *Node_Status_Capacity {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *Node_Status) GetNodeInfo() *Node_Status_NodeInfo {
	if m != nil {
		return m.NodeInfo
	}
	return nil
}

type Node_Status_Capacity struct {
	Cpu    int64 `protobuf:"varint,1,opt,name=cpu" json:"cpu,omitempty"`
	Memory int64 `protobuf:"varint,2,opt,name=memory" json:"memory,omitempty"`
	Pods   int64 `protobuf:"varint,3,opt,name=pods" json:"pods,omitempty"`
}

func (m *Node_Status_Capacity) Reset()                    { *m = Node_Status_Capacity{} }
func (m *Node_Status_Capacity) String() string            { return proto.CompactTextString(m) }
func (*Node_Status_Capacity) ProtoMessage()               {}
func (*Node_Status_Capacity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 1, 0} }

type Node_Status_NodeInfo struct {
	KernelVersion           string `protobuf:"bytes,1,opt,name=kernel_version,json=kernelVersion" json:"kernel_version,omitempty"`
	OsImage                 string `protobuf:"bytes,2,opt,name=os_image,json=osImage" json:"os_image,omitempty"`
	ContainerRuntimeVersion string `protobuf:"bytes,3,opt,name=container_runtime_version,json=containerRuntimeVersion" json:"container_runtime_version,omitempty"`
	KubeletVersion          string `protobuf:"bytes,4,opt,name=kubelet_version,json=kubeletVersion" json:"kubelet_version,omitempty"`
	KubeProxyVersion        string `protobuf:"bytes,5,opt,name=kube_proxy_version,json=kubeProxyVersion" json:"kube_proxy_version,omitempty"`
}

func (m *Node_Status_NodeInfo) Reset()                    { *m = Node_Status_NodeInfo{} }
func (m *Node_Status_NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*Node_Status_NodeInfo) ProtoMessage()               {}
func (*Node_Status_NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 1, 1} }

type Pod struct {
	Meta   *Meta       `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string      `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *PodSpec    `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *Pod_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Pod) Reset()                    { *m = Pod{} }
func (m *Pod) String() string            { return proto.CompactTextString(m) }
func (*Pod) ProtoMessage()               {}
func (*Pod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *Pod) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Pod) GetSpec() *PodSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Pod) GetStatus() *Pod_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Pod_Status struct {
	Phase   string `protobuf:"bytes,1,opt,name=phase" json:"phase,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason" json:"reason,omitempty"`
	HostIP  string `protobuf:"bytes,4,opt,name=hostIP" json:"hostIP,omitempty"`
	PodIP   string `protobuf:"bytes,5,opt,name=podIP" json:"podIP,omitempty"`
}

func (m *Pod_Status) Reset()                    { *m = Pod_Status{} }
func (m *Pod_Status) String() string            { return proto.CompactTextString(m) }
func (*Pod_Status) ProtoMessage()               {}
func (*Pod_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

type Service struct {
	Meta   *Meta           `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string          `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *Service_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *Service_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Service) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Service) GetSpec() *Service_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Service) GetStatus() *Service_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Service_Spec struct {
	Type           string               `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Ports          []*Service_Spec_Port `protobuf:"bytes,2,rep,name=ports" json:"ports,omitempty"`
	Seletors       map[string]string    `protobuf:"bytes,3,rep,name=seletors" json:"seletors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ClusterIP      string               `protobuf:"bytes,4,opt,name=clusterIP" json:"clusterIP,omitempty"`
	ExternalIPs    []string             `protobuf:"bytes,5,rep,name=externalIPs" json:"externalIPs,omitempty"`
	LoadbalancerIP string               `protobuf:"bytes,6,opt,name=loadbalancerIP" json:"loadbalancerIP,omitempty"`
}

func (m *Service_Spec) Reset()                    { *m = Service_Spec{} }
func (m *Service_Spec) String() string            { return proto.CompactTextString(m) }
func (*Service_Spec) ProtoMessage()               {}
func (*Service_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22, 0} }

func (m *Service_Spec) GetPorts() []*Service_Spec_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service_Spec) GetSeletors() map[string]string {
	if m != nil {
		return m.Seletors
	}
	return nil
}

type Service_Spec_Port struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Protocol   string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	TargetPort string `protobuf:"bytes,4,opt,name=target_port,json=targetPort" json:"target_port,omitempty"`
	NodePort   int32  `protobuf:"varint,5,opt,name=node_port,json=nodePort" json:"node_port,omitempty"`
}

func (m *Service_Spec_Port) Reset()                    { *m = Service_Spec_Port{} }
func (m *Service_Spec_Port) String() string            { return proto.CompactTextString(m) }
func (*Service_Spec_Port) ProtoMessage()               {}
func (*Service_Spec_Port) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22, 0, 1} }

type Service_Status struct {
	LoadbalancerIngresses []*Service_Status_LoadBalancerIngress `protobuf:"bytes,1,rep,name=loadbalancer_ingresses,json=loadbalancerIngresses" json:"loadbalancer_ingresses,omitempty"`
}

func (m *Service_Status) Reset()                    { *m = Service_Status{} }
func (m *Service_Status) String() string            { return proto.CompactTextString(m) }
func (*Service_Status) ProtoMessage()               {}
func (*Service_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22, 1} }

func (m *Service_Status) GetLoadbalancerIngresses() []*Service_Status_LoadBalancerIngress {
	if m != nil {
		return m.LoadbalancerIngresses
	}
	return nil
}

type Service_Status_LoadBalancerIngress struct {
	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	IP       string `protobuf:"bytes,2,opt,name=IP,json=iP" json:"IP,omitempty"`
}

func (m *Service_Status_LoadBalancerIngress) Reset()         { *m = Service_Status_LoadBalancerIngress{} }
func (m *Service_Status_LoadBalancerIngress) String() string { return proto.CompactTextString(m) }
func (*Service_Status_LoadBalancerIngress) ProtoMessage()    {}
func (*Service_Status_LoadBalancerIngress) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22, 1, 0}
}

type Secret struct {
	Meta *Meta             `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Data map[string]string `protobuf:"bytes,2,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Type string            `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *Secret) Reset()                    { *m = Secret{} }
func (m *Secret) String() string            { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()               {}
func (*Secret) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Secret) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Secret) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type ReplicationController struct {
	Meta   *Meta                         `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string                        `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *ReplicationController_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *ReplicationController_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *ReplicationController) Reset()                    { *m = ReplicationController{} }
func (m *ReplicationController) String() string            { return proto.CompactTextString(m) }
func (*ReplicationController) ProtoMessage()               {}
func (*ReplicationController) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ReplicationController) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ReplicationController) GetSpec() *ReplicationController_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ReplicationController) GetStatus() *ReplicationController_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReplicationController_Spec struct {
	DesiredReplicas int32             `protobuf:"varint,1,opt,name=desired_replicas,json=desiredReplicas" json:"desired_replicas,omitempty"`
	Selectors       map[string]string `protobuf:"bytes,2,rep,name=selectors" json:"selectors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PodTemplate     *PodSpec          `protobuf:"bytes,3,opt,name=pod_template,json=podTemplate" json:"pod_template,omitempty"`
}

func (m *ReplicationController_Spec) Reset()                    { *m = ReplicationController_Spec{} }
func (m *ReplicationController_Spec) String() string            { return proto.CompactTextString(m) }
func (*ReplicationController_Spec) ProtoMessage()               {}
func (*ReplicationController_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24, 0} }

func (m *ReplicationController_Spec) GetSelectors() map[string]string {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *ReplicationController_Spec) GetPodTemplate() *PodSpec {
	if m != nil {
		return m.PodTemplate
	}
	return nil
}

type ReplicationController_Status struct {
	CurrentReplicas    int32 `protobuf:"varint,1,opt,name=current_replicas,json=currentReplicas" json:"current_replicas,omitempty"`
	ObservedGeneration int64 `protobuf:"varint,2,opt,name=observed_generation,json=observedGeneration" json:"observed_generation,omitempty"`
}

func (m *ReplicationController_Status) Reset()         { *m = ReplicationController_Status{} }
func (m *ReplicationController_Status) String() string { return proto.CompactTextString(m) }
func (*ReplicationController_Status) ProtoMessage()    {}
func (*ReplicationController_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24, 1}
}

type ReplicaSet struct {
	Meta   *Meta              `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string             `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *ReplicaSet_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *ReplicaSet_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *ReplicaSet) Reset()                    { *m = ReplicaSet{} }
func (m *ReplicaSet) String() string            { return proto.CompactTextString(m) }
func (*ReplicaSet) ProtoMessage()               {}
func (*ReplicaSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ReplicaSet) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ReplicaSet) GetSpec() *ReplicaSet_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ReplicaSet) GetStatus() *ReplicaSet_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReplicaSet_Spec struct {
	DesiredReplicas int32          `protobuf:"varint,1,opt,name=desired_replicas,json=desiredReplicas" json:"desired_replicas,omitempty"`
	Selector        *LabelSelector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	PodTemplate     *PodSpec       `protobuf:"bytes,3,opt,name=pod_template,json=podTemplate" json:"pod_template,omitempty"`
}

func (m *ReplicaSet_Spec) Reset()                    { *m = ReplicaSet_Spec{} }
func (m *ReplicaSet_Spec) String() string            { return proto.CompactTextString(m) }
func (*ReplicaSet_Spec) ProtoMessage()               {}
func (*ReplicaSet_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 0} }

func (m *ReplicaSet_Spec) GetSelector() *LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *ReplicaSet_Spec) GetPodTemplate() *PodSpec {
	if m != nil {
		return m.PodTemplate
	}
	return nil
}

type ReplicaSet_Status struct {
	CurrentReplicas    int32 `protobuf:"varint,1,opt,name=current_replicas,json=currentReplicas" json:"current_replicas,omitempty"`
	ObservedGeneration int64 `protobuf:"varint,2,opt,name=observed_generation,json=observedGeneration" json:"observed_generation,omitempty"`
}

func (m *ReplicaSet_Status) Reset()                    { *m = ReplicaSet_Status{} }
func (m *ReplicaSet_Status) String() string            { return proto.CompactTextString(m) }
func (*ReplicaSet_Status) ProtoMessage()               {}
func (*ReplicaSet_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 1} }

type DaemonSet struct {
	Meta   *Meta             `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string            `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *DaemonSet_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *DaemonSet_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *DaemonSet) Reset()                    { *m = DaemonSet{} }
func (m *DaemonSet) String() string            { return proto.CompactTextString(m) }
func (*DaemonSet) ProtoMessage()               {}
func (*DaemonSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *DaemonSet) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *DaemonSet) GetSpec() *DaemonSet_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *DaemonSet) GetStatus() *DaemonSet_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DaemonSet_Spec struct {
	Selector    *LabelSelector `protobuf:"bytes,1,opt,name=selector" json:"selector,omitempty"`
	PodTemplate *PodSpec       `protobuf:"bytes,2,opt,name=pod_template,json=podTemplate" json:"pod_template,omitempty"`
}

func (m *DaemonSet_Spec) Reset()                    { *m = DaemonSet_Spec{} }
func (m *DaemonSet_Spec) String() string            { return proto.CompactTextString(m) }
func (*DaemonSet_Spec) ProtoMessage()               {}
func (*DaemonSet_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 0} }

func (m *DaemonSet_Spec) GetSelector() *LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *DaemonSet_Spec) GetPodTemplate() *PodSpec {
	if m != nil {
		return m.PodTemplate
	}
	return nil
}

type DaemonSet_Status struct {
	CurrentNumberScheduled int32 `protobuf:"varint,1,opt,name=current_number_scheduled,json=currentNumberScheduled" json:"current_number_scheduled,omitempty"`
	NumberMisscheduled     int32 `protobuf:"varint,2,opt,name=number_misscheduled,json=numberMisscheduled" json:"number_misscheduled,omitempty"`
	DesiredNumberScheduled int32 `protobuf:"varint,3,opt,name=desired_number_scheduled,json=desiredNumberScheduled" json:"desired_number_scheduled,omitempty"`
}

func (m *DaemonSet_Status) Reset()                    { *m = DaemonSet_Status{} }
func (m *DaemonSet_Status) String() string            { return proto.CompactTextString(m) }
func (*DaemonSet_Status) ProtoMessage()               {}
func (*DaemonSet_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26, 1} }

type Deployment struct {
	Meta   *Meta              `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string             `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *Deployment_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *Deployment_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *Deployment) Reset()                    { *m = Deployment{} }
func (m *Deployment) String() string            { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()               {}
func (*Deployment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *Deployment) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Deployment) GetSpec() *Deployment_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Deployment) GetStatus() *Deployment_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type Deployment_Spec struct {
	DesiredReplicas int32          `protobuf:"varint,1,opt,name=desired_replicas,json=desiredReplicas" json:"desired_replicas,omitempty"`
	Selector        *LabelSelector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	PodTemplate     *PodSpec       `protobuf:"bytes,3,opt,name=pod_template,json=podTemplate" json:"pod_template,omitempty"`
}

func (m *Deployment_Spec) Reset()                    { *m = Deployment_Spec{} }
func (m *Deployment_Spec) String() string            { return proto.CompactTextString(m) }
func (*Deployment_Spec) ProtoMessage()               {}
func (*Deployment_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27, 0} }

func (m *Deployment_Spec) GetSelector() *LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *Deployment_Spec) GetPodTemplate() *PodSpec {
	if m != nil {
		return m.PodTemplate
	}
	return nil
}

type Deployment_Status struct {
	ObservedGeneration  int64 `protobuf:"varint,1,opt,name=observed_generation,json=observedGeneration" json:"observed_generation,omitempty"`
	Replicas            int32 `protobuf:"varint,2,opt,name=replicas" json:"replicas,omitempty"`
	UpdatedReplicas     int32 `protobuf:"varint,3,opt,name=updated_replicas,json=updatedReplicas" json:"updated_replicas,omitempty"`
	AvailableReplicas   int32 `protobuf:"varint,4,opt,name=available_replicas,json=availableReplicas" json:"available_replicas,omitempty"`
	UnavailableReplicas int32 `protobuf:"varint,5,opt,name=unavailable_replicas,json=unavailableReplicas" json:"unavailable_replicas,omitempty"`
}

func (m *Deployment_Status) Reset()                    { *m = Deployment_Status{} }
func (m *Deployment_Status) String() string            { return proto.CompactTextString(m) }
func (*Deployment_Status) ProtoMessage()               {}
func (*Deployment_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27, 1} }

type PetSet struct {
	Meta   *Meta          `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	App    string         `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Spec   *PetSet_Spec   `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status *PetSet_Status `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *PetSet) Reset()                    { *m = PetSet{} }
func (m *PetSet) String() string            { return proto.CompactTextString(m) }
func (*PetSet) ProtoMessage()               {}
func (*PetSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *PetSet) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *PetSet) GetSpec() *PetSet_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PetSet) GetStatus() *PetSet_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type PetSet_Spec struct {
	DesiredReplicas int32          `protobuf:"varint,1,opt,name=desired_replicas,json=desiredReplicas" json:"desired_replicas,omitempty"`
	Selector        *LabelSelector `protobuf:"bytes,2,opt,name=selector" json:"selector,omitempty"`
	PodTemplate     *PodSpec       `protobuf:"bytes,3,opt,name=pod_template,json=podTemplate" json:"pod_template,omitempty"`
	ServiceName     string         `protobuf:"bytes,4,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
}

func (m *PetSet_Spec) Reset()                    { *m = PetSet_Spec{} }
func (m *PetSet_Spec) String() string            { return proto.CompactTextString(m) }
func (*PetSet_Spec) ProtoMessage()               {}
func (*PetSet_Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28, 0} }

func (m *PetSet_Spec) GetSelector() *LabelSelector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *PetSet_Spec) GetPodTemplate() *PodSpec {
	if m != nil {
		return m.PodTemplate
	}
	return nil
}

type PetSet_Status struct {
	CurrentReplicas    int32 `protobuf:"varint,1,opt,name=current_replicas,json=currentReplicas" json:"current_replicas,omitempty"`
	ObservedGeneration int64 `protobuf:"varint,2,opt,name=observed_generation,json=observedGeneration" json:"observed_generation,omitempty"`
}

func (m *PetSet_Status) Reset()                    { *m = PetSet_Status{} }
func (m *PetSet_Status) String() string            { return proto.CompactTextString(m) }
func (*PetSet_Status) ProtoMessage()               {}
func (*PetSet_Status) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28, 1} }

type LabelSelector struct {
	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=match_labels,json=matchLabels" json:"match_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *LabelSelector) Reset()                    { *m = LabelSelector{} }
func (m *LabelSelector) String() string            { return proto.CompactTextString(m) }
func (*LabelSelector) ProtoMessage()               {}
func (*LabelSelector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *LabelSelector) GetMatchLabels() map[string]string {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

func init() {
	proto.RegisterType((*ListResourceRequest)(nil), "kubernetes.ListResourceRequest")
	proto.RegisterType((*ListResourceResponse)(nil), "kubernetes.ListResourceResponse")
	proto.RegisterType((*DescribeResourceRequest)(nil), "kubernetes.DescribeResourceRequest")
	proto.RegisterType((*DescribeResourceResponse)(nil), "kubernetes.DescribeResourceResponse")
	proto.RegisterType((*UpdateResourceRequest)(nil), "kubernetes.UpdateResourceRequest")
	proto.RegisterType((*ConfigMapUpdateRequest)(nil), "kubernetes.ConfigMapUpdateRequest")
	proto.RegisterType((*SecretUpdateRequest)(nil), "kubernetes.SecretUpdateRequest")
	proto.RegisterType((*ClientActionResponse)(nil), "kubernetes.ClientActionResponse")
	proto.RegisterType((*CopyResourceRequest)(nil), "kubernetes.CopyResourceRequest")
	proto.RegisterType((*DeleteResourceRequest)(nil), "kubernetes.DeleteResourceRequest")
	proto.RegisterType((*KubeResourceList)(nil), "kubernetes.KubeResourceList")
	proto.RegisterType((*KubeResourceList_Apps)(nil), "kubernetes.KubeResourceList.Apps")
	proto.RegisterType((*KubeResourceList_ConfigMaps)(nil), "kubernetes.KubeResourceList.ConfigMaps")
	proto.RegisterType((*KubeResourceList_DaemonSets)(nil), "kubernetes.KubeResourceList.DaemonSets")
	proto.RegisterType((*KubeResourceList_Deployments)(nil), "kubernetes.KubeResourceList.Deployments")
	proto.RegisterType((*KubeResourceList_Jobs)(nil), "kubernetes.KubeResourceList.Jobs")
	proto.RegisterType((*KubeResourceList_Namespaces)(nil), "kubernetes.KubeResourceList.Namespaces")
	proto.RegisterType((*KubeResourceList_Nodes)(nil), "kubernetes.KubeResourceList.Nodes")
	proto.RegisterType((*KubeResourceList_PetSets)(nil), "kubernetes.KubeResourceList.PetSets")
	proto.RegisterType((*KubeResourceList_Pods)(nil), "kubernetes.KubeResourceList.Pods")
	proto.RegisterType((*KubeResourceList_ReplicaSets)(nil), "kubernetes.KubeResourceList.ReplicaSets")
	proto.RegisterType((*KubeResourceList_Services)(nil), "kubernetes.KubeResourceList.Services")
	proto.RegisterType((*KubeResourceList_Secrets)(nil), "kubernetes.KubeResourceList.Secrets")
	proto.RegisterType((*KubeResourceList_ReplicationControllers)(nil), "kubernetes.KubeResourceList.ReplicationControllers")
	proto.RegisterType((*KubeResource)(nil), "kubernetes.KubeResource")
	proto.RegisterType((*Meta)(nil), "kubernetes.Meta")
	proto.RegisterType((*KubeObject)(nil), "kubernetes.KubeObject")
	proto.RegisterType((*App)(nil), "kubernetes.App")
	proto.RegisterType((*PodSpec)(nil), "kubernetes.PodSpec")
	proto.RegisterType((*PodSpec_Container)(nil), "kubernetes.PodSpec.Container")
	proto.RegisterType((*PodSpec_Container_VolumeMount)(nil), "kubernetes.PodSpec.Container.VolumeMount")
	proto.RegisterType((*PodSpec_Volume)(nil), "kubernetes.PodSpec.Volume")
	proto.RegisterType((*Raw)(nil), "kubernetes.Raw")
	proto.RegisterType((*ConfigMap)(nil), "kubernetes.ConfigMap")
	proto.RegisterType((*Job)(nil), "kubernetes.Job")
	proto.RegisterType((*Job_Spec)(nil), "kubernetes.Job.Spec")
	proto.RegisterType((*Job_Status)(nil), "kubernetes.Job.Status")
	proto.RegisterType((*Namespace)(nil), "kubernetes.Namespace")
	proto.RegisterType((*Namespace_Status)(nil), "kubernetes.Namespace.Status")
	proto.RegisterType((*Node)(nil), "kubernetes.Node")
	proto.RegisterType((*Node_Spec)(nil), "kubernetes.Node.Spec")
	proto.RegisterType((*Node_Status)(nil), "kubernetes.Node.Status")
	proto.RegisterType((*Node_Status_Capacity)(nil), "kubernetes.Node.Status.Capacity")
	proto.RegisterType((*Node_Status_NodeInfo)(nil), "kubernetes.Node.Status.NodeInfo")
	proto.RegisterType((*Pod)(nil), "kubernetes.Pod")
	proto.RegisterType((*Pod_Status)(nil), "kubernetes.Pod.Status")
	proto.RegisterType((*Service)(nil), "kubernetes.Service")
	proto.RegisterType((*Service_Spec)(nil), "kubernetes.Service.Spec")
	proto.RegisterType((*Service_Spec_Port)(nil), "kubernetes.Service.Spec.Port")
	proto.RegisterType((*Service_Status)(nil), "kubernetes.Service.Status")
	proto.RegisterType((*Service_Status_LoadBalancerIngress)(nil), "kubernetes.Service.Status.LoadBalancerIngress")
	proto.RegisterType((*Secret)(nil), "kubernetes.Secret")
	proto.RegisterType((*ReplicationController)(nil), "kubernetes.ReplicationController")
	proto.RegisterType((*ReplicationController_Spec)(nil), "kubernetes.ReplicationController.Spec")
	proto.RegisterType((*ReplicationController_Status)(nil), "kubernetes.ReplicationController.Status")
	proto.RegisterType((*ReplicaSet)(nil), "kubernetes.ReplicaSet")
	proto.RegisterType((*ReplicaSet_Spec)(nil), "kubernetes.ReplicaSet.Spec")
	proto.RegisterType((*ReplicaSet_Status)(nil), "kubernetes.ReplicaSet.Status")
	proto.RegisterType((*DaemonSet)(nil), "kubernetes.DaemonSet")
	proto.RegisterType((*DaemonSet_Spec)(nil), "kubernetes.DaemonSet.Spec")
	proto.RegisterType((*DaemonSet_Status)(nil), "kubernetes.DaemonSet.Status")
	proto.RegisterType((*Deployment)(nil), "kubernetes.Deployment")
	proto.RegisterType((*Deployment_Spec)(nil), "kubernetes.Deployment.Spec")
	proto.RegisterType((*Deployment_Status)(nil), "kubernetes.Deployment.Status")
	proto.RegisterType((*PetSet)(nil), "kubernetes.PetSet")
	proto.RegisterType((*PetSet_Spec)(nil), "kubernetes.PetSet.Spec")
	proto.RegisterType((*PetSet_Status)(nil), "kubernetes.PetSet.Status")
	proto.RegisterType((*LabelSelector)(nil), "kubernetes.LabelSelector")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Clients service

type ClientsClient interface {
	List(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (*ListResourceResponse, error)
	Describe(ctx context.Context, in *DescribeResourceRequest, opts ...grpc.CallOption) (*DescribeResourceResponse, error)
	Delete(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error)
	Update(ctx context.Context, in *UpdateResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error)
	Copy(ctx context.Context, in *CopyResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error)
	UpdateConfigMap(ctx context.Context, in *ConfigMapUpdateRequest, opts ...grpc.CallOption) (*ClientActionResponse, error)
	UpdateSecret(ctx context.Context, in *SecretUpdateRequest, opts ...grpc.CallOption) (*ClientActionResponse, error)
}

type clientsClient struct {
	cc *grpc.ClientConn
}

func NewClientsClient(cc *grpc.ClientConn) ClientsClient {
	return &clientsClient{cc}
}

func (c *clientsClient) List(ctx context.Context, in *ListResourceRequest, opts ...grpc.CallOption) (*ListResourceResponse, error) {
	out := new(ListResourceResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Describe(ctx context.Context, in *DescribeResourceRequest, opts ...grpc.CallOption) (*DescribeResourceResponse, error) {
	out := new(DescribeResourceResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Delete(ctx context.Context, in *DeleteResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error) {
	out := new(ClientActionResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Update(ctx context.Context, in *UpdateResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error) {
	out := new(ClientActionResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) Copy(ctx context.Context, in *CopyResourceRequest, opts ...grpc.CallOption) (*ClientActionResponse, error) {
	out := new(ClientActionResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/Copy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) UpdateConfigMap(ctx context.Context, in *ConfigMapUpdateRequest, opts ...grpc.CallOption) (*ClientActionResponse, error) {
	out := new(ClientActionResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/UpdateConfigMap", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clientsClient) UpdateSecret(ctx context.Context, in *SecretUpdateRequest, opts ...grpc.CallOption) (*ClientActionResponse, error) {
	out := new(ClientActionResponse)
	err := grpc.Invoke(ctx, "/kubernetes.Clients/UpdateSecret", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Clients service

type ClientsServer interface {
	List(context.Context, *ListResourceRequest) (*ListResourceResponse, error)
	Describe(context.Context, *DescribeResourceRequest) (*DescribeResourceResponse, error)
	Delete(context.Context, *DeleteResourceRequest) (*ClientActionResponse, error)
	Update(context.Context, *UpdateResourceRequest) (*ClientActionResponse, error)
	Copy(context.Context, *CopyResourceRequest) (*ClientActionResponse, error)
	UpdateConfigMap(context.Context, *ConfigMapUpdateRequest) (*ClientActionResponse, error)
	UpdateSecret(context.Context, *SecretUpdateRequest) (*ClientActionResponse, error)
}

func RegisterClientsServer(s *grpc.Server, srv ClientsServer) {
	s.RegisterService(&_Clients_serviceDesc, srv)
}

func _Clients_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).List(ctx, req.(*ListResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Describe(ctx, req.(*DescribeResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Delete(ctx, req.(*DeleteResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Update(ctx, req.(*UpdateResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/Copy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).Copy(ctx, req.(*CopyResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_UpdateConfigMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigMapUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).UpdateConfigMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/UpdateConfigMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).UpdateConfigMap(ctx, req.(*ConfigMapUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Clients_UpdateSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SecretUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientsServer).UpdateSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kubernetes.Clients/UpdateSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientsServer).UpdateSecret(ctx, req.(*SecretUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Clients_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kubernetes.Clients",
	HandlerType: (*ClientsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Clients_List_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Clients_Describe_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Clients_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Clients_Update_Handler,
		},
		{
			MethodName: "Copy",
			Handler:    _Clients_Copy_Handler,
		},
		{
			MethodName: "UpdateConfigMap",
			Handler:    _Clients_UpdateConfigMap_Handler,
		},
		{
			MethodName: "UpdateSecret",
			Handler:    _Clients_UpdateSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("client.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x3a, 0x4b, 0x6f, 0x1c, 0xc7,
	0xd1, 0xdc, 0x27, 0x77, 0x6b, 0x29, 0x92, 0x5f, 0x8b, 0xa4, 0x56, 0x63, 0xd9, 0x96, 0xd6, 0x7a,
	0x3f, 0x76, 0x25, 0x4a, 0xb4, 0x24, 0xda, 0x32, 0x4c, 0x51, 0x5f, 0x42, 0x2a, 0xa4, 0xbd, 0x1e,
	0xda, 0x0e, 0x90, 0x20, 0x18, 0xf4, 0xce, 0xb4, 0xa8, 0x91, 0x66, 0x67, 0x26, 0x33, 0xb3, 0x94,
	0x19, 0xc1, 0x09, 0x90, 0x8b, 0x03, 0xe4, 0x18, 0x20, 0x87, 0x1c, 0xec, 0x9c, 0xe2, 0x93, 0x01,
	0x23, 0x0f, 0xf8, 0x07, 0xe4, 0x90, 0x1c, 0x72, 0x08, 0x90, 0x1f, 0x60, 0x20, 0xc8, 0x35, 0xc9,
	0x35, 0x87, 0x20, 0x08, 0xaa, 0xbb, 0xe7, 0xc9, 0xd9, 0xe5, 0x92, 0x89, 0x04, 0xe7, 0xb2, 0x98,
	0xae, 0xae, 0xaa, 0xae, 0xae, 0x77, 0xf7, 0x36, 0x4c, 0xe9, 0x96, 0xc9, 0xec, 0xa0, 0xed, 0x7a,
	0x4e, 0xe0, 0x10, 0x78, 0x3c, 0xe8, 0x31, 0xcf, 0x66, 0x01, 0xf3, 0x95, 0x13, 0xdb, 0x8e, 0xb3,
	0x6d, 0xb1, 0x0e, 0x75, 0xcd, 0x0e, 0xb5, 0x6d, 0x27, 0xa0, 0x81, 0xe9, 0xd8, 0xbe, 0xc0, 0x54,
	0x16, 0x10, 0x6c, 0x04, 0xbb, 0x2e, 0xf3, 0x3b, 0xfc, 0x57, 0xc2, 0x15, 0x8e, 0x6e, 0x31, 0x2f,
	0xe8, 0xec, 0x5c, 0x6d, 0x5f, 0x13, 0x9f, 0x62, 0xae, 0x45, 0xe1, 0xe8, 0x86, 0xe9, 0x07, 0x2a,
	0xf3, 0x9d, 0x81, 0xa7, 0x33, 0x95, 0x7d, 0x77, 0xc0, 0xfc, 0x80, 0x34, 0x61, 0x52, 0xb7, 0x06,
	0x7e, 0xc0, 0xbc, 0x66, 0xe1, 0x64, 0xe1, 0x7c, 0x5d, 0x0d, 0x87, 0x84, 0x40, 0x19, 0x79, 0x37,
	0x8b, 0x1c, 0xcc, 0xbf, 0xc9, 0x09, 0xa8, 0xdb, 0xb4, 0xcf, 0x7c, 0x97, 0xea, 0xac, 0x59, 0xe2,
	0x13, 0x31, 0xa0, 0xf5, 0x3d, 0x98, 0x4b, 0x2f, 0xe1, 0xbb, 0x8e, 0xed, 0x33, 0x72, 0x16, 0xaa,
	0x7e, 0x40, 0x83, 0x81, 0xcf, 0x97, 0x68, 0x2c, 0x4e, 0xb7, 0x85, 0xec, 0xed, 0x2d, 0x0e, 0x55,
	0xe5, 0x2c, 0x59, 0x86, 0xba, 0x27, 0x69, 0x7d, 0xbe, 0x6c, 0x63, 0xf1, 0x44, 0x3b, 0x56, 0x4a,
	0xfb, 0x1b, 0x83, 0x1e, 0x0b, 0x99, 0xf3, 0x85, 0x62, 0xf4, 0xd6, 0x8f, 0x0b, 0x70, 0xec, 0x1e,
	0xf3, 0x75, 0xcf, 0x8c, 0x71, 0x9e, 0xc1, 0x1e, 0x91, 0x02, 0x07, 0xcd, 0xb2, 0xa0, 0xc0, 0x6f,
	0x32, 0x0b, 0x25, 0x8f, 0x3e, 0x69, 0x56, 0x38, 0x08, 0x3f, 0x5b, 0x1f, 0x40, 0x73, 0xaf, 0x30,
	0x07, 0xd4, 0xc6, 0x0d, 0xa8, 0x85, 0xdb, 0x93, 0xca, 0x68, 0x0e, 0x53, 0x86, 0x1a, 0x61, 0xb6,
	0x7e, 0x56, 0x80, 0xf9, 0xf7, 0x5c, 0x83, 0x06, 0xcf, 0x5d, 0x0b, 0xa7, 0x62, 0x2d, 0x34, 0x16,
	0x67, 0x92, 0xa2, 0xaa, 0xf4, 0x89, 0x50, 0xcb, 0x3f, 0x8a, 0xb0, 0xb0, 0xea, 0xd8, 0x0f, 0xcc,
	0xed, 0x4d, 0xea, 0x86, 0x52, 0xee, 0x27, 0x5d, 0x4a, 0x92, 0xe2, 0x30, 0x49, 0x4a, 0x09, 0x49,
	0xee, 0x40, 0x89, 0x1a, 0x46, 0xb3, 0x7c, 0xb2, 0x74, 0xbe, 0xb1, 0x78, 0x29, 0x29, 0x49, 0xfe,
	0xe2, 0xed, 0x15, 0xc3, 0xf8, 0x7f, 0x3b, 0xf0, 0x76, 0x55, 0xa4, 0x23, 0x5f, 0x83, 0xea, 0x80,
	0x4f, 0x37, 0x2b, 0x9c, 0x43, 0x7b, 0x0c, 0x0e, 0x62, 0x24, 0x98, 0x48, 0x6a, 0xdc, 0x92, 0xc1,
	0x2c, 0x16, 0x30, 0xa3, 0x59, 0x3d, 0x59, 0xc2, 0x2d, 0xc9, 0xa1, 0xf2, 0x2a, 0xd4, 0xc2, 0x25,
	0xd1, 0x79, 0x1e, 0xb3, 0x5d, 0xb9, 0x69, 0xfc, 0x24, 0x73, 0x50, 0xd9, 0xa1, 0xd6, 0x20, 0xdc,
	0xac, 0x18, 0x2c, 0x17, 0x6f, 0x15, 0x94, 0xdb, 0xd0, 0x48, 0x2c, 0x74, 0x10, 0xd2, 0xd6, 0xdf,
	0x8b, 0x70, 0x74, 0x8b, 0xe9, 0x1e, 0x0b, 0x9e, 0x9d, 0xde, 0x97, 0x93, 0x7a, 0x3f, 0x9f, 0xd4,
	0x5a, 0xce, 0xca, 0x19, 0xa5, 0xaf, 0x66, 0x94, 0x7e, 0x69, 0x3f, 0xf2, 0xaf, 0xbc, 0xc6, 0xdf,
	0x80, 0xb9, 0x55, 0x9e, 0xde, 0x57, 0x74, 0xcc, 0xdd, 0x07, 0x8d, 0xff, 0xd6, 0x0f, 0xe0, 0xe8,
	0xaa, 0xe3, 0xee, 0x66, 0xc3, 0xb8, 0x0d, 0x55, 0x99, 0x14, 0x04, 0xf9, 0x42, 0x36, 0x29, 0xbc,
	0xdd, 0x7b, 0xc4, 0xf4, 0x40, 0x95, 0x58, 0xe4, 0x16, 0x34, 0x0c, 0xe6, 0x07, 0xa6, 0xcd, 0x2b,
	0x88, 0xcc, 0x24, 0xc3, 0x88, 0x92, 0xa8, 0xad, 0x27, 0x30, 0x7f, 0x8f, 0xab, 0xef, 0x39, 0x67,
	0x92, 0xd6, 0xe7, 0x47, 0x60, 0x36, 0x9b, 0xeb, 0x23, 0xd6, 0x85, 0x04, 0xeb, 0x9b, 0x50, 0xa6,
	0xae, 0x1b, 0xd6, 0x8a, 0x53, 0xa3, 0x6a, 0x45, 0x7b, 0xc5, 0x75, 0xfd, 0xb5, 0x09, 0x95, 0x13,
	0x90, 0xfb, 0xd0, 0xd0, 0x79, 0x20, 0x6b, 0x7d, 0xea, 0xfa, 0x5c, 0xaa, 0xc6, 0xe2, 0xb9, 0x91,
	0xf4, 0x51, 0xe0, 0x23, 0x17, 0xd0, 0xa3, 0x11, 0xf2, 0x32, 0x28, 0xeb, 0x3b, 0xb6, 0xe6, 0xb3,
	0xc0, 0xe7, 0x1b, 0xd9, 0x8f, 0xd7, 0x3d, 0x8e, 0xbf, 0xc5, 0x02, 0xce, 0xcb, 0x88, 0x46, 0x64,
	0x03, 0x8d, 0xe5, 0x5a, 0xce, 0x6e, 0x9f, 0xd9, 0x81, 0x2f, 0x73, 0xe9, 0xf9, 0xd1, 0xbc, 0x62,
	0xfc, 0xb5, 0x09, 0x35, 0x49, 0x8e, 0xea, 0x79, 0xe4, 0xf4, 0xfc, 0x66, 0x75, 0x0c, 0xf5, 0xdc,
	0x77, 0x7a, 0x5c, 0x3d, 0x48, 0x40, 0xd6, 0x01, 0x22, 0x0b, 0xf9, 0xcd, 0xc9, 0x31, 0x76, 0xf4,
	0x56, 0x84, 0x8e, 0x3b, 0x8a, 0x89, 0xc9, 0x32, 0x54, 0x6c, 0xc7, 0x60, 0x7e, 0xb3, 0xc6, 0xb9,
	0xb4, 0x46, 0x73, 0x41, 0xcc, 0xb5, 0x09, 0x55, 0x90, 0x90, 0x15, 0xa8, 0xb9, 0x2c, 0x10, 0x6a,
	0xad, 0x73, 0xf2, 0xd3, 0x23, 0xc9, 0xbb, 0x2c, 0x90, 0x3a, 0x9d, 0x74, 0xc5, 0x27, 0xaa, 0xc0,
	0x75, 0x0c, 0xbf, 0x09, 0x63, 0xa8, 0xa0, 0xeb, 0x18, 0x5c, 0x05, 0x48, 0x40, 0x36, 0x61, 0xca,
	0x63, 0xae, 0x65, 0xea, 0x54, 0xac, 0xdf, 0x18, 0xc3, 0x14, 0xaa, 0x20, 0x90, 0x32, 0x34, 0xbc,
	0x78, 0x48, 0x56, 0xa1, 0xe6, 0x33, 0x6f, 0xc7, 0x44, 0x7d, 0x4e, 0x71, 0x56, 0x67, 0x46, 0xb2,
	0xda, 0x92, 0xc8, 0x6b, 0x13, 0x6a, 0x44, 0x48, 0xde, 0x84, 0x49, 0x9f, 0x67, 0x42, 0xbf, 0x79,
	0x64, 0x0c, 0x75, 0x88, 0xac, 0xc9, 0xd5, 0x21, 0xc9, 0x88, 0x0d, 0xc7, 0xa4, 0x54, 0x18, 0xe1,
	0x9a, 0xee, 0xd8, 0x81, 0xe7, 0x58, 0x16, 0xf3, 0xfc, 0xe6, 0x34, 0xe7, 0x78, 0x7d, 0x9c, 0x0d,
	0x22, 0xed, 0x6a, 0x4c, 0xba, 0x36, 0xa1, 0x2e, 0x78, 0xb9, 0x33, 0xca, 0x15, 0x28, 0x63, 0xdc,
	0x91, 0x33, 0x50, 0x31, 0x03, 0xd6, 0xc7, 0x94, 0x57, 0xca, 0x76, 0x07, 0x2b, 0xae, 0xab, 0x8a,
	0x59, 0xe5, 0x36, 0x40, 0x1c, 0x66, 0xe4, 0x52, 0x9a, 0x68, 0x3e, 0xb7, 0x0c, 0x27, 0x48, 0xe3,
	0xa8, 0x1a, 0x49, 0x1a, 0xa1, 0x85, 0xa4, 0xaf, 0x41, 0x23, 0x11, 0x44, 0xe4, 0x72, 0x9a, 0x36,
	0x95, 0x2a, 0x63, 0xbc, 0x90, 0xf8, 0x0a, 0x94, 0x31, 0x74, 0x46, 0xee, 0xf0, 0xbe, 0xd3, 0x4b,
	0x88, 0x19, 0x87, 0xca, 0x48, 0x31, 0x23, 0xb4, 0x90, 0xb4, 0x03, 0x15, 0x1e, 0x1f, 0xe4, 0x6c,
	0x9a, 0x6a, 0x36, 0x45, 0xe5, 0x18, 0x11, 0xc1, 0x75, 0x98, 0x94, 0x11, 0x41, 0xce, 0xa7, 0x49,
	0x48, 0x92, 0x44, 0xe0, 0x24, 0xf6, 0x83, 0x71, 0x30, 0x72, 0x3f, 0x5d, 0xc7, 0x48, 0xe8, 0x2e,
	0xe1, 0xf5, 0x23, 0x75, 0x17, 0xe3, 0x85, 0xc4, 0x4b, 0x50, 0x0b, 0xfd, 0x9c, 0x5c, 0x48, 0x53,
	0x1e, 0x4d, 0x97, 0x7f, 0x8e, 0x94, 0xd8, 0x97, 0x74, 0xed, 0x91, 0xfb, 0x12, 0x38, 0x21, 0xd1,
	0x3b, 0xb0, 0x90, 0xef, 0xbd, 0xe4, 0x66, 0x9a, 0xc7, 0xa9, 0x1c, 0x99, 0xd3, 0x24, 0x92, 0xe5,
	0x5d, 0x88, 0x1b, 0xf4, 0xd6, 0xdf, 0x2a, 0x30, 0x95, 0x0c, 0x97, 0xdc, 0x72, 0xf5, 0x0a, 0x94,
	0xa8, 0xeb, 0xca, 0x6a, 0x95, 0x8d, 0x81, 0xb5, 0x09, 0x15, 0x67, 0xc9, 0xab, 0x00, 0x71, 0x69,
	0x92, 0x95, 0x29, 0xdf, 0xf5, 0xd7, 0x26, 0xd4, 0x7a, 0x54, 0x87, 0x90, 0x2e, 0x2e, 0x43, 0xb2,
	0x0a, 0xe5, 0xfb, 0x3d, 0xd2, 0x45, 0x35, 0x87, 0xdc, 0x02, 0x88, 0x6b, 0x86, 0xac, 0x38, 0x43,
	0x7c, 0x9e, 0x17, 0xab, 0x68, 0x84, 0xdb, 0x79, 0xe4, 0xf4, 0x64, 0x75, 0xc9, 0x3a, 0x3c, 0x6e,
	0xe7, 0x91, 0xd3, 0x23, 0x4b, 0xc9, 0xea, 0x3f, 0xb9, 0x57, 0xaa, 0xc8, 0xcd, 0x51, 0xaa, 0xb8,
	0x2d, 0x38, 0x0b, 0x65, 0xac, 0x01, 0xb2, 0x6a, 0xec, 0x71, 0x71, 0x4c, 0xd3, 0x38, 0x4f, 0xae,
	0xc0, 0xa4, 0x2c, 0x11, 0xb2, 0x42, 0xe4, 0xb8, 0xf6, 0xda, 0x84, 0x5a, 0x15, 0xf5, 0x00, 0x45,
	0x76, 0x1d, 0x43, 0x56, 0x83, 0xac, 0x4f, 0xa3, 0xc8, 0xae, 0x63, 0x90, 0xdb, 0xd0, 0x48, 0xa4,
	0x7e, 0x99, 0xf9, 0x87, 0xb8, 0x32, 0xaa, 0x24, 0xce, 0xf3, 0xa4, 0x83, 0x19, 0x9a, 0x3b, 0xab,
	0xcc, 0xf2, 0x79, 0x7e, 0x2c, 0x12, 0x32, 0xff, 0x24, 0x97, 0xa1, 0x2a, 0x72, 0xb3, 0xcc, 0xe8,
	0x39, 0x1e, 0x8c, 0xe2, 0x0b, 0x1c, 0xf2, 0x2d, 0x58, 0xc8, 0x4f, 0xdf, 0x32, 0x7b, 0xef, 0xef,
	0xbb, 0x6b, 0x13, 0xea, 0x7c, 0x6e, 0xae, 0x0e, 0x8f, 0x6f, 0x33, 0xc3, 0x8f, 0x6f, 0x29, 0x87,
	0xff, 0xa2, 0x04, 0xe5, 0x4d, 0x16, 0xd0, 0xa8, 0x81, 0x2b, 0x24, 0x0e, 0x02, 0xa3, 0x8f, 0x0e,
	0x2f, 0x02, 0xf8, 0xcc, 0x7a, 0xa0, 0x59, 0xa6, 0xfd, 0xd8, 0x0f, 0x3b, 0x42, 0x84, 0x6c, 0x20,
	0x80, 0x5c, 0x80, 0xd9, 0x70, 0x15, 0x6d, 0x87, 0x79, 0x3e, 0x76, 0xad, 0xa2, 0x3b, 0x9c, 0x09,
	0xe1, 0xef, 0x0b, 0x30, 0x72, 0xd2, 0x3d, 0x46, 0x03, 0x66, 0x68, 0x34, 0x90, 0xe7, 0xef, 0xba,
	0x84, 0xac, 0x04, 0xe4, 0x25, 0x80, 0x6d, 0x66, 0x33, 0x4f, 0x74, 0xbe, 0xe8, 0xa7, 0x25, 0x35,
	0x01, 0x21, 0x37, 0xa0, 0x6a, 0xd1, 0x1e, 0xb3, 0xb0, 0xc5, 0x29, 0x65, 0x2f, 0x1b, 0x70, 0x73,
	0xed, 0x0d, 0x3e, 0x2d, 0x0f, 0x19, 0x02, 0x97, 0xac, 0x42, 0x23, 0x71, 0x23, 0xd3, 0xac, 0xed,
	0xcd, 0x1a, 0x9c, 0x74, 0x25, 0xc6, 0x11, 0xf4, 0x49, 0x2a, 0x3c, 0x57, 0x24, 0x78, 0x1f, 0xe8,
	0x48, 0xf2, 0x06, 0xcc, 0x66, 0x79, 0x1f, 0xe8, 0x5c, 0x62, 0x01, 0xc4, 0x1d, 0xff, 0x33, 0xef,
	0xe5, 0xff, 0x5a, 0x84, 0xd2, 0x8a, 0xeb, 0x3e, 0xf3, 0xdb, 0x87, 0x33, 0x22, 0xb7, 0x56, 0x86,
	0x46, 0x9d, 0xc8, 0xae, 0x57, 0xa1, 0x22, 0xdc, 0xae, 0xca, 0xcd, 0xa6, 0x64, 0x92, 0x70, 0x9b,
	0xbb, 0xa0, 0xb0, 0x97, 0x40, 0xcc, 0xf8, 0xd8, 0x64, 0xd6, 0xc7, 0x70, 0x5a, 0x6c, 0x44, 0x33,
	0x5d, 0x9e, 0xae, 0x70, 0x5a, 0x40, 0xd6, 0x5d, 0xb2, 0x04, 0x53, 0xa6, 0x6e, 0xda, 0xdb, 0x54,
	0xc3, 0x53, 0x1d, 0x8b, 0x92, 0x94, 0xb8, 0x99, 0x5b, 0xe7, 0x53, 0x78, 0xee, 0x63, 0x6a, 0xc3,
	0x8c, 0x07, 0xca, 0x2d, 0x80, 0x58, 0x92, 0x03, 0x59, 0xf7, 0xf7, 0x15, 0x98, 0xec, 0x3a, 0xc6,
	0x96, 0xcb, 0x74, 0x72, 0x03, 0x26, 0x77, 0x1c, 0x6b, 0xd0, 0x67, 0x61, 0x6d, 0x53, 0x32, 0x19,
	0x0f, 0xb1, 0xda, 0xef, 0x73, 0x14, 0x35, 0x44, 0x25, 0x77, 0x78, 0x01, 0x0a, 0xa8, 0x69, 0x63,
	0x5b, 0x58, 0xe4, 0x84, 0x2f, 0xe6, 0x11, 0xae, 0x86, 0x58, 0x6a, 0x82, 0x80, 0x6c, 0xc2, 0x34,
	0x66, 0x66, 0xcd, 0x67, 0x16, 0xd3, 0x03, 0xc7, 0xc3, 0x08, 0x47, 0x16, 0x67, 0xf3, 0x58, 0x60,
	0x2e, 0xdf, 0x0a, 0x11, 0x85, 0xda, 0x8f, 0xd8, 0x49, 0x18, 0xb9, 0x0a, 0x73, 0x32, 0x57, 0x6a,
	0x54, 0xd7, 0x9d, 0x81, 0x1d, 0x68, 0x09, 0xdb, 0x13, 0x39, 0xb7, 0x22, 0xa6, 0xb0, 0x98, 0x90,
	0x17, 0xa0, 0xce, 0x05, 0xe0, 0x68, 0x22, 0x27, 0xd4, 0x10, 0xc0, 0x27, 0x2f, 0x03, 0x31, 0xfb,
	0x74, 0x9b, 0x69, 0xee, 0xc0, 0xb2, 0xb4, 0xb0, 0x9b, 0x16, 0x97, 0x05, 0xb3, 0x7c, 0xa6, 0x3b,
	0xb0, 0x2c, 0xd9, 0x5e, 0x28, 0x6f, 0x02, 0xd9, 0x2b, 0xe1, 0x81, 0x82, 0xf5, 0x5f, 0x05, 0xa8,
	0x47, 0x7a, 0xca, 0xcd, 0x95, 0x73, 0x50, 0xe1, 0xeb, 0x86, 0xb4, 0x7c, 0x40, 0x14, 0xa8, 0xe9,
	0x4e, 0xbf, 0x4f, 0x6d, 0x43, 0xe8, 0xaf, 0xae, 0x46, 0x63, 0xb2, 0x01, 0x53, 0xc2, 0x56, 0x5a,
	0x1f, 0x37, 0x2d, 0xef, 0x5b, 0x2e, 0x8c, 0x34, 0x91, 0xb4, 0xf2, 0x26, 0x12, 0xa8, 0x8d, 0x9d,
	0x78, 0xa0, 0x7c, 0x07, 0x1a, 0x89, 0xb9, 0x5c, 0x11, 0x5f, 0x80, 0xba, 0xc7, 0xa8, 0xa1, 0x39,
	0xb6, 0xb5, 0xcb, 0xc5, 0xac, 0xa9, 0x35, 0x04, 0xbc, 0x6d, 0x5b, 0xbb, 0x18, 0x00, 0x5c, 0x0c,
	0xcd, 0xa5, 0xc1, 0xc3, 0x30, 0x56, 0x39, 0xa4, 0x4b, 0x83, 0x87, 0xca, 0x6d, 0xa8, 0x0a, 0xf6,
	0xc3, 0x38, 0x3f, 0x74, 0x7c, 0x49, 0x2b, 0x14, 0x50, 0x43, 0x00, 0x92, 0xb6, 0xae, 0x41, 0x49,
	0xa5, 0x4f, 0xc8, 0x02, 0x54, 0x1f, 0x38, 0x5e, 0x9f, 0x06, 0x92, 0x52, 0x8e, 0x90, 0x9f, 0x41,
	0x03, 0x1a, 0xe6, 0x0d, 0xfc, 0x6e, 0x7d, 0x22, 0xd4, 0x2d, 0x5b, 0xa2, 0xd3, 0x50, 0xee, 0xb3,
	0x80, 0xca, 0x8b, 0x92, 0xd9, 0x6c, 0x8a, 0x56, 0xf9, 0x2c, 0xb9, 0x1e, 0xf1, 0x41, 0x35, 0xbe,
	0x9c, 0xdb, 0x6a, 0xb5, 0xef, 0xd1, 0x80, 0x0a, 0xff, 0xe4, 0xc8, 0xca, 0x4d, 0xa8, 0x47, 0xa0,
	0x03, 0xc5, 0xe7, 0x17, 0x25, 0x28, 0xdd, 0x77, 0x7a, 0x63, 0xca, 0x36, 0x1b, 0x77, 0x8c, 0x75,
	0x91, 0xc0, 0x2e, 0x42, 0x25, 0xce, 0x8a, 0x8d, 0xc5, 0xb9, 0x4c, 0xdb, 0xd5, 0x46, 0xb3, 0xab,
	0x02, 0x85, 0x5f, 0x15, 0x89, 0x9b, 0xa6, 0xf2, 0xde, 0x1e, 0x86, 0x23, 0xa7, 0x6e, 0x9c, 0x94,
	0xa7, 0x50, 0xe6, 0x79, 0xe3, 0x24, 0x34, 0x5c, 0xea, 0x51, 0xcb, 0x62, 0x96, 0xe9, 0xf7, 0xb9,
	0x88, 0x15, 0x35, 0x09, 0x42, 0x0c, 0xdd, 0xe9, 0xbb, 0x16, 0x13, 0x35, 0xb0, 0x28, 0x30, 0x12,
	0x20, 0xd2, 0x81, 0x5a, 0xc0, 0xfa, 0xae, 0x85, 0x49, 0xaf, 0xb4, 0x37, 0x29, 0x4b, 0x07, 0x55,
	0x23, 0x24, 0xe5, 0xe3, 0x02, 0x54, 0x85, 0x3c, 0xbc, 0x41, 0x08, 0xa8, 0x17, 0x68, 0x81, 0x19,
	0xf9, 0x4b, 0x9d, 0x43, 0xde, 0x35, 0xfb, 0x8c, 0x9c, 0x83, 0x99, 0x78, 0x25, 0x81, 0x23, 0x14,
	0x34, 0x1d, 0x83, 0x39, 0xe2, 0x02, 0x54, 0xa9, 0x1e, 0x98, 0x3b, 0x42, 0x82, 0x8a, 0x2a, 0x47,
	0x58, 0x5d, 0xfc, 0x81, 0xae, 0x33, 0x66, 0x30, 0x83, 0xab, 0xa6, 0xa2, 0xc6, 0x00, 0xee, 0x6f,
	0xd4, 0xb4, 0x98, 0xc1, 0x93, 0x47, 0x45, 0x95, 0xa3, 0xd6, 0x47, 0x05, 0xa8, 0x47, 0xdd, 0xea,
	0x98, 0xf6, 0xbb, 0x11, 0x59, 0x20, 0xe7, 0xef, 0x8c, 0x88, 0x59, 0xd6, 0x0e, 0x2f, 0x45, 0x9a,
	0x98, 0x83, 0x8a, 0xfb, 0x90, 0xfa, 0xa1, 0x12, 0xc4, 0xa0, 0xf5, 0x65, 0x05, 0xca, 0x98, 0x97,
	0xc6, 0x14, 0xe2, 0x02, 0x94, 0x7d, 0x97, 0xe9, 0x52, 0x84, 0xf9, 0x6c, 0x2f, 0x2d, 0x5c, 0x86,
	0xa3, 0x60, 0x3c, 0x9a, 0xbe, 0xd6, 0xa7, 0xbc, 0x4e, 0x97, 0x44, 0xa4, 0x9b, 0xfe, 0x26, 0x1f,
	0x93, 0x4e, 0xc6, 0x9d, 0x8e, 0xed, 0xe5, 0x94, 0xde, 0x87, 0x2d, 0xfd, 0xe9, 0x65, 0x68, 0xb0,
	0x0f, 0x02, 0xe6, 0xd9, 0xd4, 0xd2, 0x4c, 0x43, 0xee, 0x05, 0x42, 0xd0, 0xba, 0x81, 0x08, 0xae,
	0xe7, 0xec, 0x98, 0x06, 0x56, 0x51, 0x43, 0x5a, 0x13, 0x42, 0xd0, 0xba, 0x41, 0x4e, 0xc3, 0x91,
	0x81, 0xed, 0xeb, 0x0f, 0x99, 0x31, 0xb0, 0x68, 0xcf, 0x62, 0x52, 0xb6, 0x34, 0x50, 0xf9, 0x5d,
	0x29, 0x52, 0xdc, 0xeb, 0x50, 0xd3, 0xa9, 0x4b, 0x75, 0x33, 0xd8, 0x95, 0xda, 0x39, 0x39, 0x44,
	0xda, 0xf6, 0xaa, 0xc4, 0x53, 0x23, 0x8a, 0x58, 0xed, 0xc5, 0x84, 0xda, 0xc9, 0x1d, 0x59, 0x58,
	0x4c, 0xfb, 0x81, 0x23, 0x7d, 0x7a, 0x28, 0x53, 0xfc, 0x5e, 0xb7, 0x1f, 0x38, 0xa2, 0xf4, 0xe0,
	0x97, 0xb2, 0x06, 0xb5, 0x70, 0x29, 0x8c, 0x6b, 0xdd, 0x1d, 0x70, 0xc9, 0x4a, 0x2a, 0x7e, 0xa2,
	0xd7, 0xf5, 0x59, 0xdf, 0xf1, 0x44, 0x82, 0x2d, 0xa9, 0x72, 0x84, 0x59, 0x8e, 0x5f, 0x60, 0x95,
	0x38, 0x94, 0x7f, 0x2b, 0x5f, 0x16, 0xa0, 0x16, 0x2e, 0x40, 0xce, 0xc0, 0xf4, 0x63, 0x94, 0xc0,
	0x8a, 0x9a, 0x65, 0xa1, 0xdf, 0x23, 0x02, 0x1a, 0xb6, 0xca, 0xc7, 0xa1, 0xe6, 0xf8, 0x5a, 0xb2,
	0xd2, 0x4c, 0x3a, 0xfe, 0x3a, 0xaf, 0x35, 0xcb, 0x70, 0x3c, 0xaa, 0xdf, 0x9a, 0x37, 0xb0, 0x31,
	0xa2, 0x22, 0x66, 0x22, 0xa1, 0x1f, 0x8b, 0x10, 0x54, 0x31, 0x1f, 0xb2, 0x3d, 0x07, 0x33, 0xa8,
	0x01, 0x8b, 0x05, 0x99, 0x5e, 0x7d, 0x5a, 0x82, 0x43, 0xc4, 0xcb, 0x40, 0x10, 0xa2, 0xb9, 0x9e,
	0xf3, 0xc1, 0x6e, 0x84, 0x2b, 0xca, 0xf3, 0x2c, 0xce, 0x74, 0x71, 0x42, 0x62, 0xb7, 0x7e, 0x5a,
	0x84, 0x52, 0xd7, 0x31, 0x0e, 0x9d, 0x25, 0xcf, 0x49, 0x97, 0x1f, 0x91, 0x79, 0x84, 0xc3, 0x8f,
	0x4c, 0x91, 0x5d, 0xc7, 0xc8, 0xba, 0xf4, 0xf7, 0x47, 0x87, 0x26, 0xb6, 0xb9, 0x7d, 0xe6, 0xfb,
	0x09, 0x2d, 0xcb, 0x21, 0x1a, 0xd8, 0x63, 0xd4, 0x8f, 0x54, 0x2a, 0x47, 0x08, 0xc7, 0x8a, 0xb7,
	0xde, 0x95, 0x8a, 0x93, 0x23, 0xce, 0xdf, 0x31, 0xd6, 0xbb, 0x52, 0x47, 0x62, 0xd0, 0xfa, 0xa4,
	0x0a, 0x93, 0xb2, 0xa1, 0x3d, 0xb4, 0x72, 0x2e, 0xa7, 0x94, 0xd3, 0xcc, 0xe9, 0x95, 0x93, 0x29,
	0x61, 0x31, 0xa3, 0x21, 0x25, 0x17, 0x3f, 0xad, 0xa5, 0xdf, 0x96, 0x64, 0xe4, 0xe7, 0xdd, 0x82,
	0x5c, 0xc7, 0x8d, 0x79, 0x41, 0x6e, 0x6b, 0x99, 0x5c, 0xbf, 0xdd, 0x75, 0xbc, 0x40, 0x15, 0xb8,
	0xe4, 0x2e, 0xd4, 0xb0, 0xa1, 0x1c, 0xd6, 0x4f, 0xa6, 0xe8, 0xb6, 0x24, 0xa2, 0xa8, 0xd7, 0x11,
	0x1d, 0xa6, 0xfd, 0xb0, 0x31, 0x0f, 0x95, 0x1d, 0x03, 0xb0, 0xa4, 0x45, 0x19, 0xa9, 0xeb, 0xf3,
	0x7f, 0xa1, 0xea, 0x6a, 0x12, 0x44, 0xce, 0xc2, 0xb4, 0xe5, 0x50, 0xa3, 0x47, 0x2d, 0x6a, 0xeb,
	0x9c, 0x49, 0x55, 0xb8, 0x7a, 0x1a, 0xaa, 0xbc, 0x06, 0x47, 0x52, 0x22, 0x1c, 0xa8, 0x61, 0xfc,
	0x51, 0x01, 0xca, 0xb8, 0xf1, 0xdc, 0x76, 0x49, 0x81, 0x1a, 0xff, 0x33, 0x5f, 0x77, 0xac, 0xb0,
	0x5b, 0x0a, 0xc7, 0x22, 0x51, 0x78, 0x81, 0x2c, 0x75, 0xfc, 0x1b, 0xf3, 0x6a, 0x40, 0xbd, 0x6d,
	0x16, 0x68, 0x7c, 0x4a, 0xec, 0x19, 0x04, 0x88, 0x2f, 0x12, 0xf6, 0xca, 0x7c, 0x5a, 0x94, 0x3b,
	0x9e, 0xb0, 0x70, 0x52, 0xf9, 0x55, 0x5c, 0x91, 0x19, 0x2c, 0x24, 0x37, 0xa9, 0x99, 0xf6, 0xb6,
	0xc7, 0x7c, 0x3f, 0x3a, 0x58, 0xb4, 0x87, 0x3b, 0x45, 0x7b, 0xc3, 0xa1, 0xc6, 0xdd, 0x50, 0x3b,
	0x82, 0x4e, 0x9d, 0x4f, 0xa9, 0x2c, 0x64, 0xa6, 0xdc, 0x85, 0xa3, 0x39, 0xd8, 0x51, 0x97, 0x98,
	0xd0, 0x07, 0xef, 0x12, 0x79, 0x47, 0x3f, 0x0d, 0xc5, 0xf5, 0xae, 0xd4, 0x46, 0xd1, 0xec, 0xb6,
	0x3e, 0x43, 0xa9, 0xc5, 0x75, 0xc9, 0x78, 0x01, 0x72, 0x35, 0xd5, 0xff, 0x9d, 0xd8, 0x7b, 0x01,
	0x93, 0x6d, 0xfe, 0x22, 0xaf, 0x2e, 0xc5, 0x5e, 0x7d, 0xf8, 0x86, 0xf0, 0x97, 0x65, 0x98, 0xcf,
	0xbd, 0xaa, 0x39, 0x74, 0x7c, 0x2f, 0xa7, 0xe2, 0xfb, 0xec, 0xbe, 0x77, 0x42, 0xc9, 0x68, 0x7f,
	0x33, 0x13, 0xed, 0xe7, 0xc7, 0xa0, 0x4e, 0xc7, 0xfe, 0x3f, 0x0b, 0x32, 0xf6, 0x2f, 0xc0, 0xac,
	0xc1, 0x7c, 0xd3, 0x63, 0x86, 0x26, 0x6f, 0x9c, 0x7c, 0xd9, 0x4a, 0xce, 0x48, 0xb8, 0xe4, 0xe7,
	0x93, 0x2d, 0xa8, 0xc7, 0xc7, 0x45, 0x61, 0x87, 0xa5, 0xf1, 0xc4, 0x6e, 0x67, 0x4e, 0x8f, 0x31,
	0x1f, 0xf2, 0x2a, 0x4c, 0xb9, 0x8e, 0xa1, 0x8d, 0xd3, 0x85, 0x36, 0x5c, 0xc7, 0x78, 0x37, 0x6c,
	0x44, 0x5f, 0x87, 0xe9, 0xff, 0xe0, 0xc0, 0x67, 0x44, 0x31, 0x73, 0x01, 0x66, 0xf5, 0x81, 0xe7,
	0x31, 0x3b, 0xd8, 0xb3, 0x7f, 0x09, 0x8f, 0xf6, 0xdf, 0x81, 0xa3, 0x4e, 0x0f, 0x8f, 0xb2, 0xcc,
	0xd0, 0x12, 0x37, 0x56, 0xa2, 0x13, 0x20, 0xe1, 0xd4, 0xd7, 0xa3, 0x99, 0xd6, 0x6f, 0x4a, 0x00,
	0xf1, 0x25, 0xe4, 0xa1, 0x3d, 0xa5, 0x93, 0xf2, 0x94, 0x17, 0xf2, 0xaf, 0x38, 0x93, 0xee, 0xb1,
	0x94, 0x71, 0x8f, 0x17, 0x87, 0x91, 0xa4, 0x7d, 0xe2, 0xe7, 0x87, 0xf0, 0x89, 0x25, 0x91, 0xf1,
	0xd1, 0x0c, 0xb2, 0x73, 0x3d, 0x9e, 0x5c, 0x8c, 0xdf, 0x9e, 0x85, 0x76, 0x52, 0x23, 0xd4, 0x43,
	0x5b, 0xfd, 0xf9, 0xd8, 0xed, 0x8f, 0x25, 0x4c, 0x13, 0xe1, 0xd5, 0xfb, 0x61, 0xcd, 0xd6, 0x4e,
	0x99, 0x4d, 0xc9, 0xbd, 0xe4, 0x4f, 0x5a, 0xed, 0x46, 0xc6, 0x6a, 0x27, 0x86, 0x50, 0xa4, 0x8d,
	0x36, 0x90, 0x36, 0x4b, 0x1a, 0xa2, 0x70, 0x78, 0x43, 0x14, 0xc7, 0x34, 0xc4, 0x67, 0x71, 0xd5,
	0xb9, 0x05, 0xcd, 0xd0, 0x12, 0xf6, 0xa0, 0xdf, 0x63, 0x9e, 0x26, 0xbb, 0x7d, 0x66, 0x48, 0x8b,
	0x2c, 0xc8, 0xf9, 0xb7, 0xf8, 0xf4, 0x56, 0x38, 0x8b, 0x86, 0x91, 0x14, 0x7d, 0xd3, 0x8f, 0x89,
	0xc4, 0x39, 0x95, 0x88, 0xa9, 0xcd, 0xc4, 0x0c, 0x2e, 0x15, 0x3a, 0xe6, 0x9e, 0xa5, 0x44, 0x45,
	0x5d, 0x90, 0xf3, 0x99, 0xa5, 0x5a, 0xbf, 0x2e, 0x03, 0xc4, 0x7f, 0x91, 0x3c, 0x8b, 0x50, 0x8c,
	0xb9, 0x8f, 0x1d, 0x8a, 0x49, 0x92, 0xff, 0xb9, 0x50, 0xfc, 0x73, 0xec, 0x01, 0x43, 0x02, 0xac,
	0x30, 0x2c, 0xc0, 0xb0, 0x43, 0x8a, 0x76, 0x23, 0xac, 0x1d, 0x8d, 0x71, 0xc7, 0xe2, 0x9d, 0x50,
	0x62, 0xc7, 0xc2, 0xb6, 0x33, 0x12, 0x1e, 0xed, 0xf8, 0x0a, 0x10, 0xba, 0x43, 0x4d, 0x7e, 0xac,
	0x8c, 0x91, 0xc5, 0x55, 0xc1, 0xff, 0x45, 0x33, 0x11, 0xfa, 0x35, 0x98, 0x1b, 0xd8, 0x39, 0x04,
	0xa2, 0xa3, 0x3a, 0x9a, 0x98, 0x0b, 0x49, 0x5a, 0x7f, 0x28, 0x41, 0x55, 0xfc, 0x3d, 0x75, 0x68,
	0x97, 0xb9, 0x94, 0x72, 0x99, 0x63, 0x7b, 0xff, 0xf8, 0x4a, 0xba, 0xcb, 0xb5, 0x8c, 0xbb, 0x1c,
	0xcf, 0x43, 0xcf, 0x74, 0xf1, 0x5f, 0x79, 0x57, 0x21, 0xa7, 0x60, 0x2a, 0xbc, 0x1d, 0x4e, 0xdc,
	0x0a, 0x37, 0x24, 0x0c, 0xfb, 0xc3, 0xe7, 0x94, 0xd8, 0x3f, 0x2e, 0xc0, 0x91, 0xd4, 0xe6, 0xc8,
	0x26, 0x4c, 0xf5, 0x69, 0xa0, 0x3f, 0xd4, 0xe4, 0x5f, 0x4c, 0xa2, 0x51, 0xbe, 0x38, 0x54, 0x1b,
	0xed, 0x4d, 0xc4, 0x4e, 0xfe, 0xe1, 0xd4, 0xe8, 0xc7, 0x10, 0xe5, 0x0d, 0x98, 0xcd, 0x22, 0x1c,
	0xa4, 0x2f, 0x59, 0xfc, 0xa8, 0x0e, 0x93, 0xe2, 0x39, 0x9a, 0x4f, 0xf0, 0x8c, 0xc1, 0xdf, 0x54,
	0xa5, 0x2e, 0x3b, 0x73, 0x5e, 0x07, 0x2b, 0x27, 0x87, 0x23, 0x88, 0xd7, 0x6c, 0xad, 0x3b, 0x3f,
	0xfc, 0xd3, 0x5f, 0x7e, 0x52, 0xbc, 0x49, 0x96, 0x3a, 0xd4, 0x75, 0x7d, 0xdd, 0x31, 0xc4, 0x9b,
	0xe5, 0x98, 0xac, 0xb3, 0x73, 0xb5, 0xbd, 0xd8, 0x11, 0x0f, 0x9d, 0x3b, 0x4f, 0xe5, 0x79, 0xeb,
	0xc3, 0xce, 0x53, 0xec, 0x9a, 0x3f, 0x24, 0x9f, 0x16, 0xa0, 0x16, 0xbe, 0x94, 0x25, 0xaf, 0xa4,
	0x53, 0x58, 0xee, 0x63, 0x5e, 0xe5, 0xf4, 0x68, 0x24, 0x29, 0x56, 0x97, 0x8b, 0x75, 0x9f, 0xac,
	0x1d, 0x4a, 0xac, 0xce, 0xd3, 0xe8, 0xcf, 0x26, 0xf9, 0xfd, 0x21, 0xf9, 0xa4, 0x00, 0x55, 0xf1,
	0x1c, 0x8e, 0x9c, 0x4a, 0x8b, 0x90, 0xf3, 0x44, 0x2e, 0xad, 0xb8, 0xbc, 0x67, 0x80, 0xa1, 0x84,
	0x17, 0xff, 0x7b, 0x12, 0x7e, 0x5c, 0x80, 0xaa, 0x78, 0xac, 0x98, 0x96, 0x30, 0xf7, 0x39, 0xf0,
	0x18, 0x12, 0xbe, 0xcd, 0x25, 0x5c, 0x57, 0xee, 0x1d, 0x4e, 0x42, 0xca, 0xb9, 0xf9, 0x1d, 0x91,
	0x5b, 0x97, 0x0b, 0x17, 0xc9, 0x2f, 0x0a, 0x50, 0x5e, 0x75, 0xdc, 0x5d, 0x92, 0xb9, 0x64, 0xdf,
	0xf3, 0xc8, 0x71, 0x0c, 0xe1, 0xbe, 0xcd, 0x85, 0x7b, 0x4f, 0xe9, 0x8e, 0x27, 0x9c, 0x60, 0xdf,
	0x8e, 0x65, 0x94, 0x80, 0xb4, 0xa8, 0xba, 0xe3, 0xee, 0xa2, 0xa0, 0x9f, 0x17, 0x60, 0x46, 0x68,
	0x2d, 0xfe, 0x33, 0xa1, 0xb5, 0xff, 0x2b, 0xe0, 0x31, 0xc4, 0xfe, 0x26, 0x17, 0xfb, 0x9d, 0xd6,
	0xc6, 0x01, 0x75, 0x2a, 0xde, 0x79, 0xf4, 0xa9, 0xeb, 0xe7, 0x58, 0x1e, 0x45, 0xfe, 0xb4, 0x00,
	0x53, 0x42, 0x18, 0x79, 0xf8, 0x7d, 0x79, 0x9f, 0x07, 0xb4, 0x63, 0x08, 0xfb, 0x2e, 0x17, 0xf6,
	0xad, 0xd6, 0xfa, 0x01, 0x85, 0x95, 0x7f, 0xab, 0xe5, 0x4b, 0xda, 0xab, 0xf2, 0x2b, 0x8b, 0xeb,
	0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x3c, 0x1b, 0xc7, 0xfd, 0x30, 0x00, 0x00,
}
