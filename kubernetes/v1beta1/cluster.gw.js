// Code generated by protoc-gen-grpc-js-client
// source: cluster.proto
// DO NOT EDIT!

/*
This is a RSVP based Ajax client for gRPC gateway JSON APIs.
*/

var xhr = require('grpc-xhr');

func ClustersList(p, conf) {
	url = '/kubernetes/v1beta1/clusters'
	return xhr(url, 'GET', conf, p);
}

func ClustersDescribe(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['uid']
	delete p['uid']
	return xhr(url, 'GET', conf, p);
}

func ClustersCreate(p, conf) {
	url = '/kubernetes/v1beta1/clusters'
	return xhr(url, 'POST', conf, null, p);
}

func ClustersUpdate(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['name']
	delete p['name']
	return xhr(url, 'PUT', conf, null, p);
}

func ClustersScale(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['name'] + '/actions/scale'
	delete p['name']
	return xhr(url, 'PUT', conf, null, p);
}

func ClustersUpgrade(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['name'] + '/actions/upgrade'
	delete p['name']
	return xhr(url, 'PUT', conf, null, p);
}

func ClustersDelete(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['name']
	delete p['name']
	return xhr(url, 'DELETE', conf, p);
}

func ClustersClientConfig(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['name'] + '/client-config'
	delete p['name']
	return xhr(url, 'GET', conf, p);
}

func ClustersInstances(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['cluster_name'] + '/instances'
	delete p['cluster_name']
	return xhr(url, 'GET', conf, p);
}

func ClustersStartupScript(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['uid'] + '/startup-script/' + p['role']
	delete p['uid']
	delete p['role']
	return xhr(url, 'GET', conf, p);
}

func ClustersInstanceByIP(p, conf) {
	url = '/kubernetes/v1beta1/clusters/' + p['phid'] + '/instance-by-ip/' + p['external_ip']
	delete p['phid']
	delete p['external_ip']
	return xhr(url, 'GET', conf, p);
}

module.exports = {
  Clusters: {
      List: ClustersList,
      Describe: ClustersDescribe,
      Create: ClustersCreate,
      Update: ClustersUpdate,
      Scale: ClustersScale,
      Upgrade: ClustersUpgrade,
      Delete: ClustersDelete,
      ClientConfig: ClustersClientConfig,
      Instances: ClustersInstances,
      StartupScript: ClustersStartupScript,
      InstanceByIP: ClustersInstanceByIP
  }
}
