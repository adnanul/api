{
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "appscodedtypesStatus": {
      "properties": {
        "code": {
          "format": "string",
          "title": "Response status code",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "help": {
          "$ref": "#/definitions/dtypesHelp",
          "description": "Optional. Help link if there is an error."
        },
        "message": {
          "description": "User facing message.",
          "format": "string",
          "type": "string"
        },
        "status": {
          "description": "Response status code string.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Next Id = 5",
      "type": "object"
    },
    "dtypesHelp": {
      "properties": {
        "description": {
          "format": "string",
          "title": "Describe what link offers",
          "type": "string"
        },
        "url": {
          "description": "The URL of The link.",
          "format": "string",
          "type": "string"
        }
      },
      "title": "Provides links to documentation or for performing an out of band action.\nNext Id = 3",
      "type": "object"
    },
    "dtypesLongRunningResponse": {
      "properties": {
        "job_phid": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "title": "Types for long running operation. usually called as jobs.\nNext Id = 3",
      "type": "object"
    },
    "dtypesVoidResponse": {
      "properties": {
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "type_url": {
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "format": "string",
          "type": "string"
        },
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1Cluster": {
      "properties": {
        "api_server_url": {
          "format": "string",
          "type": "string"
        },
        "ca_cert": {
          "format": "string",
          "type": "string"
        },
        "created_at": {
          "format": "int64",
          "type": "integer"
        },
        "created_by": {
          "format": "string",
          "type": "string"
        },
        "default_access_level": {
          "format": "string",
          "type": "string"
        },
        "do_not_delete": {
          "format": "boolean",
          "type": "boolean"
        },
        "gce_project": {
          "format": "string",
          "type": "string"
        },
        "instance_root_password": {
          "format": "string",
          "type": "string"
        },
        "kube_bearer_token": {
          "format": "string",
          "type": "string"
        },
        "kube_password": {
          "format": "string",
          "type": "string"
        },
        "kube_saltbase_version": {
          "format": "string",
          "type": "string"
        },
        "kube_server_version": {
          "format": "string",
          "type": "string"
        },
        "kube_starter_version": {
          "format": "string",
          "type": "string"
        },
        "kube_user": {
          "format": "string",
          "type": "string"
        },
        "links": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_count": {
          "format": "int32",
          "type": "integer"
        },
        "os": {
          "format": "string",
          "type": "string"
        },
        "phid": {
          "format": "string",
          "type": "string"
        },
        "provider": {
          "format": "string",
          "type": "string"
        },
        "region": {
          "format": "string",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/v1beta1ClusterSettings"
        },
        "sku": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "format": "string",
          "type": "string"
        },
        "status_cause": {
          "format": "string",
          "type": "string"
        },
        "version": {
          "format": "string",
          "type": "string"
        },
        "zone": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterClientConfigRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterClientConfigResponse": {
      "properties": {
        "api_server_url": {
          "format": "string",
          "type": "string"
        },
        "ca_cert": {
          "format": "string",
          "type": "string"
        },
        "cluster_domain": {
          "format": "string",
          "type": "string"
        },
        "cluster_user_name": {
          "format": "string",
          "type": "string"
        },
        "context_name": {
          "format": "string",
          "type": "string"
        },
        "password": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        },
        "user_cert": {
          "format": "string",
          "type": "string"
        },
        "user_key": {
          "format": "string",
          "type": "string"
        },
        "user_token": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterCreateRequest": {
      "properties": {
        "cloud_credential": {
          "format": "string",
          "type": "string"
        },
        "cloud_credential_data": {
          "additionalProperties": {
            "format": "string",
            "type": "string"
          },
          "type": "object"
        },
        "default_access_level": {
          "format": "string",
          "title": "Default access level is to allow permission to the cluster\nwhen no Role matched for that specif user or group. This can\nset as\n   - team-admins       // to allow ns admin access\n   - cluster-admins    // to allow admin access\n   - cluster-editors   // to allow editor access\n   - cluster-deployers // to allow deployer access\n   - cluster-viewers   // to allow viewer access\n   - no-access         // to allow no default access\nIf not set this will set \"\"",
          "type": "string"
        },
        "do_not_delete": {
          "format": "boolean",
          "type": "boolean"
        },
        "gce_project": {
          "format": "string",
          "type": "string"
        },
        "hostfacts_version": {
          "format": "string",
          "type": "string"
        },
        "kube_saltbase_version": {
          "format": "string",
          "type": "string"
        },
        "kube_server_version": {
          "format": "string",
          "type": "string"
        },
        "kube_starter_version": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_groups": {
          "items": {
            "$ref": "#/definitions/v1beta1InstanceGroup"
          },
          "type": "array"
        },
        "node_set": {
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          },
          "type": "object"
        },
        "provider": {
          "format": "string",
          "type": "string"
        },
        "version": {
          "format": "string",
          "type": "string"
        },
        "zone": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterDeleteRequest": {
      "properties": {
        "delete_dynamic_volumes": {
          "format": "boolean",
          "type": "boolean"
        },
        "force": {
          "format": "boolean",
          "type": "boolean"
        },
        "keep_lodabalancers": {
          "format": "boolean",
          "type": "boolean"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "release_reserved_ip": {
          "format": "boolean",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterDescribeRequest": {
      "properties": {
        "uid": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterDescribeResponse": {
      "properties": {
        "cluster": {
          "$ref": "#/definitions/v1beta1Cluster"
        },
        "spec": {
          "$ref": "#/definitions/v1beta1ClusterDescribeResponseSpec"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterDescribeResponseSpec": {
      "properties": {
        "container_count": {
          "format": "int32",
          "type": "integer"
        },
        "pod_count": {
          "format": "int32",
          "type": "integer"
        },
        "rc_count": {
          "format": "int32",
          "type": "integer"
        },
        "service_count": {
          "format": "int32",
          "type": "integer"
        },
        "total_cpu": {
          "format": "int64",
          "type": "integer"
        },
        "total_memory": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterInstance": {
      "properties": {
        "external_id": {
          "format": "string",
          "type": "string"
        },
        "external_ip": {
          "format": "string",
          "type": "string"
        },
        "internal_ip": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "phid": {
          "format": "string",
          "type": "string"
        },
        "sku": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterInstanceByIPRequest": {
      "properties": {
        "external_ip": {
          "format": "string",
          "type": "string"
        },
        "phid": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterInstanceListRequest": {
      "properties": {
        "cluster_name": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterInstanceListResponse": {
      "properties": {
        "instances": {
          "items": {
            "$ref": "#/definitions/v1beta1ClusterInstance"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterInstanceResponse": {
      "properties": {
        "instance": {
          "$ref": "#/definitions/v1beta1ClusterInstance"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterListRequest": {
      "properties": {
        "status": {
          "items": {
            "format": "string",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterListResponse": {
      "properties": {
        "clusters": {
          "items": {
            "$ref": "#/definitions/v1beta1Cluster"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterScaleRequest": {
      "properties": {
        "name": {
          "format": "string",
          "type": "string"
        },
        "node_groups": {
          "items": {
            "$ref": "#/definitions/v1beta1InstanceGroup"
          },
          "type": "array"
        },
        "node_set": {
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          },
          "title": "New node configuration for the cluster",
          "type": "object"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterSetVersionRequest": {
      "properties": {
        "apply_to_master": {
          "format": "boolean",
          "type": "boolean"
        },
        "hostfacts_version": {
          "format": "string",
          "type": "string"
        },
        "kube_saltbase_version": {
          "format": "string",
          "type": "string"
        },
        "kube_server_version": {
          "format": "string",
          "type": "string"
        },
        "kube_starter_version": {
          "format": "string",
          "type": "string"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "sku": {
          "format": "string",
          "type": "string"
        },
        "version": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterSettings": {
      "properties": {
        "log_index_prefix": {
          "format": "string",
          "type": "string"
        },
        "log_storage_lifetime": {
          "format": "int64",
          "title": "Number of secs logs will be stored in ElasticSearch",
          "type": "integer"
        },
        "monitoring_storage_lifetime": {
          "format": "int64",
          "title": "Number of secs logs will be stored in InfluxDB",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterStartupConfigRequest": {
      "properties": {
        "context_version": {
          "format": "int64",
          "type": "integer"
        },
        "role": {
          "format": "string",
          "type": "string"
        },
        "uid": {
          "format": "string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterStartupConfigResponse": {
      "properties": {
        "configuration": {
          "format": "string",
          "type": "string"
        },
        "sku": {
          "format": "string",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/appscodedtypesStatus"
        }
      },
      "type": "object"
    },
    "v1beta1ClusterUpdateRequest": {
      "properties": {
        "default_access_level": {
          "format": "string",
          "title": "Default access level is to allow permission to the cluster\nwhen no Role matched for that specif user or group. This can\nset as\n   - v:cluster-admins    // to allow admin access\n   - v:cluster-deployer  // to allow deployer access\n   - v:cluster-viewer    // to allow viewer access\n   - \"\"                  // empty value stands for no access",
          "type": "string"
        },
        "do_not_delete": {
          "format": "boolean",
          "type": "boolean"
        },
        "name": {
          "format": "string",
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/v1beta1ClusterSettings"
        }
      },
      "type": "object"
    },
    "v1beta1InstanceGroup": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "sku": {
          "format": "string",
          "type": "string"
        },
        "use_spot_instances": {
          "format": "boolean",
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "host": "api.appscode.com",
  "info": {
    "title": "cluster.proto",
    "version": "1beta1"
  },
  "paths": {
    "/_appscode/api/kubernetes/v1beta1/clusters": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterListResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "operationId": "Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{cluster_name}/instances": {
      "get": {
        "operationId": "Instances",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "cluster_name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterInstanceListResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{name}": {
      "delete": {
        "operationId": "Delete",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      },
      "put": {
        "operationId": "Update",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesVoidResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{name}/actions/scale": {
      "put": {
        "operationId": "Scale",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterScaleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{name}/actions/set-version": {
      "put": {
        "operationId": "SetVersion",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterSetVersionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/dtypesLongRunningResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{name}/client-config": {
      "get": {
        "operationId": "ClientConfig",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterClientConfigResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{phid}/instance-by-ip/{external_ip}": {
      "get": {
        "operationId": "InstanceByIP",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "phid",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "external_ip",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterInstanceResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{uid}": {
      "get": {
        "operationId": "Describe",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterDescribeResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/_appscode/api/kubernetes/v1beta1/clusters/{uid}/startup-config/{role}/context-versions/{context_version}": {
      "get": {
        "operationId": "StartupConfig",
        "parameters": [
          {
            "format": "string",
            "in": "path",
            "name": "uid",
            "required": true,
            "type": "string"
          },
          {
            "format": "string",
            "in": "path",
            "name": "role",
            "required": true,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "path",
            "name": "context_version",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1beta1ClusterStartupConfigResponse"
            }
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}