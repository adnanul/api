// Code generated by protoc-gen-grpc-js-client
// source: client.proto
// DO NOT EDIT!

/*
This is a RSVP based Ajax client for gRPC gateway JSON APIs.
*/

var xhr = require('grpc-xhr');

function clientsCopy(p, conf) {
    path = '/kubernetes/v1beta1/actions/copy'
    return xhr(path, 'PUT', conf, null, p);
}

function clientsNodes(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/nodes'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsApps(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/apps'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsApp(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/apps/' + p['namespace'] + '/' + p['name']
    delete p['cluster']
    delete p['namespace']
    delete p['name']
    return xhr(path, 'GET', conf, p);
}

function clientsAppPods(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/apps/' + p['namespace'] + '/' + p['name'] + '/pods'
    delete p['cluster']
    delete p['namespace']
    delete p['name']
    return xhr(path, 'GET', conf, p);
}

function clientsNamespaces(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/namespaces'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsSecrets(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/secrets'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsSecret(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/secrets/' + p['namespace'] + '/' + p['name']
    delete p['cluster']
    delete p['namespace']
    delete p['name']
    return xhr(path, 'GET', conf, p);
}

function clientsJobs(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/jobs'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsPods(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/pods'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsServices(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/services'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsReplicationControllers(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/rcs'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsConfigMaps(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/configmaps'
    delete p['cluster']
    return xhr(path, 'GET', conf, p);
}

function clientsConfigMap(p, conf) {
    path = '/kubernetes/v1beta1/client/' + p['cluster'] + '/configmaps/' + p['namespace'] + '/' + p['name']
    delete p['cluster']
    delete p['namespace']
    delete p['name']
    return xhr(path, 'GET', conf, p);
}

module.exports = {
    clients: {
        copy: clientsCopy,
        nodes: clientsNodes,
        apps: clientsApps,
        app: clientsApp,
        appPods: clientsAppPods,
        namespaces: clientsNamespaces,
        secrets: clientsSecrets,
        secret: clientsSecret,
        jobs: clientsJobs,
        pods: clientsPods,
        services: clientsServices,
        replicationControllers: clientsReplicationControllers,
        configMaps: clientsConfigMaps,
        configMap: clientsConfigMap
    }
};
