// Code generated by protoc-gen-go.
// source: database.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	database.proto
	snapshot.proto

It has these top-level messages:
	Database
	DatabaseListRequest
	DatabaseListResponse
	DatabaseCreateRequest
	DatabaseScaleRequest
	DatabaseUpdateRequest
	DatabaseDescribeRequest
	SnapshotSummary
	DatabaseDescribeResponse
	DatabaseDeleteRequest
	DatabaseRecoverRequest
	DatabaseCheckRequest
	DatabaseInfo
	Snapshot
	SnapshotListRequest
	SnapshotListResponse
	BackupScheduleRequest
	BackupUnscheduleRequest
	SnapshotRestoreRequest
	SnapshotCheckRequest
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Next Id: 19
type Database struct {
	Phid             string `protobuf:"bytes,1,opt,name=phid" json:"phid,omitempty"`
	Cluster          string `protobuf:"bytes,2,opt,name=cluster" json:"cluster,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type             string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	Sku              string `protobuf:"bytes,6,opt,name=sku" json:"sku,omitempty"`
	Version          string `protobuf:"bytes,8,opt,name=version" json:"version,omitempty"`
	AuthSecret       string `protobuf:"bytes,9,opt,name=auth_secret,json=authSecret" json:"auth_secret,omitempty"`
	ScheduleCronExpr string `protobuf:"bytes,10,opt,name=schedule_cron_expr,json=scheduleCronExpr" json:"schedule_cron_expr,omitempty"`
	PvSizeGb         int32  `protobuf:"varint,11,opt,name=pv_size_gb,json=pvSizeGb" json:"pv_size_gb,omitempty"`
	LastBackupAt     int64  `protobuf:"varint,12,opt,name=last_backup_at,json=lastBackupAt" json:"last_backup_at,omitempty"`
	Status           string `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
	CreatedAt        int64  `protobuf:"varint,14,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	DeletedAt        int64  `protobuf:"varint,15,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
	DoNotDelete      bool   `protobuf:"varint,17,opt,name=do_not_delete,json=doNotDelete" json:"do_not_delete,omitempty"`
}

func (m *Database) Reset()                    { *m = Database{} }
func (m *Database) String() string            { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()               {}
func (*Database) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Next Id: 4
type DatabaseListRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// List of status to get the agent filterd on the status
	// values in
	//   PENDING
	//   FAILED
	//   READY
	//   DELETING
	//   DELETED
	//   DESTROYED
	Status []string `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
}

func (m *DatabaseListRequest) Reset()                    { *m = DatabaseListRequest{} }
func (m *DatabaseListRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseListRequest) ProtoMessage()               {}
func (*DatabaseListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Next Id: 3
type DatabaseListResponse struct {
	Status    *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Databases []*Database             `protobuf:"bytes,2,rep,name=databases" json:"databases,omitempty"`
}

func (m *DatabaseListResponse) Reset()                    { *m = DatabaseListResponse{} }
func (m *DatabaseListResponse) String() string            { return proto.CompactTextString(m) }
func (*DatabaseListResponse) ProtoMessage()               {}
func (*DatabaseListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DatabaseListResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DatabaseListResponse) GetDatabases() []*Database {
	if m != nil {
		return m.Databases
	}
	return nil
}

// Next Id: 19
type DatabaseCreateRequest struct {
	Cluster          string                               `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name             string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type             string                               `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Sku              string                               `protobuf:"bytes,4,opt,name=sku" json:"sku,omitempty"`
	Version          string                               `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	PvSizeGb         int32                                `protobuf:"varint,7,opt,name=pv_size_gb,json=pvSizeGb" json:"pv_size_gb,omitempty"`
	AuthSecretName   string                               `protobuf:"bytes,8,opt,name=auth_secret_name,json=authSecretName" json:"auth_secret_name,omitempty"`
	Size             int32                                `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	SnapshotPhid     string                               `protobuf:"bytes,14,opt,name=snapshot_phid,json=snapshotPhid" json:"snapshot_phid,omitempty"`
	Hostname         string                               `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	StorageClass     string                               `protobuf:"bytes,16,opt,name=storage_class,json=storageClass" json:"storage_class,omitempty"`
	IgnoreValidation bool                                 `protobuf:"varint,17,opt,name=ignore_validation,json=ignoreValidation" json:"ignore_validation,omitempty"`
	InitialScript    *DatabaseCreateRequest_InitialScript `protobuf:"bytes,18,opt,name=initial_script,json=initialScript" json:"initial_script,omitempty"`
}

func (m *DatabaseCreateRequest) Reset()                    { *m = DatabaseCreateRequest{} }
func (m *DatabaseCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseCreateRequest) ProtoMessage()               {}
func (*DatabaseCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DatabaseCreateRequest) GetInitialScript() *DatabaseCreateRequest_InitialScript {
	if m != nil {
		return m.InitialScript
	}
	return nil
}

type DatabaseCreateRequest_InitialScript struct {
	ScriptPath string `protobuf:"bytes,1,opt,name=script_path,json=scriptPath" json:"script_path,omitempty"`
	// Types that are valid to be assigned to ScriptSource:
	//	*DatabaseCreateRequest_InitialScript_GitRepo_
	//	*DatabaseCreateRequest_InitialScript_Secret_
	//	*DatabaseCreateRequest_InitialScript_ConfigMap_
	ScriptSource isDatabaseCreateRequest_InitialScript_ScriptSource `protobuf_oneof:"ScriptSource"`
}

func (m *DatabaseCreateRequest_InitialScript) Reset()         { *m = DatabaseCreateRequest_InitialScript{} }
func (m *DatabaseCreateRequest_InitialScript) String() string { return proto.CompactTextString(m) }
func (*DatabaseCreateRequest_InitialScript) ProtoMessage()    {}
func (*DatabaseCreateRequest_InitialScript) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type isDatabaseCreateRequest_InitialScript_ScriptSource interface {
	isDatabaseCreateRequest_InitialScript_ScriptSource()
}

type DatabaseCreateRequest_InitialScript_GitRepo_ struct {
	GitRepo *DatabaseCreateRequest_InitialScript_GitRepo `protobuf:"bytes,2,opt,name=git_repo,json=gitRepo,oneof"`
}
type DatabaseCreateRequest_InitialScript_Secret_ struct {
	Secret *DatabaseCreateRequest_InitialScript_Secret `protobuf:"bytes,3,opt,name=secret,oneof"`
}
type DatabaseCreateRequest_InitialScript_ConfigMap_ struct {
	ConfigMap *DatabaseCreateRequest_InitialScript_ConfigMap `protobuf:"bytes,4,opt,name=config_map,json=configMap,oneof"`
}

func (*DatabaseCreateRequest_InitialScript_GitRepo_) isDatabaseCreateRequest_InitialScript_ScriptSource() {
}
func (*DatabaseCreateRequest_InitialScript_Secret_) isDatabaseCreateRequest_InitialScript_ScriptSource() {
}
func (*DatabaseCreateRequest_InitialScript_ConfigMap_) isDatabaseCreateRequest_InitialScript_ScriptSource() {
}

func (m *DatabaseCreateRequest_InitialScript) GetScriptSource() isDatabaseCreateRequest_InitialScript_ScriptSource {
	if m != nil {
		return m.ScriptSource
	}
	return nil
}

func (m *DatabaseCreateRequest_InitialScript) GetGitRepo() *DatabaseCreateRequest_InitialScript_GitRepo {
	if x, ok := m.GetScriptSource().(*DatabaseCreateRequest_InitialScript_GitRepo_); ok {
		return x.GitRepo
	}
	return nil
}

func (m *DatabaseCreateRequest_InitialScript) GetSecret() *DatabaseCreateRequest_InitialScript_Secret {
	if x, ok := m.GetScriptSource().(*DatabaseCreateRequest_InitialScript_Secret_); ok {
		return x.Secret
	}
	return nil
}

func (m *DatabaseCreateRequest_InitialScript) GetConfigMap() *DatabaseCreateRequest_InitialScript_ConfigMap {
	if x, ok := m.GetScriptSource().(*DatabaseCreateRequest_InitialScript_ConfigMap_); ok {
		return x.ConfigMap
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DatabaseCreateRequest_InitialScript) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DatabaseCreateRequest_InitialScript_OneofMarshaler, _DatabaseCreateRequest_InitialScript_OneofUnmarshaler, _DatabaseCreateRequest_InitialScript_OneofSizer, []interface{}{
		(*DatabaseCreateRequest_InitialScript_GitRepo_)(nil),
		(*DatabaseCreateRequest_InitialScript_Secret_)(nil),
		(*DatabaseCreateRequest_InitialScript_ConfigMap_)(nil),
	}
}

func _DatabaseCreateRequest_InitialScript_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DatabaseCreateRequest_InitialScript)
	// ScriptSource
	switch x := m.ScriptSource.(type) {
	case *DatabaseCreateRequest_InitialScript_GitRepo_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GitRepo); err != nil {
			return err
		}
	case *DatabaseCreateRequest_InitialScript_Secret_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Secret); err != nil {
			return err
		}
	case *DatabaseCreateRequest_InitialScript_ConfigMap_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ConfigMap); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DatabaseCreateRequest_InitialScript.ScriptSource has unexpected type %T", x)
	}
	return nil
}

func _DatabaseCreateRequest_InitialScript_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DatabaseCreateRequest_InitialScript)
	switch tag {
	case 2: // ScriptSource.git_repo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseCreateRequest_InitialScript_GitRepo)
		err := b.DecodeMessage(msg)
		m.ScriptSource = &DatabaseCreateRequest_InitialScript_GitRepo_{msg}
		return true, err
	case 3: // ScriptSource.secret
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseCreateRequest_InitialScript_Secret)
		err := b.DecodeMessage(msg)
		m.ScriptSource = &DatabaseCreateRequest_InitialScript_Secret_{msg}
		return true, err
	case 4: // ScriptSource.config_map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseCreateRequest_InitialScript_ConfigMap)
		err := b.DecodeMessage(msg)
		m.ScriptSource = &DatabaseCreateRequest_InitialScript_ConfigMap_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DatabaseCreateRequest_InitialScript_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DatabaseCreateRequest_InitialScript)
	// ScriptSource
	switch x := m.ScriptSource.(type) {
	case *DatabaseCreateRequest_InitialScript_GitRepo_:
		s := proto.Size(x.GitRepo)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseCreateRequest_InitialScript_Secret_:
		s := proto.Size(x.Secret)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseCreateRequest_InitialScript_ConfigMap_:
		s := proto.Size(x.ConfigMap)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DatabaseCreateRequest_InitialScript_GitRepo struct {
	Repository string `protobuf:"bytes,1,opt,name=repository" json:"repository,omitempty"`
	Revision   string `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	Directory  string `protobuf:"bytes,3,opt,name=directory" json:"directory,omitempty"`
}

func (m *DatabaseCreateRequest_InitialScript_GitRepo) Reset() {
	*m = DatabaseCreateRequest_InitialScript_GitRepo{}
}
func (m *DatabaseCreateRequest_InitialScript_GitRepo) String() string {
	return proto.CompactTextString(m)
}
func (*DatabaseCreateRequest_InitialScript_GitRepo) ProtoMessage() {}
func (*DatabaseCreateRequest_InitialScript_GitRepo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0, 0}
}

type DatabaseCreateRequest_InitialScript_Secret struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DatabaseCreateRequest_InitialScript_Secret) Reset() {
	*m = DatabaseCreateRequest_InitialScript_Secret{}
}
func (m *DatabaseCreateRequest_InitialScript_Secret) String() string {
	return proto.CompactTextString(m)
}
func (*DatabaseCreateRequest_InitialScript_Secret) ProtoMessage() {}
func (*DatabaseCreateRequest_InitialScript_Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0, 1}
}

type DatabaseCreateRequest_InitialScript_ConfigMap struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DatabaseCreateRequest_InitialScript_ConfigMap) Reset() {
	*m = DatabaseCreateRequest_InitialScript_ConfigMap{}
}
func (m *DatabaseCreateRequest_InitialScript_ConfigMap) String() string {
	return proto.CompactTextString(m)
}
func (*DatabaseCreateRequest_InitialScript_ConfigMap) ProtoMessage() {}
func (*DatabaseCreateRequest_InitialScript_ConfigMap) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0, 2}
}

// Next Id: 4
type DatabaseScaleRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid     string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	Size    int32  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *DatabaseScaleRequest) Reset()                    { *m = DatabaseScaleRequest{} }
func (m *DatabaseScaleRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseScaleRequest) ProtoMessage()               {}
func (*DatabaseScaleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// Next Id: 4
type DatabaseUpdateRequest struct {
	Cluster     string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid         string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	DoNotDelete bool   `protobuf:"varint,3,opt,name=do_not_delete,json=doNotDelete" json:"do_not_delete,omitempty"`
}

func (m *DatabaseUpdateRequest) Reset()                    { *m = DatabaseUpdateRequest{} }
func (m *DatabaseUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseUpdateRequest) ProtoMessage()               {}
func (*DatabaseUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// Next Id: 3
type DatabaseDescribeRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid     string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *DatabaseDescribeRequest) Reset()                    { *m = DatabaseDescribeRequest{} }
func (m *DatabaseDescribeRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseDescribeRequest) ProtoMessage()               {}
func (*DatabaseDescribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// Next Id: 7
type SnapshotSummary struct {
	BackupAttempt  int32 `protobuf:"varint,3,opt,name=backup_attempt,json=backupAttempt" json:"backup_attempt,omitempty"`
	BackupSuccess  int32 `protobuf:"varint,4,opt,name=backup_success,json=backupSuccess" json:"backup_success,omitempty"`
	RestoreAttempt int32 `protobuf:"varint,5,opt,name=restore_attempt,json=restoreAttempt" json:"restore_attempt,omitempty"`
	RestoreSuccess int32 `protobuf:"varint,6,opt,name=restore_success,json=restoreSuccess" json:"restore_success,omitempty"`
}

func (m *SnapshotSummary) Reset()                    { *m = SnapshotSummary{} }
func (m *SnapshotSummary) String() string            { return proto.CompactTextString(m) }
func (*SnapshotSummary) ProtoMessage()               {}
func (*SnapshotSummary) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// Next Id: 17
type DatabaseDescribeResponse struct {
	Status          *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	SnapshotSummary *SnapshotSummary        `protobuf:"bytes,9,opt,name=snapshot_summary,json=snapshotSummary" json:"snapshot_summary,omitempty"`
	Database        *Database               `protobuf:"bytes,16,opt,name=database" json:"database,omitempty"`
}

func (m *DatabaseDescribeResponse) Reset()                    { *m = DatabaseDescribeResponse{} }
func (m *DatabaseDescribeResponse) String() string            { return proto.CompactTextString(m) }
func (*DatabaseDescribeResponse) ProtoMessage()               {}
func (*DatabaseDescribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DatabaseDescribeResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DatabaseDescribeResponse) GetSnapshotSummary() *SnapshotSummary {
	if m != nil {
		return m.SnapshotSummary
	}
	return nil
}

func (m *DatabaseDescribeResponse) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

// Next Id: 4
type DatabaseDeleteRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid     string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	Destroy bool   `protobuf:"varint,3,opt,name=destroy" json:"destroy,omitempty"`
}

func (m *DatabaseDeleteRequest) Reset()                    { *m = DatabaseDeleteRequest{} }
func (m *DatabaseDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseDeleteRequest) ProtoMessage()               {}
func (*DatabaseDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

// Next Id: 3
type DatabaseRecoverRequest struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid     string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *DatabaseRecoverRequest) Reset()                    { *m = DatabaseRecoverRequest{} }
func (m *DatabaseRecoverRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseRecoverRequest) ProtoMessage()               {}
func (*DatabaseRecoverRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// Next Id: 4
type DatabaseCheckRequest struct {
	Cluster      string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Uid          string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	PurchasePhid string `protobuf:"bytes,3,opt,name=purchase_phid,json=purchasePhid" json:"purchase_phid,omitempty"`
}

func (m *DatabaseCheckRequest) Reset()                    { *m = DatabaseCheckRequest{} }
func (m *DatabaseCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*DatabaseCheckRequest) ProtoMessage()               {}
func (*DatabaseCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func init() {
	proto.RegisterType((*Database)(nil), "appscode.db.v1beta1.Database")
	proto.RegisterType((*DatabaseListRequest)(nil), "appscode.db.v1beta1.DatabaseListRequest")
	proto.RegisterType((*DatabaseListResponse)(nil), "appscode.db.v1beta1.DatabaseListResponse")
	proto.RegisterType((*DatabaseCreateRequest)(nil), "appscode.db.v1beta1.DatabaseCreateRequest")
	proto.RegisterType((*DatabaseCreateRequest_InitialScript)(nil), "appscode.db.v1beta1.DatabaseCreateRequest.InitialScript")
	proto.RegisterType((*DatabaseCreateRequest_InitialScript_GitRepo)(nil), "appscode.db.v1beta1.DatabaseCreateRequest.InitialScript.GitRepo")
	proto.RegisterType((*DatabaseCreateRequest_InitialScript_Secret)(nil), "appscode.db.v1beta1.DatabaseCreateRequest.InitialScript.Secret")
	proto.RegisterType((*DatabaseCreateRequest_InitialScript_ConfigMap)(nil), "appscode.db.v1beta1.DatabaseCreateRequest.InitialScript.ConfigMap")
	proto.RegisterType((*DatabaseScaleRequest)(nil), "appscode.db.v1beta1.DatabaseScaleRequest")
	proto.RegisterType((*DatabaseUpdateRequest)(nil), "appscode.db.v1beta1.DatabaseUpdateRequest")
	proto.RegisterType((*DatabaseDescribeRequest)(nil), "appscode.db.v1beta1.DatabaseDescribeRequest")
	proto.RegisterType((*SnapshotSummary)(nil), "appscode.db.v1beta1.SnapshotSummary")
	proto.RegisterType((*DatabaseDescribeResponse)(nil), "appscode.db.v1beta1.DatabaseDescribeResponse")
	proto.RegisterType((*DatabaseDeleteRequest)(nil), "appscode.db.v1beta1.DatabaseDeleteRequest")
	proto.RegisterType((*DatabaseRecoverRequest)(nil), "appscode.db.v1beta1.DatabaseRecoverRequest")
	proto.RegisterType((*DatabaseCheckRequest)(nil), "appscode.db.v1beta1.DatabaseCheckRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Databases service

type DatabasesClient interface {
	List(ctx context.Context, in *DatabaseListRequest, opts ...grpc.CallOption) (*DatabaseListResponse, error)
	Create(ctx context.Context, in *DatabaseCreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Scale(ctx context.Context, in *DatabaseScaleRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Update(ctx context.Context, in *DatabaseUpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Describe(ctx context.Context, in *DatabaseDescribeRequest, opts ...grpc.CallOption) (*DatabaseDescribeResponse, error)
	Delete(ctx context.Context, in *DatabaseDeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
	Recover(ctx context.Context, in *DatabaseRecoverRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
}

type databasesClient struct {
	cc *grpc.ClientConn
}

func NewDatabasesClient(cc *grpc.ClientConn) DatabasesClient {
	return &databasesClient{cc}
}

func (c *databasesClient) List(ctx context.Context, in *DatabaseListRequest, opts ...grpc.CallOption) (*DatabaseListResponse, error) {
	out := new(DatabaseListResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Create(ctx context.Context, in *DatabaseCreateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Scale(ctx context.Context, in *DatabaseScaleRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Scale", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Update(ctx context.Context, in *DatabaseUpdateRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Describe(ctx context.Context, in *DatabaseDescribeRequest, opts ...grpc.CallOption) (*DatabaseDescribeResponse, error) {
	out := new(DatabaseDescribeResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Describe", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Delete(ctx context.Context, in *DatabaseDeleteRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databasesClient) Recover(ctx context.Context, in *DatabaseRecoverRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.db.v1beta1.Databases/Recover", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Databases service

type DatabasesServer interface {
	List(context.Context, *DatabaseListRequest) (*DatabaseListResponse, error)
	Create(context.Context, *DatabaseCreateRequest) (*appscode_dtypes.VoidResponse, error)
	Scale(context.Context, *DatabaseScaleRequest) (*appscode_dtypes.VoidResponse, error)
	Update(context.Context, *DatabaseUpdateRequest) (*appscode_dtypes.VoidResponse, error)
	Describe(context.Context, *DatabaseDescribeRequest) (*DatabaseDescribeResponse, error)
	Delete(context.Context, *DatabaseDeleteRequest) (*appscode_dtypes.VoidResponse, error)
	Recover(context.Context, *DatabaseRecoverRequest) (*appscode_dtypes.VoidResponse, error)
}

func RegisterDatabasesServer(s *grpc.Server, srv DatabasesServer) {
	s.RegisterService(&_Databases_serviceDesc, srv)
}

func _Databases_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).List(ctx, req.(*DatabaseListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Create(ctx, req.(*DatabaseCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Scale_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseScaleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Scale(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Scale",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Scale(ctx, req.(*DatabaseScaleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Update(ctx, req.(*DatabaseUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Describe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Describe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Describe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Describe(ctx, req.(*DatabaseDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Delete(ctx, req.(*DatabaseDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Databases_Recover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseRecoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabasesServer).Recover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.db.v1beta1.Databases/Recover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabasesServer).Recover(ctx, req.(*DatabaseRecoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Databases_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.db.v1beta1.Databases",
	HandlerType: (*DatabasesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Databases_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Databases_Create_Handler,
		},
		{
			MethodName: "Scale",
			Handler:    _Databases_Scale_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Databases_Update_Handler,
		},
		{
			MethodName: "Describe",
			Handler:    _Databases_Describe_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Databases_Delete_Handler,
		},
		{
			MethodName: "Recover",
			Handler:    _Databases_Recover_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("database.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0xcd, 0x6f, 0x1b, 0xc5,
	0x1b, 0xee, 0xc6, 0x89, 0x3f, 0x5e, 0xc7, 0x8e, 0x3b, 0xfd, 0xfd, 0xda, 0xd5, 0x92, 0xb6, 0xd1,
	0xb6, 0x08, 0x93, 0x16, 0x5b, 0x0d, 0x07, 0xa0, 0x08, 0x95, 0x26, 0xa9, 0x1a, 0x04, 0x94, 0x74,
	0x0d, 0x11, 0x1f, 0x2a, 0xab, 0xf1, 0xee, 0x60, 0xaf, 0xe2, 0xec, 0x2c, 0x3b, 0xb3, 0x56, 0xd3,
	0xaa, 0x97, 0xc2, 0x7f, 0xc0, 0x89, 0x33, 0x12, 0x82, 0x23, 0x87, 0x5e, 0xf8, 0x37, 0x38, 0x70,
	0x40, 0xe2, 0xc4, 0x1f, 0x82, 0xe6, 0x63, 0x3f, 0x1c, 0x87, 0x38, 0x72, 0x73, 0xb1, 0x66, 0x9e,
	0x79, 0xe7, 0x9d, 0x67, 0xdf, 0x79, 0xde, 0x67, 0xd7, 0xd0, 0xf4, 0x31, 0xc7, 0x7d, 0xcc, 0x48,
	0x27, 0x8a, 0x29, 0xa7, 0xe8, 0x02, 0x8e, 0x22, 0xe6, 0x51, 0x9f, 0x74, 0xfc, 0x7e, 0x67, 0x7c,
	0xab, 0x4f, 0x38, 0xbe, 0x65, 0xad, 0x0e, 0x28, 0x1d, 0x8c, 0x48, 0x17, 0x47, 0x41, 0x17, 0x87,
	0x21, 0xe5, 0x98, 0x07, 0x34, 0x64, 0x6a, 0x8b, 0x75, 0x25, 0xdd, 0xf2, 0x1f, 0xeb, 0x17, 0x05,
	0xec, 0xf3, 0xc3, 0x88, 0xb0, 0xae, 0xfc, 0x55, 0xb8, 0xfd, 0x63, 0x09, 0xaa, 0xdb, 0xfa, 0x74,
	0x84, 0x60, 0x31, 0x1a, 0x06, 0xbe, 0x69, 0xac, 0x19, 0xed, 0x9a, 0x23, 0xc7, 0xc8, 0x84, 0x8a,
	0x37, 0x4a, 0x18, 0x27, 0xb1, 0xb9, 0x20, 0xe1, 0x74, 0x2a, 0xa2, 0x43, 0x7c, 0x40, 0xcc, 0x92,
	0x8a, 0x16, 0x63, 0x81, 0x89, 0xec, 0xe6, 0x92, 0xc2, 0xc4, 0x18, 0xb5, 0xa0, 0xc4, 0xf6, 0x13,
	0xb3, 0x2c, 0x21, 0x31, 0x14, 0x39, 0xc7, 0x24, 0x66, 0x01, 0x0d, 0xcd, 0xaa, 0xca, 0xa9, 0xa7,
	0xe8, 0x2a, 0xd4, 0x71, 0xc2, 0x87, 0x2e, 0x23, 0x5e, 0x4c, 0xb8, 0x59, 0x93, 0xab, 0x20, 0xa0,
	0x9e, 0x44, 0xd0, 0x4d, 0x40, 0xcc, 0x1b, 0x12, 0x3f, 0x19, 0x11, 0xd7, 0x8b, 0x69, 0xe8, 0x92,
	0xc7, 0x51, 0x6c, 0x82, 0x8c, 0x6b, 0xa5, 0x2b, 0x5b, 0x31, 0x0d, 0xef, 0x3d, 0x8e, 0x62, 0xb4,
	0x0a, 0x10, 0x8d, 0x5d, 0x16, 0x3c, 0x21, 0xee, 0xa0, 0x6f, 0xd6, 0xd7, 0x8c, 0xf6, 0x92, 0x53,
	0x8d, 0xc6, 0xbd, 0xe0, 0x09, 0xb9, 0xdf, 0x47, 0xd7, 0xa1, 0x39, 0xc2, 0x8c, 0xbb, 0x7d, 0xec,
	0xed, 0x27, 0x91, 0x8b, 0xb9, 0xb9, 0xbc, 0x66, 0xb4, 0x4b, 0xce, 0xb2, 0x40, 0x37, 0x25, 0x78,
	0x97, 0xa3, 0x8b, 0x50, 0x66, 0x1c, 0xf3, 0x84, 0x99, 0x0d, 0x79, 0x8a, 0x9e, 0xa1, 0xcb, 0x00,
	0x5e, 0x4c, 0x30, 0x27, 0xbe, 0xd8, 0xd9, 0x94, 0x3b, 0x6b, 0x1a, 0xb9, 0xcb, 0xc5, 0xb2, 0x4f,
	0x46, 0x44, 0x2f, 0xaf, 0xa8, 0x65, 0x8d, 0xdc, 0xe5, 0xc8, 0x86, 0x86, 0x4f, 0xdd, 0x90, 0x72,
	0x57, 0x61, 0xe6, 0xf9, 0x35, 0xa3, 0x5d, 0x75, 0xea, 0x3e, 0x7d, 0x40, 0xf9, 0xb6, 0x84, 0xec,
	0xaf, 0xe0, 0x42, 0x7a, 0x35, 0x1f, 0x05, 0x8c, 0x3b, 0xe4, 0xdb, 0x84, 0x30, 0x5e, 0xbc, 0x11,
	0x63, 0xea, 0x46, 0x64, 0xf5, 0x17, 0x0a, 0xd5, 0xcf, 0xe9, 0x97, 0xd6, 0x4a, 0x39, 0x7d, 0xfb,
	0x7b, 0x03, 0xfe, 0x37, 0x99, 0x9d, 0x45, 0x34, 0x64, 0x04, 0x75, 0xb3, 0x0d, 0x22, 0x7b, 0x7d,
	0xe3, 0x52, 0x27, 0x57, 0xa3, 0x52, 0x4e, 0x4f, 0x2e, 0x67, 0x85, 0x78, 0x17, 0x6a, 0xa9, 0x7e,
	0x99, 0xb9, 0xb0, 0x56, 0x6a, 0xd7, 0x37, 0x2e, 0x77, 0x8e, 0x51, 0x70, 0x27, 0x3d, 0xce, 0xc9,
	0xe3, 0xed, 0xbf, 0x2a, 0xf0, 0xff, 0x14, 0xdf, 0x92, 0xc5, 0x3b, 0xd5, 0x63, 0x4a, 0xe1, 0x2d,
	0x1c, 0x23, 0xbc, 0xd2, 0xb4, 0xf0, 0x16, 0x8f, 0x15, 0xde, 0xd2, 0xa4, 0xf0, 0x26, 0x95, 0x52,
	0x39, 0xa2, 0x94, 0x36, 0xb4, 0x0a, 0xb2, 0x74, 0xe5, 0xe9, 0x4a, 0xb9, 0xcd, 0x5c, 0x9b, 0x0f,
	0x34, 0x0f, 0x91, 0x44, 0x2a, 0x77, 0xc9, 0x91, 0x63, 0x74, 0x0d, 0x1a, 0x2c, 0xc4, 0x11, 0x1b,
	0x52, 0xee, 0xca, 0xfe, 0x6a, 0xca, 0xad, 0xcb, 0x29, 0xb8, 0x2b, 0xfa, 0xcc, 0x82, 0xea, 0x90,
	0x32, 0x2e, 0x53, 0xaf, 0xc8, 0xf5, 0x6c, 0x2e, 0x13, 0x70, 0x1a, 0xe3, 0x01, 0x71, 0xbd, 0x11,
	0x66, 0xcc, 0x6c, 0xe9, 0x04, 0x0a, 0xdc, 0x12, 0x18, 0xba, 0x01, 0xe7, 0x83, 0x41, 0x48, 0x63,
	0xe2, 0x8e, 0xf1, 0x28, 0xf0, 0x65, 0xf7, 0x6b, 0x55, 0xb5, 0xd4, 0xc2, 0x5e, 0x86, 0x23, 0x17,
	0x9a, 0x41, 0x18, 0xf0, 0x00, 0x8f, 0x5c, 0xe6, 0xc5, 0x41, 0xc4, 0x4d, 0x24, 0x2f, 0xfb, 0xed,
	0x13, 0x2f, 0x6e, 0xe2, 0x82, 0x3a, 0x1f, 0xa8, 0x04, 0x3d, 0xb9, 0xdf, 0x69, 0x04, 0xc5, 0xa9,
	0xf5, 0xdd, 0x22, 0x34, 0x26, 0x02, 0x44, 0x6b, 0xab, 0xa3, 0xdc, 0x08, 0xf3, 0xa1, 0xbe, 0x53,
	0x50, 0xd0, 0x2e, 0xe6, 0x43, 0xf4, 0x08, 0xaa, 0x83, 0x80, 0xbb, 0x31, 0x89, 0xa8, 0xbc, 0xda,
	0xfa, 0xc6, 0xfb, 0xf3, 0xb2, 0xe9, 0xdc, 0x0f, 0xb8, 0x43, 0x22, 0xba, 0x73, 0xce, 0xa9, 0x0c,
	0xd4, 0x10, 0x7d, 0x01, 0x65, 0xed, 0x2a, 0x25, 0x99, 0xfc, 0xce, 0xdc, 0xc9, 0xd5, 0x75, 0xef,
	0x9c, 0x73, 0x74, 0x42, 0xe4, 0x01, 0x78, 0x34, 0xfc, 0x26, 0x18, 0xb8, 0x07, 0x38, 0x92, 0x7a,
	0xab, 0x6f, 0x6c, 0xce, 0x9d, 0x7e, 0x4b, 0xa6, 0xfa, 0x18, 0x47, 0x3b, 0xe7, 0x9c, 0x9a, 0x97,
	0x4e, 0x2c, 0x0f, 0x2a, 0xfa, 0xa9, 0xd0, 0x15, 0x00, 0x51, 0x25, 0x16, 0x70, 0x1a, 0x1f, 0xa6,
	0x95, 0xcc, 0x11, 0xa1, 0xa5, 0x98, 0x8c, 0x03, 0xa9, 0x73, 0xd5, 0x24, 0xd9, 0x1c, 0xad, 0x42,
	0xcd, 0x0f, 0x62, 0xe2, 0xc9, 0xad, 0xaa, 0x5b, 0x72, 0xc0, 0x5a, 0x85, 0xb2, 0x36, 0xda, 0xb4,
	0xc9, 0x8c, 0xbc, 0xc9, 0xac, 0xab, 0x50, 0xcb, 0xc8, 0x1d, 0x17, 0xb0, 0xd9, 0x84, 0x65, 0xf5,
	0x10, 0x3d, 0x9a, 0xc4, 0x1e, 0xb1, 0xf7, 0x72, 0x8f, 0xe9, 0x79, 0x78, 0x74, 0x8a, 0xde, 0x6e,
	0x41, 0x29, 0x09, 0x7c, 0xcd, 0x5a, 0x0c, 0xb3, 0x8e, 0x2a, 0xe5, 0x1d, 0x65, 0x0f, 0x72, 0xd3,
	0xf8, 0x2c, 0xf2, 0x4f, 0x65, 0x1a, 0xd3, 0x89, 0xa7, 0x2c, 0xb8, 0x34, 0x6d, 0xc1, 0xf7, 0xe0,
	0x52, 0x7a, 0xd0, 0x36, 0x11, 0x5a, 0xed, 0xcf, 0x73, 0x94, 0xfd, 0x9b, 0x01, 0x2b, 0x3d, 0xdd,
	0xed, 0xbd, 0xe4, 0xe0, 0x00, 0xc7, 0x87, 0xe8, 0x55, 0x68, 0x66, 0x2f, 0x1e, 0x4e, 0x0e, 0x22,
	0xae, 0x9f, 0xb0, 0xd1, 0xd7, 0x6f, 0x1e, 0x09, 0x16, 0xc2, 0x58, 0xe2, 0x79, 0x84, 0x31, 0xa9,
	0xaf, 0x2c, 0xac, 0xa7, 0x40, 0xf4, 0x1a, 0xac, 0xc4, 0x44, 0xf8, 0x01, 0xc9, 0xd2, 0x2d, 0xc9,
	0xb8, 0xa6, 0x86, 0xd3, 0x7c, 0x85, 0xc0, 0x34, 0x61, 0x79, 0x22, 0x50, 0x67, 0xb4, 0xff, 0x34,
	0xc0, 0x9c, 0x7e, 0xf6, 0x79, 0x5f, 0x12, 0x9f, 0x40, 0x2b, 0xf3, 0x40, 0xa6, 0x2a, 0x20, 0x3d,
	0xb2, 0xbe, 0x71, 0xfd, 0xd8, 0x46, 0x39, 0x52, 0x2d, 0x67, 0x85, 0x1d, 0x29, 0xdf, 0x3b, 0x50,
	0x4d, 0xdf, 0x22, 0xd2, 0x0e, 0x67, 0xbe, 0x74, 0xb2, 0x70, 0xfb, 0x51, 0xae, 0x1e, 0x75, 0xcd,
	0xf3, 0xa8, 0xc7, 0x84, 0x8a, 0x4f, 0x18, 0x8f, 0xe9, 0xa1, 0xd6, 0x4d, 0x3a, 0xb5, 0xb7, 0xe1,
	0x62, 0x76, 0x28, 0xf1, 0xe8, 0x98, 0xc4, 0xf3, 0x48, 0x66, 0x90, 0xb7, 0xce, 0xd6, 0x90, 0x78,
	0xfb, 0xf3, 0x70, 0xbc, 0x06, 0x8d, 0x28, 0x89, 0xbd, 0x21, 0x66, 0x44, 0xbd, 0x78, 0x54, 0xbf,
	0x2f, 0xa7, 0xa0, 0x78, 0xf1, 0x6c, 0xfc, 0x5d, 0x83, 0x5a, 0x7a, 0x12, 0x43, 0xbf, 0x18, 0xb0,
	0x28, 0x3e, 0x07, 0x50, 0xfb, 0xc4, 0x6a, 0x16, 0xbe, 0x47, 0xac, 0xd7, 0x4f, 0x11, 0xa9, 0x64,
	0x63, 0x7f, 0xf8, 0xfc, 0x85, 0xb9, 0x50, 0x35, 0x9e, 0xff, 0xf1, 0xcf, 0x0f, 0x0b, 0x77, 0xd0,
	0x7b, 0xdd, 0x89, 0x8f, 0xd6, 0xfd, 0xa4, 0x4f, 0xe2, 0x90, 0x70, 0xc2, 0xba, 0x3a, 0x49, 0x57,
	0x3f, 0x1a, 0xeb, 0x3e, 0xd5, 0xa3, 0x67, 0xdd, 0xec, 0xd3, 0x01, 0xfd, 0x64, 0x40, 0x59, 0xf9,
	0x28, 0x5a, 0x3f, 0xbd, 0xd9, 0x5a, 0x97, 0xa7, 0xa4, 0xba, 0x47, 0x03, 0x3f, 0xa3, 0xf8, 0xa0,
	0x40, 0x71, 0xd3, 0x7e, 0x39, 0x8a, 0xb7, 0x8d, 0x75, 0xf4, 0xc2, 0x80, 0x25, 0xe9, 0x7d, 0xe8,
	0xe4, 0x3a, 0x15, 0xfd, 0x71, 0x16, 0xc7, 0x7e, 0x81, 0xe3, 0x9e, 0xf5, 0xf0, 0xa5, 0x38, 0x76,
	0x9f, 0x26, 0x81, 0xff, 0xac, 0x8b, 0x3d, 0xf9, 0x6f, 0xa1, 0xcb, 0x04, 0x0d, 0xc1, 0xfb, 0x57,
	0x03, 0xca, 0xca, 0x5b, 0x67, 0x54, 0x77, 0xc2, 0x80, 0x67, 0x31, 0xff, 0xb4, 0xc0, 0x7c, 0xc7,
	0xda, 0x3a, 0x03, 0xe6, 0x82, 0xeb, 0xef, 0x06, 0x54, 0x53, 0x8b, 0x42, 0x37, 0x4f, 0x64, 0x7b,
	0xc4, 0xc5, 0xad, 0x37, 0x4e, 0x19, 0xad, 0xf9, 0x3f, 0x2c, 0xf0, 0xbf, 0x87, 0xce, 0x82, 0x3f,
	0xfa, 0xd9, 0x80, 0xb2, 0xb2, 0xa1, 0x19, 0x85, 0x9e, 0xf0, 0xaa, 0x59, 0x85, 0x9e, 0x20, 0xba,
	0x7e, 0x26, 0x44, 0x5f, 0x18, 0x50, 0xd1, 0x86, 0x86, 0x6e, 0x9c, 0xec, 0xb5, 0x13, 0xb6, 0x37,
	0x8b, 0xea, 0xd7, 0x92, 0xe4, 0xe7, 0x56, 0xef, 0x2c, 0x75, 0x1c, 0x2b, 0x0a, 0xb7, 0x8d, 0xf5,
	0xcd, 0xb7, 0xe0, 0x15, 0x8f, 0x1e, 0xe4, 0x1c, 0x70, 0x14, 0x14, 0x48, 0x6f, 0x36, 0x52, 0xd6,
	0xbb, 0xe2, 0x0f, 0xf1, 0xae, 0xf1, 0x65, 0x45, 0xaf, 0xf4, 0xcb, 0xf2, 0x2f, 0xf2, 0x9b, 0xff,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xe1, 0x03, 0x5c, 0x9f, 0x0f, 0x00, 0x00,
}
