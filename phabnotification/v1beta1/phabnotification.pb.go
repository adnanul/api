// Code generated by protoc-gen-go. DO NOT EDIT.
// source: phabnotification.proto

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	phabnotification.proto

It has these top-level messages:
	GetResponse
	PhabResult
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetResponse struct {
	Result []*PhabResult `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetResponse) GetResult() []*PhabResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type PhabResult struct {
	Author    *PhabResult_AuthorInfo `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	Task      []*PhabResult_TaskInfo `protobuf:"bytes,2,rep,name=task" json:"task,omitempty"`
	UpdatedAt int64                  `protobuf:"varint,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	HasViewed bool                   `protobuf:"varint,4,opt,name=has_viewed,json=hasViewed" json:"has_viewed,omitempty"`
}

func (m *PhabResult) Reset()                    { *m = PhabResult{} }
func (m *PhabResult) String() string            { return proto.CompactTextString(m) }
func (*PhabResult) ProtoMessage()               {}
func (*PhabResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PhabResult) GetAuthor() *PhabResult_AuthorInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *PhabResult) GetTask() []*PhabResult_TaskInfo {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *PhabResult) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *PhabResult) GetHasViewed() bool {
	if m != nil {
		return m.HasViewed
	}
	return false
}

type PhabResult_AuthorInfo struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Phid string `protobuf:"bytes,2,opt,name=phid" json:"phid,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link" json:"link,omitempty"`
}

func (m *PhabResult_AuthorInfo) Reset()                    { *m = PhabResult_AuthorInfo{} }
func (m *PhabResult_AuthorInfo) String() string            { return proto.CompactTextString(m) }
func (*PhabResult_AuthorInfo) ProtoMessage()               {}
func (*PhabResult_AuthorInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *PhabResult_AuthorInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PhabResult_AuthorInfo) GetPhid() string {
	if m != nil {
		return m.Phid
	}
	return ""
}

func (m *PhabResult_AuthorInfo) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type PhabResult_TaskInfo struct {
	BodyText    string `protobuf:"bytes,1,opt,name=body_text,json=bodyText" json:"body_text,omitempty"`
	ObjectTitle string `protobuf:"bytes,2,opt,name=object_title,json=objectTitle" json:"object_title,omitempty"`
	ObjectLink  string `protobuf:"bytes,3,opt,name=object_link,json=objectLink" json:"object_link,omitempty"`
}

func (m *PhabResult_TaskInfo) Reset()                    { *m = PhabResult_TaskInfo{} }
func (m *PhabResult_TaskInfo) String() string            { return proto.CompactTextString(m) }
func (*PhabResult_TaskInfo) ProtoMessage()               {}
func (*PhabResult_TaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *PhabResult_TaskInfo) GetBodyText() string {
	if m != nil {
		return m.BodyText
	}
	return ""
}

func (m *PhabResult_TaskInfo) GetObjectTitle() string {
	if m != nil {
		return m.ObjectTitle
	}
	return ""
}

func (m *PhabResult_TaskInfo) GetObjectLink() string {
	if m != nil {
		return m.ObjectLink
	}
	return ""
}

func init() {
	proto.RegisterType((*GetResponse)(nil), "appscode.phabnotification.v1beta1.GetResponse")
	proto.RegisterType((*PhabResult)(nil), "appscode.phabnotification.v1beta1.PhabResult")
	proto.RegisterType((*PhabResult_AuthorInfo)(nil), "appscode.phabnotification.v1beta1.PhabResult.AuthorInfo")
	proto.RegisterType((*PhabResult_TaskInfo)(nil), "appscode.phabnotification.v1beta1.PhabResult.TaskInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PhabNotifications service

type PhabNotificationsClient interface {
	// Gets Notifications
	Get(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Update(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error)
}

type phabNotificationsClient struct {
	cc *grpc.ClientConn
}

func NewPhabNotificationsClient(cc *grpc.ClientConn) PhabNotificationsClient {
	return &phabNotificationsClient{cc}
}

func (c *phabNotificationsClient) Get(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/appscode.phabnotification.v1beta1.PhabNotifications/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *phabNotificationsClient) Update(ctx context.Context, in *appscode_dtypes.VoidRequest, opts ...grpc.CallOption) (*appscode_dtypes.VoidResponse, error) {
	out := new(appscode_dtypes.VoidResponse)
	err := grpc.Invoke(ctx, "/appscode.phabnotification.v1beta1.PhabNotifications/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PhabNotifications service

type PhabNotificationsServer interface {
	// Gets Notifications
	Get(context.Context, *appscode_dtypes.VoidRequest) (*GetResponse, error)
	Update(context.Context, *appscode_dtypes.VoidRequest) (*appscode_dtypes.VoidResponse, error)
}

func RegisterPhabNotificationsServer(s *grpc.Server, srv PhabNotificationsServer) {
	s.RegisterService(&_PhabNotifications_serviceDesc, srv)
}

func _PhabNotifications_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhabNotificationsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.phabnotification.v1beta1.PhabNotifications/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhabNotificationsServer).Get(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhabNotifications_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(appscode_dtypes.VoidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhabNotificationsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.phabnotification.v1beta1.PhabNotifications/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhabNotificationsServer).Update(ctx, req.(*appscode_dtypes.VoidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PhabNotifications_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.phabnotification.v1beta1.PhabNotifications",
	HandlerType: (*PhabNotificationsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _PhabNotifications_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PhabNotifications_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "phabnotification.proto",
}

func init() { proto.RegisterFile("phabnotification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb5, 0x49, 0x14, 0x92, 0x09, 0x17, 0x56, 0x02, 0x59, 0xa6, 0xa5, 0x69, 0x4e, 0x01,
	0x81, 0xad, 0x04, 0x09, 0xa1, 0x4a, 0x1c, 0x5a, 0x09, 0x15, 0x10, 0xa0, 0xc8, 0x0a, 0x3d, 0x70,
	0xb1, 0xd6, 0xf1, 0xb4, 0xde, 0x3a, 0xdd, 0x5d, 0xb2, 0x93, 0xd2, 0x5e, 0x2b, 0xee, 0x1c, 0x78,
	0x00, 0x5e, 0x80, 0x2b, 0x4f, 0xc2, 0x2b, 0xf0, 0x20, 0xc8, 0x6b, 0x57, 0x49, 0x8b, 0xa2, 0x36,
	0x97, 0x68, 0xf3, 0xcf, 0xcc, 0x37, 0xff, 0x8e, 0x67, 0xe1, 0x81, 0xc9, 0x44, 0xa2, 0x34, 0xc9,
	0x43, 0x39, 0x11, 0x24, 0xb5, 0x0a, 0xcc, 0x4c, 0x93, 0xe6, 0xdb, 0xc2, 0x18, 0x3b, 0xd1, 0x29,
	0x06, 0xff, 0x25, 0x9c, 0x0e, 0x12, 0x24, 0x31, 0xf0, 0x37, 0x8e, 0xb4, 0x3e, 0x9a, 0x62, 0x28,
	0x8c, 0x0c, 0x85, 0x52, 0x9a, 0x5c, 0xd8, 0x96, 0x00, 0xff, 0xd1, 0x25, 0x60, 0x45, 0x7c, 0xeb,
	0x4a, 0x3c, 0xa5, 0x73, 0x83, 0x36, 0x74, 0xbf, 0x65, 0x42, 0x6f, 0x0c, 0x9d, 0x7d, 0xa4, 0x08,
	0xad, 0xd1, 0xca, 0x22, 0x7f, 0x0d, 0xcd, 0x19, 0xda, 0xf9, 0x94, 0x3c, 0xd6, 0xad, 0xf7, 0x3b,
	0xc3, 0x67, 0xc1, 0x8d, 0x0e, 0x83, 0x51, 0x26, 0x92, 0xc8, 0x15, 0x45, 0x55, 0x71, 0xef, 0x67,
	0x1d, 0x60, 0x21, 0xf3, 0x11, 0x34, 0xc5, 0x9c, 0x32, 0x3d, 0xf3, 0x58, 0x97, 0xf5, 0x3b, 0xc3,
	0x97, 0x6b, 0x51, 0x83, 0x5d, 0x57, 0xfb, 0x56, 0x1d, 0xea, 0xa8, 0xe2, 0xf0, 0x77, 0xd0, 0x20,
	0x61, 0x73, 0xaf, 0xe6, 0x5c, 0xbe, 0x58, 0x8f, 0x37, 0x16, 0x36, 0x77, 0x34, 0xc7, 0xe0, 0x9b,
	0x00, 0x73, 0x93, 0x0a, 0xc2, 0x34, 0x16, 0xe4, 0xd5, 0xbb, 0xac, 0x5f, 0x8f, 0xda, 0x95, 0xb2,
	0x4b, 0x45, 0x38, 0x13, 0x36, 0x3e, 0x95, 0xf8, 0x15, 0x53, 0xaf, 0xd1, 0x65, 0xfd, 0x56, 0xd4,
	0xce, 0x84, 0x3d, 0x70, 0x82, 0xff, 0x06, 0x60, 0xe1, 0x8f, 0x73, 0x68, 0x28, 0x71, 0x82, 0xee,
	0x9e, 0xed, 0xc8, 0x9d, 0x0b, 0xcd, 0x64, 0x32, 0xf5, 0x6a, 0xa5, 0x56, 0x9c, 0x0b, 0x6d, 0x2a,
	0x55, 0xee, 0xba, 0xb5, 0x23, 0x77, 0xf6, 0x73, 0x68, 0x5d, 0x3a, 0xe3, 0x0f, 0xa1, 0x9d, 0xe8,
	0xf4, 0x3c, 0x26, 0x3c, 0xa3, 0x0a, 0xd6, 0x2a, 0x84, 0x31, 0x9e, 0x11, 0xdf, 0x86, 0xbb, 0x3a,
	0x39, 0xc6, 0x09, 0xc5, 0x24, 0x69, 0x8a, 0x15, 0xb8, 0x53, 0x6a, 0xe3, 0x42, 0xe2, 0x5b, 0x50,
	0xfd, 0x8d, 0x97, 0xda, 0x40, 0x29, 0xbd, 0x97, 0x2a, 0x1f, 0xfe, 0xaa, 0xc1, 0xbd, 0x62, 0x24,
	0x1f, 0x97, 0x66, 0x65, 0xf9, 0x77, 0x06, 0xf5, 0x7d, 0x24, 0xbe, 0xb1, 0x18, 0x68, 0xb9, 0x33,
	0xc1, 0x81, 0x96, 0x69, 0x84, 0x5f, 0xe6, 0x68, 0xc9, 0x0f, 0x6e, 0x31, 0xee, 0xa5, 0xa5, 0xea,
	0xed, 0x5c, 0xfc, 0xf6, 0x6a, 0x2d, 0x76, 0xf1, 0xe7, 0xef, 0x8f, 0x5a, 0xc0, 0x9f, 0x86, 0xf1,
	0x95, 0xa5, 0xbc, 0x8e, 0x08, 0x2b, 0x44, 0x78, 0x6c, 0xb5, 0xe2, 0xdf, 0x18, 0x34, 0x3f, 0xb9,
	0x6f, 0x71, 0x83, 0xa9, 0xcd, 0x15, 0xd1, 0xca, 0xc3, 0xab, 0x25, 0x0f, 0x03, 0x7f, 0x2d, 0x0f,
	0x3b, 0xec, 0xc9, 0xde, 0x07, 0x78, 0x3c, 0xd1, 0x27, 0x8b, 0x16, 0xc2, 0xc8, 0x95, 0x77, 0xdf,
	0xbb, 0x7f, 0x7d, 0xb0, 0xa3, 0xe2, 0xa9, 0x8d, 0xd8, 0xe7, 0x3b, 0x55, 0x46, 0xd2, 0x74, 0x8f,
	0xef, 0xf9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xbd, 0xd2, 0x30, 0x18, 0x04, 0x00, 0x00,
}
